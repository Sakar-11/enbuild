{"version":3,"sources":["Redux/loginRedux/loginAction.js","Redux/projectRedux/projectAction.js","Redux/loginRedux/loginActionTypes.js","Redux/checkListRedux/checklistAction.js","Pages/Material/style.module.scss","Redux/registerRedux/registerActionTypes.js","Redux/BarCharts/barChartTypes.js","Pages/Store/style.module.scss","Redux/subProjectRedux/subProjectActionTypes.js","Redux/wbsRedux/wbsTypes.js","Redux/monitoringRedux/monitoringActionTypes.js","Pages/Planning/style.module.scss","Pages/Checklist/checklistUtil.js","Pages/NewProject/userRoles.js","Pages/BarChart/planningEditRoles.js","Pages/ToDos/style.module.scss","Pages/Checklist/style.module.scss","Redux/overviewRedux/overviewActionTypes.js","Pages/ProjectList/project.module.scss","Redux/IssuesRedux/issuesAction.js","Redux/todoRedux/todoAction.js","Redux/planningRedux/planAction.js","Redux/storeRedux/storeActionTypes.js","Components/NavBar/DrawerStyle.js","Redux/subProjectRedux/subProjectAction.js","Pages/Monitoring/style.module.scss","Pages/overview/Barchart.jsx","Pages/Checklist/ChecklistCard.jsx","Pages/Home/PopUp/Input.js","Components/Loading.jsx","Components/NavBar/DrawerItemWithContent.js","Components/NavBar/utils.js","Pages/Material/Material.js","Pages/Planning/Plan.js","Redux/BarCharts/barChartAction.js","Redux/monitoringRedux/monitoringAction.js","Pages/Home/PopUp/Form.js","Redux/projectRedux/projectActionTypes.js","Redux/materialRedux/materialActionTypes.js","Redux/activityRedux/activityActionTypes.js","Redux/checkListRedux/checklistActionTypes.js","Redux/loginRedux/loginReducer.js","Components/NavBar/index.js","Components/NavBar/Drawer.js","Components/NavBar/DrawerData.js","Components/NavBar/NavBarStyle.js","Pages/Checklist/index.jsx","Pages/Checklist/ActivityList.jsx","Pages/Checklist/AddDefault.jsx","Pages/Checklist/EditCheckList.jsx","Pages/NewProject/index.jsx","Pages/NewProject/Step1.jsx","Pages/NewProject/Step2.jsx","Pages/Login.js","Redux/registerRedux/registerAction.js","Pages/ProjectList/index.jsx","Pages/ProjectList/Project.jsx","Pages/SubprojectList/index.jsx","Pages/SubprojectList/Subproject.jsx","Pages/SubprojectList/subproject.module.scss","Pages/Issues/index.js","Components/tableCard.js","Pages/Issues/AddIssue.js","Pages/Issues/TableIssues.js","Pages/Material/index.js","Pages/Material/AddMaterial.js","Pages/Material/ModifyMaterial.js","Pages/ToDos/index.js","Pages/ToDos/ToDo.js","Pages/ToDos/AddToDo.js","Pages/activities/index.jsx","Pages/activities/AddActivity.jsx","Pages/activities/NonEditMainList.jsx","Pages/activities/EditMainList.jsx","Pages/activities/EditModal.jsx","Pages/activities/TableActivities.js","Pages/overview/index.jsx","Pages/overview/VerticleList.jsx","Redux/overviewRedux/overviewAction.js","Redux/wbsRedux/wbsAction.js","Pages/activities/SubActivities.jsx","Pages/activities/Tasks/AddTasks.jsx","Pages/activities/SubTaskData.jsx","Pages/activities/Tasks/EditSubTask.jsx","Pages/Planning/Display.js","Pages/Planning/AddPlan.js","Pages/Store/Display.js","Pages/Store/Material.js","Pages/Store/CreateIssue.js","Pages/Store/SendMaterialReq.js","Pages/Store/ModifyMaterial.js","Pages/Store/IssueHistory.js","Pages/Store/ApproveIssue.js","Pages/Checklist/ActivityChecklist.jsx","Pages/Checklist/AddChecklist.jsx","Pages/BarChart/index.jsx","Pages/BarChart/Item.jsx","Pages/Monitoring/Display.js","Pages/Monitoring/EditCompletion.js","Pages/Monitoring/TableMonitoring.js","Pages/EditUser/index.jsx","Pages/Home/PopUp/Visitor.js","Pages/AdminDashboard/index.jsx","Redux/storeRedux/storeAction.js","Pages/Daily Progress Report/DailyProgressReport.js","Pages/Daily Progress Report/ProgressCard.js","Pages/Daily Progress Report/DailyProgressCards.js","Pages/Library/index.jsx","Pages/Library/EditMaterial.jsx","Pages/Library/AddMaterial.jsx","Pages/Library/Labour.js","Pages/Library/EditLabour.jsx","Pages/Library/AddLabour.jsx","Pages/Library/Equipment.jsx","Pages/Library/EditEquipment.jsx","Pages/Library/AddEquipment.jsx","Pages/ProtectedRoute.js","Components/ProgessBar.jsx","Pages/activities/SubTaskTable.jsx","Pages/Monitoring/Barchart.jsx","Pages/Monitoring/Activity.js","Redux/IssuesRedux/issuesActionTypes.js","config.js","Redux/planningRedux/planActionTypes.js","Pages/Library/style.module.scss","Redux/activityRedux/activityAction.js","Redux/todoRedux/todoActionTypes.js","Redux/materialRedux/materialAction.js","firebase.js","Pages/activities/AddRoadActivity.jsx","Pages/activities/defaultActivities/defaultArray.js","Pages/Home/PopUp/FormButton.js","Redux/registerRedux/registerReducer.js","Redux/projectRedux/projectReducer.js","Redux/IssuesRedux/issuesReducer.js","Redux/materialRedux/materialReducer.js","Redux/todoRedux/todoReducer.js","Redux/planningRedux/planReducer.js","Redux/storeRedux/storeReducer.js","Redux/subProjectRedux/subProjectReducer.js","Redux/activityRedux/activityReducer.js","Redux/wbsRedux/wbsReducer.js","Redux/overviewRedux/overviewReducer.js","Redux/checkListRedux/checklistReducer.js","Redux/BarCharts/barChartReducer.js","Redux/monitoringRedux/monitoringReducer.js","Redux/rootReducer.js","Redux/store.js","Pages/Register.js","Pages/wbs/Barchart.jsx","Pages/wbs/wbs.jsx","Pages/overview/ViewUpdates.jsx","Pages/Checklist/DetailsChecklist.jsx","Pages/AddMaterialList/DisplayMaterial.jsx","Pages/AddMaterialList/index.jsx","Pages/Support/index.js","Pages/Home/components/TaglineLoginButton.jsx","Pages/Home/components/Timeline.jsx","Pages/Home/components/Objective.jsx","Pages/Home/assets/homepage1.png","Pages/Home/assets/homepage2.png","Pages/Home/components/Services.jsx","Pages/Home/components/Problems.jsx","Pages/Home/assets/team.svg","Pages/Home/assets/business.PNG","Pages/Home/assets/founder.PNG","Pages/Home/assets/development.PNG","Pages/Home/components/About.jsx","Pages/Home/components/Demo.jsx","Pages/Home/components/ContactUs.jsx","Pages/Home/index.jsx","Pages/index.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["notificationOpts","title","message","position","autoDismiss","loginSuccess","username","user","type","LOGIN_SUCCESS","logout","dispatch","a","reqData","global","config","secureStorage","getItem","notification_id","clear","axios","post","backendURL","LOGOUT","login","password","console","LOGIN_REQUEST","res","setItem","data","token","_id","firstName","lastName","isAdmin","mainAdmin","organization","error","LOGIN_FAILURE","Notifications","successEditUserMsg","errorEditUserMsg","getUserProjects","USER_PROJECTS_LOADING","USER_PROJECTS_SUCCESS","payload","USER_PROJECTS_ERROR","getUsers","projectId","GET_USER_LOADING","get","GET_USER_SUCCESS","GET_USER_FAILURE","deleteProject","log","success","editUserNotificationUtil","addProject","project","ADD_PROJECT_LOADING","response","PROJECT_SUCCESS","PROJECT_FAILURE","REDIRECT_TO_JOIN","getSuccessNotification","msg","errorNotificationOpts","getDefaultChecklist","LOADING_GET_CHECKLIST","SUCCESS_GET_DEFAULT_CHECKLIST","ERROR_GET_CHECKLIST","updateDefaultChecklist","id","checklist","LOADING_UPDATE_CHECKLIST","newChecklist","SUCCESS_UPDATE_DEFAULT_CHECKLIST","addChecklist","LOADING_ADD_CHECKLIST","fetchCheckList","subprojectId","subActivity","ERROR_ADD_CHECKLIST","notify","SUCCESS_GET_CHECKLIST","approveCheckList","approveImage","forapproval","module","exports","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","USERNAME_EXISTS","SUCCESS_BAR_CHART_STORE","ERROR","LOADING","SUCCESS_GET_DEFAULT_ACTIVITY_NAMES","GET_SUBPROJECTS","LOADING_SUBPROJECTS","ERROR_SUBPROJECTS","SUCCESS_GET_WBS","ERROR_GET_WBS","LOADING_WBS","ADD_LOADING","MONITORING_SUCCESS","MONITORING_ERROR","verifyValidity","role","userRoleOptions","key","value","roles","SUCCESS_GET_UPDATES_DETAILS","ERROR_GET_UPDATES_DETAILS","createSuccess","createFailure","removeSuccess","removeFailure","askApprovalSuccess","askApprovalFailure","loadingActionHelper","ISSUE_LOADING","getIssues","subProjectId","ISSUE_GET_SUCCESS","ISSUE_GET_FAILURE","createIssue","issue","ISSUE_ADD_SUCCESS","ISSUE_ADD_FAILURE","removeIssue","issueId","ISSUE_REMOVE_SUCCESS","warning","ISSUE_REMOVE_FAILURE","askApproval","ISSUE_ASK_APPROVAL_SUCCESS","ISSUE_ASK_APPROVAL_FAILURE","successNotificationOpts","getTodo","fullName","find","item","filter","GET_TODO","TODO_SUCCESS","TODO_FAILURE","addTodo","todo","deleteTodo","delete","updateTodo","put","getPlan","GET_PLAN","PLAN_SUCCESS","PLAN_FAILURE","addPlan","plan","updatePlan","planId","deletePlan","MATERIAL_FAILURE","MATERIAL_SUCCESS","GET_MATERIAL","GET_STORE_SUCCESS","GET_STORE_FAILURE","ADD_ISSUE_HISTORY_LOADING","ISSUE_HISTORY_SUCCESS","ISSUE_HISTORY_ERROR","ADD_ISSUE","ADD_MATERIAL_REQ","MATERIAL_REQ_LOADING","MATERIAL_REQ_SUCCESS","MATERIAL_REQ_ERROR","MATERIALS_LIST_LOADING","MATERIALS_LIST_FAILURE","MATERIALS_LIST_SUCCESS","REJECT_MATERIAL_REQ","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","flexDirection","height","content","paddingLeft","spacing","linkDrawer","textDecoration","fontSize","color","fontWeight","textTransform","marginTop","nested","nested2","projectName","textAlign","marginRight","padding","getSubprojects","body","err","BarchartData","props","accNames","percentage","percentage1","Chart","register","registerables","createDataset","arr","label","percentageLabel","backgroundColor","push","percentage1Label","state","chartData","labels","datasets","style","this","options","maintainAspectRatio","Component","DetailsDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","useState","open","aria-labelledby","container","justify","src","checkListImage","variant","checklistTitle","checklistId","Date","createdDate","toDateString","submittedBy","checkedBy","approvedBy","marginBottom","Object","keys","subChecklist","map","index","point","num","description","size","startIcon","onClick","toggleDialog","ChecklistCard","details","setDetails","xs","sm","prev","elevation","location","isCheckVisible","checkable","disabled","e","preventDefault","isApproveVisible","approvable","margin","multiple","className","onDone","file","handelApproveImg","base64","alert","Input","name","onChange","other","helperText","Loading","in","loading","transitionDelay","unmountOnExit","top","left","transform","DrawerItemWithContent","classes","setOpen","open2","setOpen2","handleClick2","button","icon","primary","timeout","subItem","tt","to","route","toggleDrawer","setupNavTitle","loc","setState","setIsBack","temp","split","length","charAt","toUpperCase","slice","materialCard","Material","materialName","materialQuantity","materialLimit","editMaterial","expectedDate","addDeliveryDate","deleteMaterial","showActions","deliveredDate","addRemark","materialRemark","isRemark","isEditable","border","parseInt","toggleRemark","setToggleRemark","remark","setRemark","toggleDate","setToggleDate","deliveryDate","setDeliveryDate","undefined","parse","toString","substring","reverse","join","marginLeft","required","target","autoFocus","utils","DateFnsUtils","justifyContent","disableToolbar","format","date","KeyboardButtonProps","PlanCard","Plan","toggleDelay","setToggleDelay","reason","setReason","planCompleted","deadline","getMonth","getDate","getFullYear","planTitle","subheader","createdAt","planDetail","delayReason","show","fullWidth","editReason","editPlanStatus","errorActionHelper","successBarChartStore","getBarChartData","newData","saveBarChart","main","addLodingActionHelper","successActionHelper","getActivities","one","visibility","updateActivity","useForm","initialFValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","resetForm","Form","children","autoComplete","GET_PROJECT","ACTIVITIES_SUCCESS","ACTIVITIES_FAILURE","ACTIVITIES_LOADING","FETCH_ACTIVITIES_LOADING","MATERIAL_ERROR","GET_STORE","STORE_FAILURE","STORE_SUCCESS","ERROR_GET_ACTIVITY_DETAILS","SUCCESS_GET_ACTIVITY_DETAILS","SUCCESS_GET_ACTIVITY_UPDATE_DETAILS","SUCCESS_UPDATE_ACTIVITY_DETAILS","SUCCESS_UPDATE_DETAILS","ERROR_UPDATE_ACTIVITY_DETAILS","SET_LOADING","DONE_UPDATING_ACTIVITY","CLEAR_CHECKED_ARRAY","SUCCESS_GET_DEFAULT_ACTIVITY","SUCCESS_ADD_CHECKLIST","SUCCESS_UPDATE_CHECKLIST","ERROR_UPDATE_CHECKLIST","initalState","loggedIn","loginReducer","action","redirectToJoin","connect","userProjects","projectReducer","subProjects","subProjectReducer","setTitle","setDrawer","setProjectName","subprojectName","setSubprojectName","isLogout","setLogout","isBack","isDrawerVisible","setDrawerVisible","drawerInvisibleRoutes","logoutInVisibleRoutes","his","useHistory","event","prevState","handleProjectName","listen","pathname","useEffect","Showlogo","window","innerWidth","menuButton","edge","aria-label","goBack","homepageIcon","fontFamily","navGrid","spy","smooth","cursor","isOpen","subprojects","handleSubProjectName","drawerDataUtil","drawerItems","anchor","paper","onOpen","onClose","rolesWithQualityDrawerVisible","rolesWithSafetyDrawerVisible","rolesWithPlanningDrawerVisible","rolesWithEditUserVisible","href","homepageDrawerItems","dashboard","mainDrawer","editUsers","rolesWithStoreDrawerVisible","storeDrawer","qualityItems","safetyItems","planningItems","libraryItems","flexGrow","active","alignItems","flex","up","inputRoot","sectionDesktop","sectionMobile","Checklist","handleChecklistDeleteCount","noOfChecklist","splice","handleChecklistAddCount","handleModalOpen","modalOpen","handleAutoComplete","alertChecklistTitle","alertChecklistTitleField","defaultChecklist","obj","handleContent","newContent","guidGenerator","S4","Math","random","submitActivity","randomId","flag","i","match","params","editActivity","defChecklist","editIndex","checklistTitleEdit","handleEditModalOpen","handleTaskChange","editmodalOpen","isAddVisible","defaultChecklistID","history","replace","newProps","forceUpdate","update","files","Papa","complete","results","elem","dis","direction","accept","importExcel","iterList","path","checkListReducer","heading","typography","pxToRem","fontWeightRegular","ActivityList","aria-controls","AddDefault","createFilterOptions","maxWidth","newValue","inputValue","filterOptions","filtered","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","_","times","indexValue","Fragment","EditCheckList","backButton","instructions","notifications","created","activeStep","setActiveStep","setUpdate","subProjectName","projectType","flatNumber","floorNumber","projectDescription","userNumber","numberOfProjects","totalUsers","users","userSuggestions","tempUserRoles","setTempUserRoles","tempUsers","setTempUsers","steps","handleBack","addNewProject","newSubProjectName","newFloorNumber","newFlatNumber","handleSecondStep","handleChange","handleDropdownChange","handleUsers","tempData","tempReference","handleUserRoles","alternativeLabel","onSubmit","tempUser","tempTotalUsers","tempIndex","defaultValue","onInputChange","temp2","table","getStepContent","Step1","multiline","placeholder","rows","getOptionSelected","Step2","Login","handleUsernameChange","handlePasswordChange","handleForgotPassword","handleSubmit","fromRegister","store","addNotification","animationIn","animationOut","dismiss","duration","pauseOnHover","component","avatar","form","noValidate","submit","mt","withStyles","palette","secondary","unameNotificationOpts","failureNotificationOpts","registerFailure","email","phone","requestAdmin","ProjectList","toggleLoading","goToAddProject","admin","userProjectLoading","userProjectSuccess","userProjectIsError","flexWrap","setLoading","ids","Project","handleExpandClick","expanded","cardClicked","Style","card","noWrap","project__flat","expand","inner","isError","Subproject","Issues","saveIssueSectionToState","section","saveIssueDescriptionToState","desc","savelocationToState","savepriorityToState","val","priority","toggleCreateNewIssue","toggleOpenTable","isOpenTable","toggleCloseTable","handleOpen","handleClose","now","images","constPics","forEach","ele","saveIssue","savePicsToState","setImages","list","viewImages","role2","isApprovable","initialData","subtitle","issuesData","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","boxShadow","alt","issuesReducer","innerRoot","issueCard","OurTable","nonApproved","setNonApproved","status","pics","approved","titleTypographyProps","wrap","InputProps","inputProps","min","labelId","const_pics","withRouter","setData","then","catch","lg","print","columns","sort","selectableRows","responsive","pagination","download","viewColumns","search","Display","handleExpectedDate","handleDeliveryDate","newMaterials","allMaterials","eachMaterial","materialID","change","toggleCreateNewMaterial","isCreateNewMaterial","toggleModifyMaterialComponent","isModifyMaterial","editMaterialId","removeMaterial","requiredMaterial","updateMaterial","handleRemark","saveMaterial","finalMaterial","addMaterial","storeData","getMaterial","getStore","material","button__display","all__material","materialReducer","AddMaterial","materials","setMaterials","toggleText","setToggleText","tempMaterials","Set","add","Array","from","create__material","add__material__header","md","isInteger","ModifyMaterial","modify__material","DisplayToDo","handleChangeUser","userName","userId","handleChangeDate","toggleCreateNewTodo","taskTitle","taskDetail","isCreateNewTodo","requiredTodo","eachTodo","todoId","saveTodo","finalTodo","allTodos","all__todo","todoRemark","todoReducer","todoCard","ToDo","AddToDo","setUsers","create__todo","add__todo__header","inputVariant","minDate","require","Activities","panel","newExpanded","submitActivityList","updateDefaultActivities","defaultActivity","getDefaultActivities","changeAct","fetchData","tempactivities","tempA","tempF","temparr","flatData","activity","sub","flats","link","entries","subTitle","subactivity","floors","subactivities","tableData","handleModalRoadOpen","roadModalOpen","activityName","handleActivityChange","alertSubActivity","alertSubActivityField","getAllSubAc","deff","allSub","acc","subacc","makeValidLink","toLowerCase","subActivityName","allsub","matchFound","element","newActivity","newSubActivity","mainLink","handleRoadEdit","roadActivityName","isEditRoadActivity","EditRoadActivity","newRoad","activeActivityIndex","submitRoadActivity","updateSubActivityNameUI","activityIndex","subActivityIndex","tempArray","newAcc","updateMainList","updateSubList","subIndex","subProject","isFetched","per","percentageActivity","accName","updateActivityName","isUpdateSuccess","activityReducer","monitoring","monitoringReducer","AddActivity","MainList","droppableId","provided","ref","innerRef","droppableProps","draggableId","TransitionProps","draggableProps","expandIcon","dragHandleProps","toFixed","roadActivityIndex","eachSubActivity","EditMainList","isEditOpen","setEditOpen","editActivityValue","setActivityValue","setActivityIndex","setSubActivityIndex","checked","stopPropagation","control","EditModal","setValue","row","defaultExpanded","lab","Overview","activityDetails","safetyCheckList","safetyIssue","qualityCheckList","qualityIssue","actualCompletionByPercent","estimatedCompletionByPercent","actualCompletionByCost","estimatedCompletionByCost","activityNames","safety","quality","total","monitoringRes","JSON","stringify","estimatedcompletion_by_cost","estimatedcompletion","Number","actualcompletion_by_cost","actualcompletion","isNaN","getAllUpdatesDetails","newPer","DataAcc","overviewReducer","btn","borderRadius","footer","footerlink","getcol","noUpdates","VerticleList","detail","detailIndex","updatedPercentage","getWbs","sDate","eDate","SubActivities","head","light","common","white","TableCell","fetchPercentage","temptaskPercentage","taskPercentage","fetchPercentageSubTask","subindex","SubtaskPercentage","isSubTask","handleEdit","quantity","unit","isEdit","taskName","taskQuantity","taskUnit","taskIndex","handleSubtask","submitTask","arrayAcc","updateCondition","submitSubTask","randomid","subArr","subTask","taskSubName","taskSubQuantity","taskSubUnit","deleteTask","deleteSubTask","subTaskIndex","updateTaskActivityDetails","checkedArray","isUpdated","clearActivityCheckedArray","doneUpdating","subProjectDetails","floorPerc","task","subtask","getTaskActivityDetails","marginVertical","paddingTop","paddingBottom","AddTasks","SubTaskData","updateSubTask","subTaskPanaroma","subTaskPercentage","updateDetails","panaroma","reload","isUpdatedDetails","handlePanaroma","addPercentage","subTaskData","activityUpdateDetails","getUpdateDetails","subPercentage","EditSubTask","toggleCreateNewPlan","isCreateNewPlan","requiredPlan","eachPlan","newPlans","allPlans","editPlanId","savePlan","n","finalPlan","editRoles","isDelayed","all__plan","editPlan","planReducer","create__plan","add__plan__header","Store","cancelButtonUtil","openingBalance","closingBalance","toggleIssueMaterialComponent","isIssueMaterial","toggleMaterialReqComponent","isMaterialReq","editMaterialName","issueMaterial","materialReq","materialReqId","updateStore","isApproveIssue","isDataFetched","deleteMaterialReqIssues","no__material","storeReducer","getStoreSuccess","getStoreLoading","toShow","setToShow","toShowReq","setToShowReq","addIssue","projects","projectNames","totalProjects","setSub","setError","addMaterialReq","issueLoading","issueHistory","toLocaleDateString","toLocaleTimeString","materialReqLoading","materialReqIssues","getMaterialReqIssues","approveMaterialReq","rejectMaterialReq","quan","ActivityChecklist","filterValues","tasks","userAction","forApproval","bullet","pos","AddChecklist","saveCheckList","finalChecklist","checklistImage","allCheckLists","handleRadio","newAllCheckLists","handleImage","img","count","findChecklist","GreenRadio","green","BlueRadio","cyan","RedRadio","red","create__checklist","checkListTitle","defaultActivityNames","barChartReducer","csvFile","setCsvFile","setCsvArray","setsubmit","handleStartDate","handleEndDate","reader","FileReader","onload","str","delim","headers","indexOf","trim","newArray","reduce","header","Activity","date2","toISOString","date3","processCSV","result","readAsText","endIcon","startdate","enddate","startcost","endcost","Item","start","setStart","end","setEnd","startDate","setStartDate","setEndDate","Monitoring","editActivityName","activities","isEditCompletion","handleClick","newActivities","cost","all__activity","activityRemark","EditCompletion","create__activity","remarks","userRolesLoading","userRoles","loadingRoles","mainLoading","setMainLoading","setRefreshPage","loadUser","responseUsers","newItem","userList","tem","fullname","mobile","Visitor","waitBeforeShow","recordForEdit","setRecordForEdit","fieldValues","test","every","x","setShow","setTimeout","Header","Title","outline","Body","addorEdit","align","updatedusers","setUpdatedUsers","openApproveSuccess","setOpenApproveSuccess","openRejectSuccess","setOpenRejectSuccess","openApproveFailure","setOpenApproveFailure","openRejectFailure","setOpenRejectFailure","organizations","setOrganizations","tempusers","fetchUsers","handleApprove","userindex","findIndex","temporganizations","org","newuser","TransitionLeft","CssTextField","borderColor","TextField","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","severity","borderTop","handleRequests","maxHeight","overflowY","overflowX","successNotificationIssue","successMaterialReq","successMaterialReqApproval","successMaterialReqRejection","patch","addMaterialList","DailyProgressReport","dpr","setDpr","dates","setDates","addClicked","setAddClicked","setDate","setActivity","setDescription","qty","setQty","labor","setLabor","numberOfLabor","setNumberOfLabor","clicked","setClicked","openAddSuccess","setOpenAddSuccess","openAddFailure","setOpenAddFailure","setMaterial","numberOfMaterial","setNumberOfMaterial","materialData","setmaterialData","labourData","setLabourData","equipmentData","setEquipmentData","activityData","setactivityData","miscellaneous","setMiscellaneous","numberOfMiscellaneous","setNumberOfMiscellaneous","equipment","setEquipment","numberOfEquipment","setNumberOfEquipment","datesArr","res1","res2","response2","getDprData","libraryData","addButtonHandler","labour","mtr","eq","reqBody","work_desc","quantity_work","tempDpr","tempDates","includes","unshift","handleCardClick","tempArr","number","Labour","labourName","handleLaborDeleteCount","materialUnit","handleMaterialDeleteCount","equipmentName","handleEquipmentDeleteCount","handleMiscellaneousDeleteCount","dprs","handleBackButtonClick","handleDelete","temp_dates","temp_dpr","date_index","ProgressCard","styles","background","font","openDeleteFailure","setOpenDeleteFailure","mat","gutterBottom","onRowsDelete","row_data","customBodyRender","tableMeta","toggleEditMaterial","rowIndex","singleMaterial","materialRate","materialAmount","isEditMaterial","editId","handleActivity","finalEquipment","objIndex","getLibraryData","EditMaterial","setActivities","onKeyPress","charCode","toggleEditLabour","deleteLabour","singleLabour","isEditLabour","number_of_labourers","labourRate","labourAmount","toggleCreateNewLabour","isCreateNewLabour","updateLabour","finalLabour","saveLabour","getLabourData","toggleEditEquipment","EditLabour","setlabour","AddLabour","deleteEquipment","handleMainActivity","mainActivity","singleEquipment","isEditEquipment","equipmentRate","equipmentAmount","equipmentQuantity","toggleCreateNewEquipment","isCreateNewEquipment","equipementName","updateEquipment","saveEquipment","getEquipmentData","EditEquipment","setequipment","AddEquipment","rest","credentialsValid","setCredentialsValid","validated","setValidated","resp","verifyToken","render","Typography","bar","LinearProgress","box","webkitBoxShadow","minWidth","image","imageFull","SubTaskTable","isModalOpen","setIsModalOpen","modelImageUrl","setModelImageUrl","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Accordion","AccordionSummary","Grid","Edit","AccordionDetails","Slider","valueLabelDisplay","step","marks","max","Update","Divider","Card","CardContent","url","label1","setLabel1","label2","setLabel2","value1","value2","setValue2","RadioGroup","FormControlLabel","Radio","parseFloat","verticalAlign","SecureStorage","CryptoJS","localStorage","hash","SHA256","process","encrypt","AES","decrypt","enc","Utf8","successUpdateDets","perc","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","nullContent","registered","registerReducer","initialState","userProjectError","excludedActivities","activitiesError","fetchActivitiesLoading","userRolesSuccess","userRolesFailure","getStoreError","issueError","materialListLoading","materialListSuccess","materialListFailure","materialReqError","updateError","isUpdateError","floorPercentage","newWbs","misReducer","rootReducer","combineReducers","materialListError","wbsReducer","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Register","repassword","redirect","Container","CssBaseline","Avatar","LockOutlined","Link","Wbs","wbsTotal","wbsActivityNames","taskperArr","wbsActivityPer","FormControl","InputLabel","Select","MenuItem","Save","Barchart","ViewUpdates","updateDataSorted","DisplayMaterial","AddMaterialList","refreshPage","materialCount","setMaterialCount","materialsList","reset","IconButton","Delete","AddCircleOutline","addMaterialsLoading","addMaterialsFailure","addMaterialsSuccess","Support","heroContent","heroButtons","cardGrid","cardMedia","cardContent","textShadow","paragraph","Timeline","contentArrowStyle","borderRight","iconStyle","LaunchOutlined","CodeOutlined","EmojiObjectsOutlined","Objective","AOS","init","data-aos","text","gridImageContainer","imgFluid","paragraphTitle","paragraphContent","mainGrid","hr","borderStyle","borderTopStyle","borderWidth","Services","img1","listStyle","img2","Problems","listStyleType","About","aboutus","business","development","Demo","paddingRight","controls","playing","Home","routes","isProtected","NewProject","BarChart","EditUser","AdminDashboard","Library","Equipment","createMuiTheme","MuiButton","MuiTextField","MuiCard","App","ThemeProvider","fallback","Routes","ProtectedRoute","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ga4react","GA4React","initialize","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d19e25c.chunk.js","sourcesContent":["import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REDIRECT_TO_JOIN,\r\n} from \"./loginActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nimport Notifications from \"react-notification-system-redux\";\r\nconst notificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Invalid Username or Password\",\r\n  position: \"tr\",\r\n  autoDismiss: 2,\r\n};\r\n\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (username, user) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    username: username,\r\n    user: user,\r\n  };\r\n};\r\n\r\nexport const loginFailure = error => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const redirectToJoinPage = () => {\r\n  return {\r\n    type: REDIRECT_TO_JOIN,\r\n  };\r\n};\r\nexport const logoutRequest = () => {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async function (dispatch) {\r\n    var reqData = {\r\n      username: global.config.secureStorage.getItem(\"username\"),\r\n      notification_id: global.config.secureStorage.getItem(\"notification_id\"),\r\n    };\r\n    global.config.secureStorage.clear();\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/users/removeNotificationId`,\r\n        reqData\r\n      );\r\n    } catch (err) {}\r\n    dispatch(logoutRequest());\r\n  };\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  console.clear();\r\n\r\n  var reqData = {\r\n    username: username,\r\n    password: password,\r\n    notification_id: global.config.secureStorage.getItem(\"notification_id\"),\r\n  };\r\n  return async function (dispatch) {\r\n    dispatch(loginRequest());\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/login`,\r\n        reqData\r\n      );\r\n      global.config.secureStorage.setItem(\r\n        \"construction-auth-token\",\r\n        res.data.token\r\n      );\r\n      global.config.secureStorage.setItem(\"user_id\", res.data.user._id);\r\n      global.config.secureStorage.setItem(\r\n        \"user_fullname\",\r\n        res.data.user.firstName + \" \" + res.data.user.lastName\r\n      );\r\n      const isAdmin = res.data.user.isAdmin ? res.data.user.isAdmin : false;\r\n      const mainAdmin = res.data.user.mainAdmin\r\n        ? res.data.user.mainAdmin\r\n        : false;\r\n      global.config.secureStorage.setItem(\"username\", username);\r\n      global.config.secureStorage.setItem(\"is_admin\", isAdmin);\r\n      global.config.secureStorage.setItem(\"main_admin\", mainAdmin);\r\n      if (isAdmin) {\r\n        global.config.secureStorage.setItem(\r\n          \"organization\",\r\n          res.data.user.organization\r\n        );\r\n      }\r\n      dispatch(loginSuccess(username, res.data.user));\r\n    } catch (err) {\r\n      dispatch(loginFailure(err));\r\n      dispatch(Notifications.error(notificationOpts));\r\n    }\r\n  };\r\n};\r\n","import {\r\n  GET_PROJECT,\r\n  PROJECT_FAILURE,\r\n  PROJECT_SUCCESS,\r\n  ADD_PROJECT_LOADING,\r\n  USER_PROJECTS_LOADING,\r\n  USER_PROJECTS_ERROR,\r\n  USER_PROJECTS_SUCCESS,\r\n  ACTIVITIES_FAILURE,\r\n  ACTIVITIES_SUCCESS,\r\n  ACTIVITIES_LOADING,\r\n  FETCH_ACTIVITIES_LOADING,\r\n  GET_USER_LOADING,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAILURE,\r\n} from \"./projectActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Project successfully created!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successEditUserMsg = {\r\n  title: \"Success\",\r\n  message: \"Users Edited successfully\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst errorEditUserMsg = {\r\n  title: \"Error!!\",\r\n  message: \"Something went wrong\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nexport const getUserProjects = username => async dispatch => {\r\n  dispatch({\r\n    type: USER_PROJECTS_LOADING,\r\n  });\r\n  var data = { username };\r\n  try {\r\n    const res = await axios.post(\r\n      `${global.config.backendURL}/project/getUserProjects`,\r\n      data\r\n    );\r\n    //\r\n    dispatch({\r\n      type: USER_PROJECTS_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    //\r\n    dispatch({\r\n      type: USER_PROJECTS_ERROR,\r\n      error: err.message,\r\n    });\r\n  }\r\n};\r\n// GET user associated with the project:\r\nexport const getUsers = () => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: GET_USER_LOADING,\r\n  });\r\n  try {\r\n    const res = await axios.get(\r\n      `${global.config.backendURL}/project/getUserRolesByProjectId/${projectId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_USER_FAILURE,\r\n      error: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProject = projectId => async dispatch => {\r\n  let username = global.config.secureStorage.getItem(\"username\");\r\n  console.log(\"username\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/project/deleteProjectById/${projectId}/${username}`\r\n    );\r\n    dispatch(\r\n      Notifications.success({\r\n        title: \"Success\",\r\n        message: \"Project Deleted Successfully\",\r\n        position: \"tr\",\r\n        autoDismiss: 3,\r\n      })\r\n    );\r\n    dispatch(getUserProjects(username));\r\n  } catch (error) {\r\n    dispatch(\r\n      Notifications.error({\r\n        title: \"Error\",\r\n        message: \"Project Deletion Failed\",\r\n        position: \"tr\",\r\n        autoDismiss: 3,\r\n      })\r\n    );\r\n  }\r\n};\r\nexport const getAllProjects = project => async dispatch => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/project/getAllProjects`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: response.data,\r\n      success: true,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_FAILURE,\r\n      payload: error.message,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\nexport const projectLoading = () => {\r\n  return {\r\n    type: ADD_PROJECT_LOADING,\r\n  };\r\n};\r\n\r\nexport const editUserNotificationUtil = success => dispatch => {\r\n  if (success) {\r\n    dispatch(Notifications.success(successEditUserMsg));\r\n  } else {\r\n    dispatch(Notifications.error(errorEditUserMsg));\r\n  }\r\n};\r\n\r\nexport const addProject = project => async dispatch => {\r\n  //\r\n  dispatch(projectLoading());\r\n  try {\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/project/addProject`,\r\n      project\r\n    );\r\n\r\n    dispatch({\r\n      type: PROJECT_SUCCESS,\r\n      payload: response.data,\r\n      success: true,\r\n    });\r\n    // dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_FAILURE,\r\n      payload: error.message,\r\n      success: false,\r\n    });\r\n    // dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\n// The function is written in store reducer now\r\n\r\n// export const addMaterialList = materials => async dispatch => {\r\n//   //\r\n//   dispatch({ type: MATERIALS_LOADING });\r\n//   await axios\r\n//     .post(`${global.config.backendURL}/project/addmaterials`, {\r\n//       payload: materials,\r\n//       projectId: global.config.secureStorage.getItem(\"projectId\")\r\n//     })\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: MATERIALS_SUCCESS,\r\n//         payload: res.data,\r\n//         success: true\r\n//       });\r\n//       dispatch(\r\n//         Notifications.success({\r\n//           title: \"Success\",\r\n//           message: \"Materials Added\",\r\n//           position: \"tr\",\r\n//           autoDismiss: 3\r\n//         })\r\n//       );\r\n//     })\r\n//     .catch(error => {\r\n//       dispatch({\r\n//         type: MATERIALS_FAILURE,\r\n//         payload: error.message,\r\n//         success: false\r\n//       });\r\n//       dispatch(\r\n//         Notifications.error({\r\n//           title: \"Error\",\r\n//           message: \"Something Went Wrong!!\",\r\n//           position: \"tr\",\r\n//           autoDismiss: 3\r\n//         })\r\n//       );\r\n//     });\r\n// };\r\n\r\nexport const updateActivities = excludes => async dispatch => {\r\n  dispatch({ type: ACTIVITIES_LOADING });\r\n  await axios\r\n    .put(`${global.config.backendURL}/project/updateActivities`, {\r\n      payload: excludes,\r\n      projectId: global.config.secureStorage.getItem(\"projectId\"),\r\n    })\r\n    .then(res => {\r\n      dispatch({\r\n        type: ACTIVITIES_SUCCESS,\r\n        payload: res.data,\r\n        success: true,\r\n      });\r\n      dispatch(\r\n        Notifications.success({\r\n          title: \"Success\",\r\n          message: \"Activities Updated !\",\r\n          position: \"tr\",\r\n          autoDismiss: 3,\r\n        })\r\n      );\r\n      fetchExcludedActivities();\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTIVITIES_FAILURE,\r\n        payload: error.message,\r\n        success: false,\r\n      });\r\n      dispatch(\r\n        Notifications.error({\r\n          title: \"Error\",\r\n          message: \"Something Went Wrong!!\",\r\n          position: \"tr\",\r\n          autoDismiss: 3,\r\n        })\r\n      );\r\n    });\r\n};\r\n\r\nexport const fetchExcludedActivities = () => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({ type: FETCH_ACTIVITIES_LOADING });\r\n  await axios\r\n    .get(\r\n      `${global.config.backendURL}/project/getExcludedActivities/${projectId}`\r\n    )\r\n    .then(res => {\r\n      //\r\n      dispatch({\r\n        type: ACTIVITIES_SUCCESS,\r\n        payload: res.data,\r\n        success: true,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTIVITIES_FAILURE,\r\n        payload: error.message,\r\n        success: false,\r\n      });\r\n      dispatch(\r\n        Notifications.error({\r\n          title: \"Error\",\r\n          message: \"Something Went Wrong!!\",\r\n          position: \"tr\",\r\n          autoDismiss: 3,\r\n        })\r\n      );\r\n    });\r\n};\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const REDIRECT_TO_JOIN = \"REDIRECT_TO_JOIN\";\r\n","import {\r\n  LOADING_ADD_CHECKLIST,\r\n  ERROR_ADD_CHECKLIST,\r\n  SUCCESS_ADD_CHECKLIST,\r\n  LOADING_GET_CHECKLIST,\r\n  SUCCESS_GET_CHECKLIST,\r\n  ERROR_GET_CHECKLIST,\r\n  SUCCESS_GET_DEFAULT_CHECKLIST,\r\n  SUCCESS_UPDATE_DEFAULT_CHECKLIST,\r\n  LOADING_UPDATE_CHECKLIST,\r\n} from \"./checklistActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst getSuccessNotification = msg => {\r\n  return {\r\n    title: \"Success\",\r\n    message: msg,\r\n    position: \"tr\",\r\n    autoDismiss: 3,\r\n  };\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!! Please try again\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\n// DEFAULT CHECKLIST\r\nexport const getDefaultChecklist = type => async dispatch => {\r\n  dispatch({\r\n    type: LOADING_GET_CHECKLIST,\r\n  });\r\n  // //\r\n  try {\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/checklist/getDefaultChecklist/${projectId}/${type}`\r\n    );\r\n    //\r\n    dispatch({\r\n      type: SUCCESS_GET_DEFAULT_CHECKLIST,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    //\r\n    dispatch({\r\n      type: ERROR_GET_CHECKLIST,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateDefaultChecklist =\r\n  (id, checklist, type) => async dispatch => {\r\n    dispatch({\r\n      type: LOADING_UPDATE_CHECKLIST,\r\n    });\r\n    try {\r\n      let newChecklist = {};\r\n      const projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n      newChecklist[\"data\"] = checklist;\r\n      newChecklist[\"projectId\"] = projectId;\r\n      newChecklist[\"type\"] = type;\r\n      const response = await axios.post(\r\n        `${global.config.backendURL}/checklist/updateDefaultChecklist/${id}`,\r\n        newChecklist\r\n      );\r\n      dispatch({\r\n        type: SUCCESS_UPDATE_DEFAULT_CHECKLIST,\r\n        payload: response.data,\r\n      });\r\n      dispatch(getDefaultChecklist(type));\r\n    } catch (error) {\r\n      //\r\n      dispatch({\r\n        type: ERROR_GET_CHECKLIST,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// NEW CHECKLIST\r\nexport const addChecklist = newChecklist => async dispatch => {\r\n  dispatch({ type: LOADING_ADD_CHECKLIST });\r\n  //\r\n  newChecklist[\"subprojectId\"] =\r\n    global.config.secureStorage.getItem(\"subprojectId\");\r\n  try {\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/checklist/addChecklist`,\r\n      newChecklist\r\n    );\r\n    // dispatch({ type: SUCCESS_ADD_CHECKLIST });\r\n    dispatch(\r\n      fetchCheckList({\r\n        subprojectId: newChecklist[\"subprojectId\"],\r\n        type: newChecklist[\"type\"],\r\n        subActivity: newChecklist[\"activityName\"],\r\n      })\r\n    );\r\n    dispatch(Notifications.success(getSuccessNotification(\"Checklist Added!\")));\r\n  } catch (error) {\r\n    dispatch({ type: ERROR_ADD_CHECKLIST });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n    //\r\n  }\r\n};\r\n\r\nexport const fetchCheckList =\r\n  (data, notify = false) =>\r\n  async dispatch => {\r\n    dispatch({ type: LOADING_GET_CHECKLIST });\r\n    //\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/checklist/getCheckListBySubProjectId`,\r\n        data\r\n      );\r\n      // //\r\n      dispatch({ type: SUCCESS_GET_CHECKLIST, payload: res.data });\r\n      if (notify) {\r\n        dispatch(\r\n          Notifications.success(getSuccessNotification(\"Checklist Approved!\"))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: ERROR_GET_CHECKLIST });\r\n    }\r\n  };\r\n\r\nexport const approveCheckList =\r\n  (id, subprojectId, subActivity, approveImage, type, forapproval) =>\r\n  async dispatch => {\r\n    //\r\n    dispatch({ type: LOADING_GET_CHECKLIST });\r\n    try {\r\n      if (forapproval) {\r\n        await axios.post(\r\n          `${global.config.backendURL}/checklist/approveCheckList/`,\r\n          {\r\n            id: id,\r\n            subprojectId: subprojectId,\r\n            forapproval: true,\r\n            approveImage,\r\n          }\r\n        );\r\n      } else {\r\n        await axios.post(\r\n          `${global.config.backendURL}/checklist/checkChecklist/`,\r\n          {\r\n            id: id,\r\n            subprojectId: subprojectId,\r\n            forapproval: false,\r\n          }\r\n        );\r\n      }\r\n      dispatch(\r\n        fetchCheckList(\r\n          {\r\n            subprojectId,\r\n            subActivity,\r\n            type,\r\n          },\r\n          true\r\n        )\r\n      );\r\n    } catch (error) {\r\n      dispatch({ type: ERROR_GET_CHECKLIST });\r\n    }\r\n  };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material__container\":\"style_material__container__r8WXf\",\"material__input\":\"style_material__input__1Fx0-\",\"button\":\"style_button__3hQ9f\",\"add__material__header\":\"style_add__material__header__2LWZf\",\"all__material\":\"style_all__material__16CYN\",\"material__title\":\"style_material__title__3uCpF\",\"create__material\":\"style_create__material__1DA7H\",\"modify__material\":\"style_modify__material__2gh9h\",\"no__material\":\"style_no__material__22TNo\",\"button__wrapper\":\"style_button__wrapper__3HMA8\",\"button__display\":\"style_button__display__2BRec\",\"label__name\":\"style_label__name__1QtFr\"};","export const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\nexport const USERNAME_EXISTS = \"USERNAME_EXISTS\";\r\n// export const REDIRECT_TO_LOGIN = 'REDIRECT_TO_LOGIN';\r\n","export const SUCCESS_BAR_CHART_STORE = \"SUCCESS_BAR_CHART_STORE\";\r\nexport const ERROR = \"ERROR\";\r\nexport const LOADING = \"LOADING\";\r\nexport const SUCCESS_GET_DEFAULT_ACTIVITY_NAMES =\r\n  \"SUCCESS_GET_DEFAULT_ACTIVITY_NAMES\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material__container\":\"style_material__container__2Ys_r\",\"material__input\":\"style_material__input__2OFQK\",\"button\":\"style_button__2lzHS\",\"add__material__header\":\"style_add__material__header__2hLCE\",\"all__material\":\"style_all__material__1zHK_\",\"material__title\":\"style_material__title__3tJbU\",\"create__material\":\"style_create__material__ySR27\",\"modify__material\":\"style_modify__material__1u6qJ\",\"no__material\":\"style_no__material__3gJys\",\"button__wrapper\":\"style_button__wrapper__9GxLk\",\"button__display\":\"style_button__display__dTPVl\",\"label__name\":\"style_label__name__3Vuen\"};","export const GET_SUBPROJECTS = \"GET_SUBPROJECTS\";\r\nexport const LOADING_SUBPROJECTS = \"LOADING_SUBPROJECTS\";\r\nexport const ERROR_SUBPROJECTS = \"ERROR_SUBPROJECTS\";\r\n","export const SUCCESS_GET_WBS = \"SUCCESS_GET_WBS\";\r\nexport const ERROR_GET_WBS = \"ERROR_GET_WBS\";\r\nexport const LOADING_WBS = \"LOADING_WBS\";\r\n","export const ADD_LOADING = \"ADD_LOADING\";\r\nexport const MONITORING_SUCCESS = \"MONITORING_SUCCESS\";\r\nexport const MONITORING_ERROR = \"MONITORING_ERROR\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plan__container\":\"style_plan__container__1xVcP\",\"plan__input\":\"style_plan__input__3jYEr\",\"button\":\"style_button__mMfLl\",\"add__plan__header\":\"style_add__plan__header__9PqG_\",\"all__plan\":\"style_all__plan__iz9is\",\"plan__title\":\"style_plan__title__2AMeM\",\"create__plan\":\"style_create__plan__1JidM\",\"modify__plan\":\"style_modify__plan__2CTwr\",\"no__plan\":\"style_no__plan__s3BA3\",\"button__wrapper\":\"style_button__wrapper__qAcTG\",\"button__display\":\"style_button__display__17_Jm\",\"label__name\":\"style_label__name__IQPN9\"};","export const verifyValidity = (role, type) => {\r\n  if (role == \"quality_engineer\" && type != \"quality\") {\r\n    return false;\r\n  }\r\n  if (role == \"safety_engineer\" && type != \"safety\") {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","const userRoleOptions = [\r\n  { key: \"project_manager\", value: \"Project Manager\" },\r\n  { key: \"chief_engineer\", value: \"Chief Engineer\" },\r\n  { key: \"senior_engineer\", value: \"Senior Engineer\" },\r\n  { key: \"junior_engineer\", value: \"Junior Engineer\" },\r\n  { key: \"quality_engineer\", value: \"Quality Engineer\" },\r\n  { key: \"safety_engineer\", value: \"Safety Engineer\" },\r\n  { key: \"store_manager\", value: \"Store Manager\" },\r\n  { key: \"planning_manager\", value: \"Planning Manager\" },\r\n  { key: \"purchase_manager\", value: \"Purchase Manager\" },\r\n  { key: \"technical_director\", value: \"Technical Director\" }\r\n];\r\n\r\nexport default userRoleOptions;\r\n","const roles = [\"planning_manager\", \"project_manager\", \"super_admin\"];\r\nexport default roles;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__container\":\"style_todo__container__3BnTC\",\"todo__input\":\"style_todo__input__3GZvg\",\"button\":\"style_button__3gbAb\",\"add__todo__header\":\"style_add__todo__header__3sFSy\",\"all__todo\":\"style_all__todo__21cwV\",\"todo__title\":\"style_todo__title__uy3_V\",\"create__todo\":\"style_create__todo__gLxTv\",\"modify__todo\":\"style_modify__todo__3O8g7\",\"no__todo\":\"style_no__todo__3KTUo\",\"button__wrapper\":\"style_button__wrapper__2rpoV\",\"button__display\":\"style_button__display__1b3Ho\",\"label__name\":\"style_label__name__ViU_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checklist__container\":\"style_checklist__container__3H9n5\",\"checklist__input\":\"style_checklist__input__P9xs6\",\"button\":\"style_button__18bIO\",\"add__checklist__header\":\"style_add__checklist__header__9GC_a\",\"all__checklist\":\"style_all__checklist__2fTTP\",\"checklist__title\":\"style_checklist__title__1CR9F\",\"create__checklist\":\"style_create__checklist__3xtl3\",\"no__checklist\":\"style_no__checklist__3RfWq\",\"button__wrapper\":\"style_button__wrapper__2XjKF\",\"button__display\":\"style_button__display__1brOg\",\"label__name\":\"style_label__name__3iXAd\",\"modify__checklist\":\"style_modify__checklist__3vvY2\",\"material__container\":\"style_material__container__209pH\",\"material__input\":\"style_material__input__2nw5Q\",\"add__material__header\":\"style_add__material__header__qQuwd\",\"all__material\":\"style_all__material__k6YzG\",\"material__title\":\"style_material__title__2DHg_\",\"create__material\":\"style_create__material__1MRUj\",\"modify__material\":\"style_modify__material__3rq2w\",\"no__material\":\"style_no__material__lQuhV\"};","export const GET_UPDATES_DETAILS = \"GET_UPDATES_DETAILS\";\r\nexport const SUCCESS_GET_UPDATES_DETAILS = \"SUCCESS_GET_UPDATES_DETAILS\";\r\nexport const ERROR_GET_UPDATES_DETAILS = \"ERROR_GET_UPDATES_DETAILS\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"project_card__rseGX\",\"header\":\"project_header__3QT-p\",\"inner\":\"project_inner__3QREL\",\"expand\":\"project_expand__1UHVH\",\"project__header\":\"project_project__header__2_8dY\",\"project__description\":\"project_project__description__1Jwz1\",\"project__flat\":\"project_project__flat__3WUCu\",\"project__flat__title\":\"project_project__flat__title__23ke3\"};","import {\r\n  ISSUE_GET_FAILURE,\r\n  ISSUE_GET_SUCCESS,\r\n  ISSUE_ADD_FAILURE,\r\n  ISSUE_ADD_SUCCESS,\r\n  ISSUE_REMOVE_SUCCESS,\r\n  ISSUE_REMOVE_FAILURE,\r\n  ISSUE_ASK_APPROVAL_SUCCESS,\r\n  ISSUE_ASK_APPROVAL_FAILURE,\r\n  ISSUE_LOADING,\r\n} from \"./issuesActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nconst createSuccess = {\r\n  title: \"Success\",\r\n  message: \"Isssue Created Successfully\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nconst createFailure = {\r\n  title: \"Error\",\r\n  message: \"Some Error Occured\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nconst removeSuccess = {\r\n  title: \"Success\",\r\n  message: \"Issue Deleted\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nconst removeFailure = {\r\n  title: \"Error\",\r\n  message: \"Some Error Occured\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nconst askApprovalSuccess = {\r\n  title: \"Success\",\r\n  message: \"Issue Approved\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nconst askApprovalFailure = {\r\n  title: \"Error\",\r\n  message: \"Some Error Occured\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst loadingActionHelper = () => {\r\n  return {\r\n    type: ISSUE_LOADING,\r\n  };\r\n};\r\n\r\nexport const getIssues = (subProjectId, type) => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/issues/getIssueByProjectId/${subProjectId}/${type}`\r\n    );\r\n    //\r\n    dispatch({\r\n      type: ISSUE_GET_SUCCESS,\r\n      payload: response.data,\r\n      success: true,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ISSUE_GET_FAILURE,\r\n      payload: error.message,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createIssue = issue => async dispatch => {\r\n  try {\r\n    dispatch(loadingActionHelper());\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/issues/createIssue`,\r\n      issue\r\n    );\r\n    dispatch({\r\n      type: ISSUE_ADD_SUCCESS,\r\n      success: true,\r\n    });\r\n    const subProjectId = issue.subProjectId;\r\n    const type = issue.type;\r\n    dispatch(getIssues(subProjectId, type));\r\n    dispatch(Notifications.success(createSuccess));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ISSUE_ADD_FAILURE,\r\n      payload: error.message,\r\n      success: false,\r\n    });\r\n    dispatch(Notifications.error(createFailure));\r\n  }\r\n};\r\n\r\nexport const removeIssue = (issueId, subProjectId, type) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/issues/removeIssue`,\r\n      {\r\n        issueId: issueId,\r\n        subprojectId: global.config.secureStorage.getItem(\"subprojectId\"),\r\n      }\r\n    );\r\n    dispatch({\r\n      type: ISSUE_REMOVE_SUCCESS,\r\n      payload: response.data,\r\n      success: true,\r\n    });\r\n    dispatch(getIssues(subProjectId, type));\r\n    dispatch(Notifications.warning(removeSuccess));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ISSUE_REMOVE_FAILURE,\r\n      payload: error.message,\r\n      success: false,\r\n    });\r\n    dispatch(Notifications.error(removeFailure));\r\n  }\r\n};\r\n\r\nexport const askApproval =\r\n  (issueId, subProjectId, type, approveImage) => async dispatch => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${global.config.backendURL}/issues/askApproval`,\r\n        {\r\n          issueId: issueId,\r\n          subprojectId: global.config.secureStorage.getItem(\"subprojectId\"),\r\n          approveImage,\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: ISSUE_ASK_APPROVAL_SUCCESS,\r\n        payload: response.data,\r\n        success: true,\r\n      });\r\n      dispatch(getIssues(subProjectId, type));\r\n      dispatch(Notifications.success(askApprovalSuccess));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ISSUE_ASK_APPROVAL_FAILURE,\r\n        payload: error.message,\r\n        success: false,\r\n      });\r\n      dispatch(Notifications.error(askApprovalFailure));\r\n    }\r\n  };\r\n","import {\r\n  ADD_LOADING,\r\n  TODO_SUCCESS,\r\n  TODO_FAILURE,\r\n  GET_TODO\r\n} from \"./todoActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Todo added successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nexport const getTodo = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"subprojectId\");\r\n  //\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/todo/getTodo/${id}`\r\n    );\r\n    var data = response.data;\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const fullName = global.config.secureStorage.getItem(\"user_fullname\");\r\n    const roles = [\r\n      \"chief_engineer\",\r\n      \"technical_director\",\r\n      \"project_manager\",\r\n      \"super_admin\"\r\n    ];\r\n\r\n    if (!roles.find(item => item == role)) {\r\n      data = data.filter(item => item[\"userName\"] == fullName);\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_TODO,\r\n      payload: data\r\n    });\r\n    dispatch({\r\n      type: TODO_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_FAILURE,\r\n      payload: error.message\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addTodo = todo => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING\r\n  });\r\n  todo[\"subprojectId\"] = global.config.secureStorage.getItem(\"subprojectId\");\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/todo/addTodo`, todo);\r\n    dispatch({\r\n      type: TODO_SUCCESS\r\n    });\r\n    dispatch(getTodo());\r\n    dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_FAILURE,\r\n      payload: error.message\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const deleteTodo = id => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING\r\n  });\r\n  try {\r\n    const response = await axios.delete(\r\n      `${global.config.backendURL}/todo/deleteTodo/${id}`\r\n    );\r\n    dispatch({\r\n      type: TODO_SUCCESS,\r\n      payload: response.data\r\n    });\r\n    dispatch(getTodo());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_FAILURE,\r\n      payload: error.message\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const updateTodo = (id, todo) => async dispatch => {\r\n  todo[\"subprojectId\"] = global.config.secureStorage.getItem(\"subprojectId\");\r\n  dispatch({\r\n    type: ADD_LOADING\r\n  });\r\n  try {\r\n    await axios.put(`${global.config.backendURL}/todo/updateTodo/${id}`, todo);\r\n    dispatch(getTodo());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_FAILURE,\r\n      payload: error.message\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  PLAN_SUCCESS,\r\n  PLAN_FAILURE,\r\n  GET_PLAN,\r\n} from \"./planActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Plan added successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nexport const getPlan = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"subprojectId\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/plan/getPlan/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_PLAN,\r\n      payload: response.data,\r\n    });\r\n    dispatch({\r\n      type: PLAN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAN_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addPlan = plan => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  plan[\"subprojectId\"] = global.config.secureStorage.getItem(\"subprojectId\");\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/plan/addPlan`, plan);\r\n    dispatch({\r\n      type: PLAN_SUCCESS,\r\n    });\r\n    dispatch(getPlan());\r\n    dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAN_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const updatePlan = (planId, plan) => async dispatch => {\r\n  plan[\"subprojectId\"] = global.config.secureStorage.getItem(\"subprojectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.put(\r\n      `${global.config.backendURL}/plan/updatePlan/${planId}`,\r\n      plan\r\n    );\r\n    dispatch({\r\n      type: PLAN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAN_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const deletePlan = id => async dispatch => {\r\n  const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    const response = await axios.delete(\r\n      `${global.config.backendURL}/plan/deletePlan/${id}/${subprojectId}`\r\n    );\r\n    dispatch({\r\n      type: PLAN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n    dispatch(getPlan());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAN_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n","export const ADD_LOADING = \"ADD_LOADING\";\r\nexport const ADD_MATERIAL = \"ADD_MATERIAL\";\r\nexport const MATERIAL_FAILURE = \"MATERIAL_FAILURE\";\r\nexport const MATERIAL_SUCCESS = \"MATERIAL_SUCCESS\";\r\nexport const MATERIAL_ERROR = \"MATERIAL_ERROR\";\r\nexport const GET_MATERIAL = \"GET_MATERIAL\";\r\nexport const GET_STORE_SUCCESS = \"GET_STORE_SUCCESS\";\r\nexport const GET_STORE_FAILURE = \"GET_STORE_ERROR\";\r\nexport const ADD_ISSUE_HISTORY_LOADING = \"ADD_ISSUE_HISTORY_LOADING\";\r\nexport const ISSUE_HISTORY_SUCCESS = \"ISSUE_HISTORY_SUCCESS\";\r\nexport const ISSUE_HISTORY_ERROR = \"ISSUE_HISTORY_ERROR\";\r\nexport const ADD_ISSUE = \"ADD_ISSUE\";\r\nexport const ADD_MATERIAL_REQ = \"ADD_MATERIAL_REQ\";\r\nexport const MATERIAL_REQ_LOADING = \"MATERIAL_REQ_LOADING\";\r\nexport const MATERIAL_REQ_SUCCESS = \"MATERIAL_REQ_SUCCESS\";\r\nexport const MATERIAL_REQ_ERROR = \"MATERIAL_REQ_ERROR\";\r\nexport const MATERIALS_LIST_LOADING = \"MATERIALS_LIST_LOADING\";\r\nexport const MATERIALS_LIST_FAILURE = \"MATERIALS_LIST_FAILURE\";\r\nexport const MATERIALS_LIST_SUCCESS = \"MATERIALS_LIST_SUCCESS\";\r\nexport const REJECT_MATERIAL_REQ = \"REJECT_MATERIAL_REQ\";\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n  },\r\n  content: {\r\n    // flexGrow: 1,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  linkDrawer: {\r\n    textDecoration: \"none\",\r\n    fontSize: \"1.2em\",\r\n    color: \"#121212\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  logout: {\r\n    textDecoration: \"none\",\r\n    fontSize: \"1.2em\",\r\n    color: \"#121212\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"capitalize\",\r\n    marginTop: \"auto\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  nested2: {\r\n    paddingLeft: theme.spacing(6),\r\n  },\r\n  projectName: {\r\n    color: \"#333\",\r\n    textAlign: \"center\",\r\n    marginRight: 20,\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import {\r\n  GET_SUBPROJECTS,\r\n  LOADING_SUBPROJECTS,\r\n  ERROR_SUBPROJECTS\r\n} from \"./subProjectActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst getSubprojectsAction = data => ({\r\n  type: GET_SUBPROJECTS,\r\n  payload: data\r\n});\r\n\r\nconst loadingSubprojectsAction = () => ({\r\n  type: LOADING_SUBPROJECTS\r\n});\r\n\r\nconst errorSubprojectsAction = err => ({\r\n  type: ERROR_SUBPROJECTS,\r\n  error: err\r\n});\r\n\r\nexport const getSubprojects = id => async dispatch => {\r\n  dispatch(loadingSubprojectsAction());\r\n  const body = {\r\n    id\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `${global.config.backendURL}/project/getSubProject`,\r\n      body\r\n    );\r\n    dispatch(getSubprojectsAction(res.data));\r\n  } catch (err) {\r\n    \r\n    dispatch(errorSubprojectsAction(err.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activity__container\":\"style_activity__container__3XGXl\",\"activity__input\":\"style_activity__input__18k-y\",\"button\":\"style_button__30PNF\",\"add__activity__header\":\"style_add__activity__header__2_Vw4\",\"all__activity\":\"style_all__activity__1sapc\",\"activity__title\":\"style_activity__title__tcdvi\",\"create__activity\":\"style_create__activity__3-Qux\",\"modify__activity\":\"style_modify__activity__Un-ei\",\"no__activity\":\"style_no__activity__AvTYs\",\"button__wrapper\":\"style_button__wrapper__1YzAU\",\"button__display\":\"style_button__display__13-6K\",\"label__name\":\"style_label__name__2ONp_\",\"material__container\":\"style_material__container__10ThD\"};","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\nexport class BarchartData extends Component {\r\n  createDataset = (props) =>{\r\n    const arr = [{\r\n      label: props.percentageLabel,\r\n      data: props.percentage,\r\n      backgroundColor: [\"#345BAE\"],\r\n    }]\r\n\r\n    if(props.percentage1) arr.push({\r\n      label: props.percentage1Label,\r\n      data: props.percentage1,\r\n      backgroundColor: [\"#eea47fff\"],\r\n    });\r\n    return arr;\r\n  }\r\n  constructor(props) {\r\n    console.log(props.accNames, props.percentage, props.percentage1);\r\n    Chart.register(...registerables);\r\n    // console.log(iterList);\r\n    super(props);\r\n    // const isAddVisible = roles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      chartData: {\r\n        labels: props.accNames,\r\n        datasets: this.createDataset(props),\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={{ maintainAspectRatio: false }}\r\n          height={400}\r\n          width={100}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarchartData;\r\n","import React, { useState } from \"react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  CardActions,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  useMediaQuery,\r\n  Toolbar,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Info, Check, Close, Update } from \"@material-ui/icons\";\r\nimport FileBase64 from \"react-file-base64\";\r\nconst DetailsDialog = props => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xl\"));\r\n  var checklist = props.checklist;\r\n  const [approveImage, setApproveImage] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        fullScreen={fullScreen}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          <Toolbar />\r\n          <Grid container justify=\"center\">\r\n            <Grid item justify=\"center\">\r\n              <img\r\n                justify=\"center\"\r\n                style={{ width: \"100%\" }}\r\n                src={checklist.checkListImage}\r\n              />\r\n              <Typography variant=\"h5\">\r\n                {props.checklist.checklistTitle}\r\n              </Typography>\r\n              <DialogContentText>Checklist Details</DialogContentText>\r\n              <Typography>\r\n                <strong>Checklist ID:</strong> {checklist.checklistId}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Project Name :</strong> {checklist.projectName}\r\n              </Typography>\r\n              <Typography></Typography>\r\n              <Typography>\r\n                <strong>Date Created:</strong>{\" \"}\r\n                {new Date(checklist.createdDate).toDateString() ||\r\n                  \"Not available\"}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Image:</strong>\r\n              </Typography>\r\n              <hr />\r\n              <Typography>\r\n                <strong>Submitted By:</strong> {checklist.submittedBy}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>To Be Checked By :</strong> {checklist.checkedBy}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>To Be Approved By:</strong> {checklist.approvedBy}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Approved Image:</strong>\r\n                <img\r\n                  justify=\"center\"\r\n                  style={{ width: \"100%\" }}\r\n                  src={checklist.approveImage}\r\n                />{\" \"}\r\n              </Typography>\r\n              <hr />\r\n              <Typography\r\n                variant=\"h6\"\r\n                style={{ fontWeight: 700, marginBottom: \"0.5em\" }}\r\n              >\r\n                Checklist points:\r\n              </Typography>\r\n              {Object.keys(checklist.subChecklist).map((item, index) => {\r\n                var point = checklist.subChecklist[item];\r\n                var num = index + 1;\r\n                return (\r\n                  <Typography key={index}>\r\n                    <strong>{num + \". \" + point.description}:</strong>{\" \"}\r\n                    {point.type || \"Not available\"}\r\n                  </Typography>\r\n                );\r\n              })}\r\n              <hr />{\" \"}\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{ marginBottom: \"1.5em\", marginRight: \"1em\" }}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            startIcon={<Close />}\r\n            onClick={props.toggleDialog}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChecklistCard = props => {\r\n  //\r\n  var checklist = props.item;\r\n  const [details, setDetails] = useState(false);\r\n  return (\r\n    <Grid item xs={12} sm={3}>\r\n      <DetailsDialog\r\n        open={details}\r\n        toggleDialog={() => setDetails(prev => !prev)}\r\n        checklist={checklist}\r\n      />\r\n      <Card variant=\"outlined\" style={{ padding: \"5px\" }} elevation={3}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" style={{ marginBottom: \"0.5em\" }}>\r\n            <strong>{checklist.checklistTitle}</strong>\r\n          </Typography>\r\n          <Typography>\r\n            <strong>Checklist ID:</strong> {checklist.checklistId}\r\n          </Typography>\r\n          <Typography>\r\n            <strong>Date of Creation :</strong>{\" \"}\r\n            {new Date(checklist.createdDate).toDateString() || \"Not available\"}\r\n          </Typography>\r\n          <Typography>\r\n            <strong>Project Name:</strong> {checklist.projectName}\r\n          </Typography>\r\n          <Typography>\r\n            <strong>Location:</strong> {checklist.location}\r\n          </Typography>\r\n          <Grid container spacing={1} style={{ marginTop: \"1em\" }}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setDetails(prev => !prev)}\r\n                startIcon={<Info />}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              {props.isCheckVisible && props.checkable && (\r\n                <Button\r\n                  disabled={!props.checkable}\r\n                  startIcon={<Check />}\r\n                  onClick={e => {\r\n                    e.preventDefault();\r\n\r\n                    props.approveCheckList(\r\n                      checklist._id,\r\n                      global.config.secureStorage.getItem(\"subprojectId\"),\r\n                      props.subActivity,\r\n                      props.item.type,\r\n                      false\r\n                    );\r\n                  }}\r\n                >\r\n                  Send for approval\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item>\r\n              {props.isApproveVisible && !props.checkable && props.approvable && (\r\n                <>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    style={{ margin: \"10px 20px 0 0\", width: \"200px\" }}\r\n                    startIcon={<Update />}\r\n                  >\r\n                    <FileBase64\r\n                      multiple={false}\r\n                      className=\"btn\"\r\n                      value={props.approveImage}\r\n                      onDone={file => {\r\n                        props.handelApproveImg(file.base64);\r\n                        // files.forEach(ele => ele.base64);\r\n                        // props.handlePanaroma(file.base64);\r\n                      }}\r\n                    />\r\n                  </Button>\r\n                  <Button\r\n                    disabled={!props.approvable}\r\n                    startIcon={<Check />}\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n\r\n                      if (props.approveImage) {\r\n                        props.approveCheckList(\r\n                          checklist._id,\r\n                          global.config.secureStorage.getItem(\"subprojectId\"),\r\n                          props.subActivity,\r\n                          props.approveImage,\r\n                          props.item.type,\r\n                          true\r\n                        );\r\n                      } else {\r\n                        alert(\"Select An Image before Sending For Approval\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    {props.approvable ? \"Approve\" : \"Approved\"}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChecklistCard;\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Fade, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Loading(props) {\r\n  const loadingStyle = {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    margin: \"0px auto\",\r\n  };\r\n  return (\r\n    <Fade\r\n      in={props.loading}\r\n      style={{\r\n        transitionDelay: props.loading ? \"800ms\" : \"0ms\",\r\n        padding: \"0.5rem\",\r\n      }}\r\n      unmountOnExit\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n        }}\r\n      >\r\n        <CircularProgress style={loadingStyle} />\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport useStyles from \"./DrawerStyle\";\r\n\r\nconst DrawerItemWithContent = props => {\r\n  const classes = useStyles();\r\n  const item = props.item;\r\n  const [open, setOpen] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n  const handleClick2 = () => {\r\n    setOpen2(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ListItem button style={{ padding: 0, margin: 0, flexDirection: \"column\" }}>\r\n      <ListItem onClick={handleClick}>\r\n        <ListItemIcon>{item.icon}</ListItemIcon>\r\n        <ListItemText primary={item.name} className={classes.linkDrawer} />\r\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        {item.content.map(subItem => {\r\n          return subItem.content ? (\r\n            <>\r\n              <ListItem\r\n                button\r\n                onClick={handleClick2}\r\n                className={classes.nested}\r\n              >\r\n                <ListItemIcon>{subItem.icon}</ListItemIcon>\r\n                <ListItemText primary={subItem.name} />\r\n                {open2 ? (\r\n                  <ExpandLess color=\"primary\" />\r\n                ) : (\r\n                  <ExpandMore color=\"primary\" />\r\n                )}\r\n              </ListItem>\r\n              <Collapse in={open2} timeout=\"auto\" unmountOnExit>\r\n                {subItem.content.map(tt => {\r\n                  return (\r\n                    <Link\r\n                      to={tt.route}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                      }}\r\n                      key={tt.name}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        onClick={props.toggleDrawer}\r\n                        className={classes.nested2}\r\n                      >\r\n                        <ListItemIcon>{tt.icon}</ListItemIcon>\r\n                        <span className={classes.linkDrawer}>{tt.name}</span>\r\n                      </ListItem>\r\n                    </Link>\r\n                  );\r\n                })}\r\n              </Collapse>\r\n            </>\r\n          ) : (\r\n            <Link\r\n              to={subItem.route}\r\n              style={{\r\n                textDecoration: \"none\",\r\n              }}\r\n              key={subItem.name}\r\n            >\r\n              <ListItem\r\n                button\r\n                onClick={props.toggleDrawer}\r\n                className={classes.nested}\r\n              >\r\n                <ListItemIcon>{subItem.icon}</ListItemIcon>\r\n                <span className={classes.linkDrawer}>{subItem.name}</span>\r\n              </ListItem>\r\n            </Link>\r\n          );\r\n        })}\r\n        <Divider />\r\n      </Collapse>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DrawerItemWithContent;\r\n","export const setupNavTitle = (loc, setState, setIsBack) => {\r\n  const temp = loc.split(\"/\");\r\n  //\r\n  if (temp.length == 4) {\r\n    if (temp[1] == \"activities\") {\r\n      setState(\"Floor list\");\r\n      setIsBack(true);\r\n      return;\r\n    }\r\n    if (temp[1] == \"overview\") {\r\n      setState(\"View Updates\");\r\n      setIsBack(true);\r\n      return;\r\n    }\r\n    if (temp[1] == \"checklist\") {\r\n      setState(\r\n        `${temp[2].charAt(0).toUpperCase() + temp[2].slice(1)} Checklist`\r\n      );\r\n      setIsBack(true);\r\n      return;\r\n    }\r\n  }\r\n  if (temp.length == 5) {\r\n    if (temp[1] == \"activities\") {\r\n      setState(\"Flat list\");\r\n      setIsBack(true);\r\n      return;\r\n    }\r\n    if (temp[1] == \"checklist\") {\r\n      setState(`Add Checklist`);\r\n      setIsBack(true);\r\n      return;\r\n    }\r\n  }\r\n  if (loc == \"/editUser\") {\r\n    setState(\"Edit users\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/activities\") {\r\n    setState(\"Activities\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/wbs\") {\r\n    setState(\"Activity WBS Report\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/overview\") {\r\n    setState(\"Overview\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/checklist/safety\") {\r\n    setState(\"Safety Checklist\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/checklist/quality\") {\r\n    setState(\"Quality Checklist\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc == \"/register\") {\r\n    setState(\"Register User\");\r\n    setIsBack(true);\r\n    return;\r\n  }\r\n  if (loc == \"/registerAdmin\") {\r\n    setState(\"Register Admin\");\r\n    return;\r\n  }\r\n  if (loc === \"/issues/safety\") {\r\n    setState(\"Safety Issues\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/issues/quality\") {\r\n    setState(\"Quality Issues\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n\r\n  if (loc === \"/todo\") {\r\n    setState(\"To do\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/projectList\") {\r\n    setState(\"Projects\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/addProject\") {\r\n    setState(\"Add Project\");\r\n    setIsBack(true);\r\n    return;\r\n  }\r\n  if (loc === \"/material\") {\r\n    setState(\"Purchase\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/plan\") {\r\n    setState(\"Planning\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/dpr\") {\r\n    setState(\"DPR\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/login\") {\r\n    setState(\"Enbuild\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/subprojectList\") {\r\n    setState(\"Subprojects\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/barchart\") {\r\n    setState(\"Bar Chart\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/store\") {\r\n    setState(\"Store\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/addMaterial\") {\r\n    setState(\"Add Material\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/monitoring\") {\r\n    setState(\"Monitoring\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/support\") {\r\n    setState(\"Support\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n  if (loc === \"/dashboard\") {\r\n    setState(\"Dashboard\");\r\n    setIsBack(false);\r\n    return;\r\n  }\r\n\r\n  setIsBack(true);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  // CardHeader,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  AddComment as AddCommentIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"5px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  materialCard: {\r\n    padding: \"10px !important\",\r\n  },\r\n}));\r\n\r\nexport default function Material({\r\n  materialName,\r\n  materialQuantity,\r\n  materialLimit,\r\n  editMaterial,\r\n  id,\r\n  expectedDate,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  showActions,\r\n  deliveredDate,\r\n  addRemark,\r\n  materialRemark,\r\n  isRemark,\r\n  isEditable,\r\n}) {\r\n  var props = { border: \"3px solid green\" };\r\n  if (parseInt(materialLimit) >= parseInt(materialQuantity)) {\r\n    props = { border: \"3px solid red\" };\r\n  } else {\r\n    props = { border: \"3px solid green\" };\r\n  }\r\n  var [toggleRemark, setToggleRemark] = useState(false);\r\n  var [remark, setRemark] = useState(\"\");\r\n  var [toggleDate, setToggleDate] = useState(false);\r\n  var [deliveryDate, setDeliveryDate] = useState(new Date());\r\n  const classes = useStyles(props);\r\n  //\r\n  // alert(1);\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        backgroundColor:\r\n          deliveredDate === undefined\r\n            ? \"white\"\r\n            : Date.parse(expectedDate) < Date.parse(deliveredDate)\r\n            ? \"rgba(255,0,0,0.45)\"\r\n            : \"rgba(0,255,0,0.45)\",\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h5\">\r\n          <strong>{materialName}</strong>\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Quantity :</strong> {materialQuantity}\r\n        </Typography>\r\n        {/* <Typography>\r\n          <strong>Expected Delivery Date :</strong> {materialLimit}\r\n        </Typography> */}\r\n        <Typography>\r\n          <strong>Expected Delivery Date :</strong>{\" \"}\r\n          {expectedDate !== undefined\r\n            ? expectedDate\r\n                .toString()\r\n                .substring(0, 10)\r\n                .split(\"-\")\r\n                .reverse()\r\n                .join(\"-\")\r\n            : \"Not Filled\"}\r\n        </Typography>\r\n        {deliveredDate !== undefined ? (\r\n          <Typography>\r\n            <strong>Delivered Date :</strong>{\" \"}\r\n            {deliveredDate\r\n              .toString()\r\n              .substring(0, 10)\r\n              .split(\"-\")\r\n              .reverse()\r\n              .join(\"-\")}\r\n          </Typography>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {materialRemark !== undefined ? (\r\n          <Typography>\r\n            <strong>Remark :</strong> {materialRemark}\r\n          </Typography>\r\n        ) : null}\r\n      </CardContent>\r\n\r\n      {isEditable && (\r\n        <>\r\n          {!toggleRemark && isRemark && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{\r\n                marginLeft: \"1rem\",\r\n                marginBottom: \".5rem\",\r\n              }}\r\n              onClick={() => setToggleRemark(true)}\r\n              startIcon={<AddCommentIcon />}\r\n            >\r\n              Remark\r\n            </Button>\r\n          )}\r\n          {toggleRemark && (\r\n            <>\r\n              <CardActions style={{ marginLeft: \"5px\" }}>\r\n                <Grid container>\r\n                  <Grid className=\"mt-4\" item>\r\n                    <Typography>\r\n                      <strong>Add Remarks : </strong>{\" \"}\r\n                    </Typography>\r\n                    <TextField\r\n                      name=\"remark\"\r\n                      value={remark}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      onChange={e => setRemark(e.target.value)}\r\n                      id=\"remark\"\r\n                      label=\"Remarks\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid className=\"ml-2 mt-4\" item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setToggleRemark(false);\r\n                        // addDeliveryDate(deliveryDate, id);\r\n                        addRemark(remark, id);\r\n                      }}\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Done\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid className=\"ml-2 mt-4\" item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => setToggleRemark(false)}\r\n                      startIcon={<CloseIcon />}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardActions>\r\n            </>\r\n          )}\r\n          {showActions ? (\r\n            !toggleDate ? (\r\n              <CardActions style={{ marginLeft: \"5px\" }}>\r\n                <Grid container>\r\n                  <Grid className=\"mr-4\" item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => setToggleDate(true)}\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Add Delivery Date\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardActions>\r\n            ) : (\r\n              <>\r\n                <CardActions style={{ marginLeft: \"5px\" }}>\r\n                  <Grid container>\r\n                    <Grid className=\"mr-4\" item>\r\n                      <Typography>\r\n                        <strong>Select Delivery Date : </strong>{\" \"}\r\n                      </Typography>\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            // marginLeft: \"30%\",\r\n                          }}\r\n                          disableToolbar\r\n                          variant=\"dialog\"\r\n                          format=\"dd/MM/yyyy\"\r\n                          margin=\"normal\"\r\n                          value={deliveryDate}\r\n                          onChange={date => setDeliveryDate(date)}\r\n                          name=\"expectedDate\"\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\",\r\n                          }}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Grid className=\"mr-2\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setToggleDate(false);\r\n                          addDeliveryDate(deliveryDate, id);\r\n                        }}\r\n                        startIcon={<AddIcon />}\r\n                      >\r\n                        Done\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid className=\"mr-2\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setToggleDate(false)}\r\n                        startIcon={<CloseIcon />}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardActions>\r\n              </>\r\n            )\r\n          ) : null}\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Cancel as CancelIcon\r\n} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"10px\",\r\n    padding: \"5px\"\r\n  },\r\n  PlanCard: {\r\n    padding: \"10px !important\"\r\n  }\r\n}));\r\n\r\nexport default function Plan(props) {\r\n  var [toggleDelay, setToggleDelay] = useState(false);\r\n  var [reason, setReason] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      elevation={3}\r\n      style={{\r\n        backgroundColor: !props.planCompleted\r\n          ? \"white\"\r\n          : Date.parse(props.deadline) <=\r\n            Date.parse(\r\n              parseInt(new Date().getMonth()) +\r\n                1 +\r\n                \"-\" +\r\n                new Date().getDate() +\r\n                \"-\" +\r\n                new Date().getFullYear()\r\n            )\r\n          ? \"rgba(255,0,0,0.45)\"\r\n          : \"rgba(0,255,0,0.45)\"\r\n      }}\r\n    >\r\n      <CardHeader\r\n        className={classes.PlanCard}\r\n        title={`Plan - ${props.planTitle}`}\r\n        style={{ padding: \"0px\" }}\r\n        subheader={`Created At ${props.createdAt}`}\r\n      />\r\n      <CardContent className={classes.PlanCard} style={{ padding: \"10px\" }}>\r\n        <Typography variant=\"body1\">\r\n          <strong> Description -</strong> {props.planDetail}\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          <strong>Deadline -</strong> {props.deadline}\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Status -</strong>{\" \"}\r\n          {props.planCompleted ? \"Executed\" : \"Not Executed\"}\r\n        </Typography>\r\n\r\n        {props.delayReason !== \"\" ? (\r\n          <Typography>\r\n            <strong>Reason For Delay :</strong> {props.delayReason}\r\n          </Typography>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </CardContent>\r\n      {props.isEditable && (\r\n        <>\r\n          {props.show ? (\r\n            !toggleDelay ? (\r\n              <CardActions style={{ marginLeft: \"5px\" }}>\r\n                <Grid container>\r\n                  <Grid className=\"mr-4\" item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => setToggleDelay(true)}\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Add Reason\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardActions>\r\n            ) : (\r\n              <>\r\n                <CardActions style={{ marginLeft: \"5px\" }}>\r\n                  <Grid container>\r\n                    <Grid className=\"mr-4\" item>\r\n                      <Typography>\r\n                        <strong>Delay Reason : </strong>{\" \"}\r\n                      </Typography>\r\n                      <TextField\r\n                        className=\"m-1\"\r\n                        name=\"reason\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        value={reason}\r\n                        onChange={e => setReason(e.target.value)}\r\n                        label=\"Reason\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardActions>\r\n                <CardActions style={{ marginLeft: \"5px\" }}>\r\n                  <Grid container>\r\n                    <Grid className=\"mr-2\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setToggleDelay(false);\r\n                          props.editReason(reason, props.id);\r\n                        }}\r\n                        startIcon={<AddIcon />}\r\n                      >\r\n                        Done\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid className=\"mr-2\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setToggleDelay(false)}\r\n                        startIcon={<CancelIcon />}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardActions>\r\n              </>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      )}\r\n      {props.isEditable && (\r\n        <CardActions style={{ marginLeft: \"5px\" }}>\r\n          <Grid container>\r\n            <Grid className=\"mr-2\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => props.deletePlan(props.id)}\r\n                startIcon={<DeleteIcon />}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid className=\"mr-2\" item>\r\n              {!props.planCompleted ? (\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => props.editPlanStatus(props.id)}\r\n                  startIcon={<EditIcon />}\r\n                >\r\n                  Completed\r\n                </Button>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  LOADING,\r\n  SUCCESS_BAR_CHART_STORE,\r\n  SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n  ERROR\r\n} from \"./barChartTypes\";\r\nimport axios from \"axios\";\r\n// import { tsRestType } from \"@babel/types\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Bar Chart Updated !\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!! Please try again\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nconst loadingActionHelper = () => {\r\n  return {\r\n    type: LOADING\r\n  };\r\n};\r\n\r\nconst errorActionHelper = error => {\r\n  return {\r\n    type: ERROR,\r\n    error\r\n  };\r\n};\r\n\r\nconst successDefaultNamesActionHelper = data => {\r\n  return {\r\n    type: SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n    payload: data\r\n  };\r\n};\r\n\r\nconst successBarChartStore = data => {\r\n  return {\r\n    type: SUCCESS_BAR_CHART_STORE,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const getBarChartData = () => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n  // \r\n  try {\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    var newData = [];\r\n    var response = await axios.get(\r\n      `${global.config.backendURL}/barcharts/${subprojectId}/${projectId}`\r\n    );\r\n    newData = response.data;\r\n\r\n    dispatch(successDefaultNamesActionHelper(newData));\r\n  } catch (error) {\r\n    \r\n    dispatch(errorActionHelper(error.message));\r\n  }\r\n};\r\n\r\nexport const saveBarChart = data => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n\r\n  try {\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    var main = {\r\n      subprojectId,\r\n      data\r\n    };\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/barcharts/add`,\r\n      main\r\n    );\r\n    dispatch(successBarChartStore(response.data));\r\n    dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    \r\n    dispatch(errorActionHelper(error.message));\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  MONITORING_SUCCESS,\r\n  MONITORING_ERROR\r\n} from \"./monitoringActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications, { success } from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Activity updated successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3\r\n};\r\n\r\nconst addLodingActionHelper = () => {\r\n  return {\r\n    type: ADD_LOADING\r\n  };\r\n};\r\n\r\nconst successActionHelper = data => {\r\n  return {\r\n    type: MONITORING_SUCCESS,\r\n    payload: data\r\n  };\r\n};\r\n\r\nconst errorActionHelper = err => {\r\n  return {\r\n    type: MONITORING_ERROR,\r\n    payload: err\r\n  };\r\n};\r\n\r\nexport const getActivities = (one = false) => async dispatch => {\r\n  if (!one) {\r\n    dispatch(addLodingActionHelper());\r\n  }\r\n  try {\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/monitoring/getActivities/${subprojectId}/${projectId}`\r\n    );\r\n    // const perc = await axios.get(\r\n    //   `${global.config.backendURL}/activities/getPercentage/${projectId}/${subprojectId}`\r\n    // );\r\n    // console.table(response.data);\r\n    // var newData =\r\n    // console.table(perc.data);\r\n    var newData = response.data.map((item, index) => ({\r\n      ...item,\r\n      //actualcompletion: perc.data[index]\r\n    }));\r\n    var newData = newData.filter(item => item.visibility);\r\n    // console.table(newData);\r\n    console.log(newData)\r\n    dispatch(successActionHelper(newData));\r\n    if (one) {\r\n      dispatch(Notifications.success(successNotificationOpts));\r\n    }\r\n  } catch (error) {\r\n    \r\n    dispatch(errorActionHelper(error.message));\r\n  }\r\n};\r\n\r\nexport const updateActivity = data => async dispatch => {\r\n  dispatch(addLodingActionHelper());\r\n  try {\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const response = await axios.post(\r\n      `${global.config.backendURL}/monitoring/updateActivities`,\r\n      {\r\n        subprojectId,\r\n        data\r\n      }\r\n    );\r\n    dispatch(getActivities(true));\r\n  } catch (error) {\r\n    \r\n    dispatch(errorActionHelper(error.message));\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n  const [values, setValues] = useState(initialFValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n    if (validateOnChange) validate({ [name]: value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues(initialFValues);\r\n    setErrors({});\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"80%\",\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\" {...other}>\r\n      {props.children}\r\n    </form>\r\n  );\r\n}\r\n","export const GET_PROJECT = \"GET_PROJECT\";\r\nexport const PROJECT_FAILURE = \"PROJECT_FAILURE\";\r\nexport const PROJECT_SUCCESS = \"PROJECT_SUCCESS\";\r\nexport const ADD_PROJECT_LOADING = \"ADD_PROJECT_LOADING\";\r\nexport const USER_PROJECTS_SUCCESS = \"USER_PROJECTS_SUCCESS\";\r\nexport const USER_PROJECTS_LOADING = \"USER_PROJECTS_LOADING\";\r\nexport const USER_PROJECTS_ERROR = \"USER_PROJECTS_ERROR\";\r\nexport const ACTIVITIES_SUCCESS = \"ACTIVITIES_SUCCESS\";\r\nexport const ACTIVITIES_FAILURE = \"ACTIVITIES_FAILURE\";\r\nexport const ACTIVITIES_LOADING = \"ACTIVITIES_LOADING\";\r\nexport const FETCH_ACTIVITIES_LOADING = \"FETCH_ACTIVITIES_LOADING\";\r\nexport const GET_USER_LOADING = \"GET_USER_LOADING\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAILURE = \"GET_USER_FAILURE\";\r\n","export const ADD_LOADING = \"ADD_LOADING\";\r\nexport const ADD_MATERIAL = \"ADD_MATERIAL\";\r\nexport const MATERIAL_FAILURE = \"MATERIAL_FAILURE\";\r\nexport const MATERIAL_SUCCESS = \"MATERIAL_SUCCESS\";\r\nexport const MATERIAL_ERROR = \"MATERIAL_ERROR\";\r\nexport const GET_MATERIAL = \"GET_MATERIAL\";\r\nexport const GET_STORE = \"GET_STORE\";\r\nexport const STORE_FAILURE = \"STORE_ERROR\";\r\nexport const STORE_SUCCESS = \"MATERIAL_SUCCESS\";\r\n","export const GET_ACTIVITY_DETAILS = \"GET_ACTIVITY_DETAILS\";\r\nexport const ERROR_GET_ACTIVITY_DETAILS = \"ERROR_GET_ACTIVITY_DETAILS\";\r\nexport const SUCCESS_GET_ACTIVITY_DETAILS = \"SUCCESS_GET_ACTIVITY_DETAILS\";\r\nexport const SUCCESS_GET_ACTIVITY_UPDATE_DETAILS =\r\n  \"SUCCESS_GET_ACTIVITY_UPDATE_DETAILS\";\r\nexport const SUCCESS_UPDATE_ACTIVITY_DETAILS =\r\n  \"SUCCESS_UPDATE_ACTIVITY_DETAILS\";\r\nexport const SUCCESS_UPDATE_DETAILS = \"SUCCESS_UPDATE_DETAILS\";\r\nexport const ERROR_UPDATE_ACTIVITY_DETAILS = \"ERROR_UPDATE_ACTIVITY_DETAILS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const DONE_UPDATING_ACTIVITY = \"DONE_UPDATING_ACTIVITY\";\r\nexport const CLEAR_CHECKED_ARRAY = \"CLEAR_CHECKED_ARRAY\";\r\n\r\nexport const SUCCESS_GET_DEFAULT_ACTIVITY = \"SUCCESS_GET_DEFAULT_ACTIVITY\";\r\nexport const SUCCESS_GET_DEFAULT_ACTIVITY_NAMES =\r\n  \"SUCCESS_GET_DEFAULT_ACTIVITY_NAMES\";\r\n","//DEFAULT CHECKLIST\r\nexport const SUCCESS_GET_DEFAULT_CHECKLIST = \"SUCCESS_GET_DEFAULT_CHECKLIST\";\r\nexport const SUCCESS_UPDATE_DEFAULT_CHECKLIST =\r\n  \"SUCCESS_UPDATE_DEFAULT_CHECKLIST\";\r\n\r\n// NEW TYPES\r\nexport const SUCCESS_ADD_CHECKLIST = \"SUCCESS_ADD_CHECKLIST\";\r\nexport const ERROR_ADD_CHECKLIST = \"ERROR_ADD_CHECKLIST\";\r\nexport const LOADING_ADD_CHECKLIST = \"LOADING_ADD_CHECKLIST\";\r\nexport const SUCCESS_GET_CHECKLIST = \"SUCCESS_GET_CHECKLIST\";\r\nexport const ERROR_GET_CHECKLIST = \"ERROR_GET_CHECKLIST\";\r\nexport const LOADING_GET_CHECKLIST = \"LOADING_GET_CHECKLIST\";\r\nexport const SUCCESS_UPDATE_CHECKLIST = \"SUCCESS_UPDATE_CHECKLIST\";\r\nexport const ERROR_UPDATE_CHECKLIST = \"ERROR_UPDATE_CHECKLIST\";\r\nexport const LOADING_UPDATE_CHECKLIST = \"LOADING_UPDATE_CHECKLIST\";\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  REDIRECT_TO_JOIN\r\n} from \"./loginActionTypes\";\r\nconst initalState = {\r\n  loading: false,\r\n  username: global.config.secureStorage.getItem(\"username\"),\r\n  loggedIn:\r\n    global.config.secureStorage.getItem(\"construction-auth-token\") !== null,\r\n  user: \"\"\r\n};\r\n\r\nexport const loginReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      // \r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      // \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: true,\r\n        username: action.username,\r\n        user: action.user\r\n      };\r\n    case LOGIN_FAILURE:\r\n      // \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    case LOGOUT:\r\n      // \r\n      return {\r\n        ...state,\r\n        loggedIn: false\r\n      };\r\n    case REDIRECT_TO_JOIN:\r\n      // \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: false,\r\n        redirectToJoin: true\r\n      };\r\n    default:\r\n      // \r\n      return state;\r\n  }\r\n};\r\nexport default loginReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Close as CloseIcon,\r\n  ArrowBack as BackButton,\r\n} from \"@material-ui/icons\";\r\nimport Drawer from \"./Drawer\";\r\nimport useStyles from \"./NavBarStyle\";\r\nimport { logout } from \"../../Redux/loginRedux/loginAction\";\r\nimport { getUserProjects } from \"../../Redux/projectRedux/projectAction\";\r\nimport { getSubprojects } from \"../../Redux/subProjectRedux/subProjectAction\";\r\n\r\nimport { setupNavTitle } from \"./utils\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Link as RedirectLink } from \"react-router-dom\";\r\n\r\nfunction ButtonAppBar(props) {\r\n  const [title, setTitle] = useState(\"Enbuild\");\r\n  const classes = useStyles();\r\n  const [drawer, setDrawer] = useState(false);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [subprojects, setSubprojects] = useState([]);\r\n  const [subprojectName, setSubprojectName] = useState(\"\");\r\n  const [isLogout, setLogout] = useState(false);\r\n  const [isBack, setIsBack] = useState(false);\r\n  const [isDrawerVisible, setDrawerVisible] = useState(false);\r\n  const [drawerInvisibleRoutes] = useState([\r\n    \"/projectList\",\r\n    \"/subprojectList\",\r\n    \"/login\",\r\n    \"/register\",\r\n    \"/registerAdmin\",\r\n    \"/addProject\",\r\n    \"/dashboard\",\r\n  ]);\r\n  const [logoutInVisibleRoutes] = useState([\r\n    \"/login\",\r\n    \"/register\",\r\n    \"/registerAdmin\",\r\n  ]);\r\n  const [isAdmin, _] = useState(\r\n    global.config.secureStorage.getItem(\"is_admin\")\r\n  );\r\n  const his = useHistory();\r\n  // const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const toggleDrawer = event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setDrawer(prevState => !prevState);\r\n  };\r\n\r\n  const logout = () => {\r\n    // global.config.secureStorage.clear();\r\n    props.logout();\r\n    his.push(\"/login\");\r\n    // setLogoutState(true);\r\n  };\r\n  let handleProjectName = async e => {\r\n    setProjectName(e.target.value.projectName);\r\n    // console.log(e.target.value._id);\r\n    await props.getSubprojects(e.target.value._id);\r\n  };\r\n  let handleSubProjectName = e => {\r\n    setSubprojectName(e.target.value);\r\n  };\r\n\r\n  // let changeCreds = () => {\r\n  //   // global.config.secureStorage.setItem(\"projectId\", this.props.project._id);\r\n  //   console.log(projectName + \"changed\");\r\n  //   global.config.secureStorage.setItem(\"projectName\", projectName);\r\n  // };\r\n\r\n  his.listen((location, action) => {\r\n    //\r\n    if (drawerInvisibleRoutes.find(item => item === location.pathname)) {\r\n      setDrawerVisible(false);\r\n    } else {\r\n      setDrawerVisible(true);\r\n    }\r\n    if (logoutInVisibleRoutes.find(item => item === location.pathname)) {\r\n      setLogout(false);\r\n    } else {\r\n      setLogout(true);\r\n    }\r\n    setupNavTitle(his.location.pathname, setTitle, setIsBack);\r\n  });\r\n  useEffect(async () => {\r\n    await props.getUserProjects(\r\n      global.config.secureStorage.getItem(\"username\")\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (drawerInvisibleRoutes.find(item => item === his.location.pathname)) {\r\n      setDrawerVisible(false);\r\n    } else {\r\n      setDrawerVisible(true);\r\n    }\r\n    if (logoutInVisibleRoutes.find(item => item === his.location.pathname)) {\r\n      setLogout(false);\r\n    } else {\r\n      setLogout(true);\r\n    }\r\n    setupNavTitle(his.location.pathname, setTitle, setIsBack);\r\n  }, [his.location.pathname, logoutInVisibleRoutes, drawerInvisibleRoutes]);\r\n\r\n  let Showlogo = window.innerWidth > 400 ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          {Showlogo ? (\r\n            <Typography\r\n              variant=\"h5\"\r\n              className={classes.menuButton}\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              Enbuild\r\n            </Typography>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {his.location.pathname !== \"/\" ? (\r\n            <>\r\n              {!isBack ? (\r\n                <>\r\n                  {isDrawerVisible && (\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      className={classes.menuButton}\r\n                      color=\"inherit\"\r\n                      aria-label=\"menu\"\r\n                      onClick={toggleDrawer}\r\n                    >\r\n                      {!drawer && <MenuIcon />}\r\n                      {drawer && <CloseIcon />}\r\n                    </IconButton>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={his.goBack}\r\n                  >\r\n                    <BackButton />\r\n                  </IconButton>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className={classes.homepageIcon}>\r\n              {isDrawerVisible && (\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  className={classes.menuButton}\r\n                  color=\"inherit\"\r\n                  aria-label=\"menu\"\r\n                  onClick={toggleDrawer}\r\n                >\r\n                  {!drawer && <MenuIcon />}\r\n                  {drawer && <CloseIcon />}\r\n                </IconButton>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {his.location.pathname === \"/\" || title === \"Enbuild\" ? (\r\n              <RedirectLink\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"white\",\r\n                  fontFamily: \"Bungee Inline\",\r\n                  fontSize: \"1.25em\",\r\n                }}\r\n                to=\"/\"\r\n              >\r\n                Enbuild\r\n              </RedirectLink>\r\n            ) : (\r\n              title\r\n            )}\r\n          </Typography>\r\n\r\n          {his.location.pathname === \"/\" && (\r\n            <Grid\r\n              container\r\n              justify=\"flex-end\"\r\n              spacing={4}\r\n              style={{ marginRight: 10 }}\r\n              className={classes.navGrid}\r\n            >\r\n              <Grid item>\r\n                <Link\r\n                  to=\"about\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>ABOUT US</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"problems\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>PROBLEMS FACED</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"objective\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>OUR SOLUTION</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"timeline\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>TIMELINE</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"services\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>FEATURES AND SERVICES</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"demo\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>DEMO</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"contact\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <Typography>\r\n                    <strong>CONTACT US</strong>\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {isLogout &&\r\n            (his.location.pathname === \"/\" ? props.loggedIn : true) && ( // Hide logout button only when on homepage\r\n              <Button\r\n                variant=\"outlined\"\r\n                style={{ color: \"#2E86AB\", marginRight: \"10px\" }}\r\n                onClick={logout}\r\n              >\r\n                Logout\r\n              </Button>\r\n            )}\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n\r\n      <Toolbar />\r\n      {\r\n        isDrawerVisible && (\r\n          <Drawer\r\n            isOpen={drawer}\r\n            children={props.children}\r\n            toggleDrawer={toggleDrawer}\r\n            userProjects={props.userProjects}\r\n            subprojects={props.subProjects}\r\n            projectName={projectName}\r\n            subprojectName={subprojectName}\r\n            handleProjectName={handleProjectName}\r\n            handleSubProjectName={handleSubProjectName}\r\n          // changeCreds={changeCreds}\r\n          ></Drawer>\r\n        )\r\n      }\r\n\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userProjects: state.projectReducer.userProjects,\r\n    loggedIn: state.loginReducer.loggedIn,\r\n    subProjects: state.subProjectReducer.subProjects,\r\n  };\r\n};\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ClippedDrawer);\r\nexport default connect(mapStateToProps, {\r\n  logout,\r\n  getUserProjects,\r\n  getSubprojects,\r\n})(ButtonAppBar);\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"./DrawerStyle\";\r\nimport {\r\n  CssBaseline,\r\n  Toolbar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Divider,\r\n  SwipeableDrawer,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { drawerDataUtil } from \"./DrawerData\";\r\nimport DrawerItemWithContent from \"./DrawerItemWithContent\";\r\n\r\nfunction ClippedDrawer(props) {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [drawerItems, setDrawerItems] = useState(() => {\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    return drawerDataUtil(role);\r\n  });\r\n  const his = useHistory();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        className={classes.drawer}\r\n        variant=\"temporary\"\r\n        open={props.isOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        onOpen={() => {\r\n          props.toggleDrawer();\r\n        }}\r\n        onClose={() => {\r\n          props.toggleDrawer();\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <List className={classes.drawerContainer}>\r\n          {/* <div style={{ margin: \"0 10px\" }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Project Name\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                // value={props.projectName}\r\n                label=\"projectName\"\r\n                onChange={props.handleProjectName}\r\n              >\r\n                {props.userProjects\r\n                  ? props.userProjects.map((item, itemIndex) => {\r\n                      return (\r\n                        <MenuItem value={item}>{item.projectName}</MenuItem>\r\n                      );\r\n                    })\r\n                  : \"No Projects\"}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Sub Project Name\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label1\"\r\n                id=\"demo-simple-select1\"\r\n                // value={props.subprojectName}\r\n                label=\"Age\"\r\n                onChange={props.handleSubProjectName}\r\n              >\r\n                {console.log(props.subprojects)}\r\n                {props.subprojects\r\n                  ? props.subprojects.map((item, itemIndex) => {\r\n                      return (\r\n                        <MenuItem value={item}>{item.subProjectName}</MenuItem>\r\n                      );\r\n                    })\r\n                  : \"No Projects Selected\"}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Button\r\n              fullWidth\r\n              // onClick={props.changeCreds}\r\n              style={{ margin: \"10px 0\" }}\r\n            >\r\n              Go\r\n            </Button>\r\n          </div>\r\n\r\n          <Divider /> */}\r\n          {drawerItems.map((item, index) => {\r\n            return (\r\n              <>\r\n                {his.location.pathname !== \"/\" ? (\r\n                  <>\r\n                    {item.content ? (\r\n                      <DrawerItemWithContent\r\n                        item={item}\r\n                        toggleDrawer={props.toggleDrawer}\r\n                      />\r\n                    ) : (\r\n                      <Link\r\n                        to={item.route}\r\n                        style={{ textDecoration: \"none\" }}\r\n                        key={item.name}\r\n                      >\r\n                        <ListItem button onClick={props.toggleDrawer}>\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <span className={classes.linkDrawer}>\r\n                            {item.name}\r\n                          </span>\r\n                        </ListItem>\r\n                      </Link>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {item.content ? (\r\n                      <DrawerItemWithContent\r\n                        item={item}\r\n                        toggleDrawer={props.toggleDrawer}\r\n                      />\r\n                    ) : (\r\n                      <ScrollLink\r\n                        spy={true}\r\n                        smooth={true}\r\n                        to={item.route}\r\n                        style={{ textDecoration: \"none\" }}\r\n                        key={item.name}\r\n                      >\r\n                        <ListItem button onClick={props.toggleDrawer}>\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <span className={classes.linkDrawer}>\r\n                            {item.name}\r\n                          </span>\r\n                        </ListItem>\r\n                      </ScrollLink>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n      </SwipeableDrawer>\r\n      <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n        <Typography className={classes.projectName} variant=\"h6\" >\r\n          <strong>Project Name: {global.config.secureStorage.getItem(\"projectName\")}</strong>\r\n        </Typography>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ClippedDrawer);\r\n","import React from \"react\";\r\nimport {\r\n  ShoppingCart,\r\n  Add as AddIcon,\r\n  LocalActivity,\r\n  Receipt,\r\n  Work,\r\n  BugReport,\r\n  List as ListIcon,\r\n  PersonalVideo as Monitor,\r\n  BarChart as BarChartIcon,\r\n  PlaylistAdd as ToDoIcon,\r\n  Store as StoreIcon,\r\n  EventAvailable as Schedule,\r\n  PlaylistAddCheck as Delivery,\r\n  Person,\r\n  Help as HelpIcon,\r\n  ErrorOutline,\r\n  EmojiObjectsOutlined,\r\n  GroupWorkOutlined,\r\n  TimelineOutlined,\r\n  VerifiedUserOutlined,\r\n  Dashboard,\r\n  DonutLarge,\r\n  OndemandVideoOutlined,\r\n  ContactMail,\r\n  LibraryBooks,\r\n} from \"@material-ui/icons\";\r\n\r\nimport GavelIcon from \"@material-ui/icons/Gavel\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\nconst rolesWithQualityDrawerVisible = [\"quality_engineer\"];\r\nconst rolesWithSafetyDrawerVisible = [\"safety_engineer\"];\r\nconst rolesWithPlanningDrawerVisible = [\"planning_manager\"];\r\nconst rolesWithEditUserVisible = [\r\n  \"chief_engineer\",\r\n  \"project_manager\",\r\n  \"super_admin\",\r\n];\r\n\r\nexport const drawerDataUtil = role => {\r\n  if (window.location.href.split(\"/\")[3] === \"\") {\r\n    return homepageDrawerItems;\r\n  }\r\n  if (global.config.secureStorage.getItem(\"main_admin\")) {\r\n    return [dashboard, ...mainDrawer, editUsers];\r\n  }\r\n  if (global.config.rolesWithStoreDrawerVisible.find(item => item === role)) {\r\n    return [...storeDrawer];\r\n  }\r\n  if (rolesWithQualityDrawerVisible.find(item => item == role)) {\r\n    return [...qualityItems, todo];\r\n  }\r\n  if (rolesWithSafetyDrawerVisible.find(item => item == role)) {\r\n    return [...safetyItems, todo];\r\n  }\r\n  if (rolesWithPlanningDrawerVisible.find(item => item == role)) {\r\n    return [...planningItems];\r\n  }\r\n  if (rolesWithEditUserVisible.find(item => item == role)) {\r\n    return [...mainDrawer, editUsers];\r\n  }\r\n  return mainDrawer;\r\n};\r\n\r\nconst todo = { name: \"To Do\", route: \"/todo\", icon: <ToDoIcon /> };\r\nconst dashboard = {\r\n  name: \"Dashboard\",\r\n  route: \"/dashboard\",\r\n  icon: <Dashboard />,\r\n};\r\nconst editUsers = { name: \"Edit Users\", icon: <Person />, route: \"/editUser\" };\r\n// const addMaterial = {\r\n//   name: \"Add Material\",\r\n//   route: \"/addMaterial\",\r\n//   icon: <AddIcon />,\r\n// };\r\n\r\nconst equipmentsItems = [\r\n  { name: \"Fuel Consumption\", route: \"/store\", icon: <Schedule /> },\r\n];\r\nconst planningItems = [\r\n  { name: \"Bar Chart\", route: \"/barchart\", icon: <BarChartIcon /> },\r\n  { name: \"Monitoring\", route: \"/monitoring\", icon: <Monitor /> },\r\n  { name: \"Daily Progress Report\", route: \"/dpr\", icon: <DonutLarge /> },\r\n];\r\nconst misItems = [\r\n  { name: \"WBS report\", route: \"/wbs\", icon: <Schedule /> },\r\n  { name: \"Quality Report\", route: \"/activities\", icon: <BarChartIcon /> },\r\n  { name: \"Safety Report \", route: \"/activities\", icon: <Monitor /> },\r\n  {\r\n    name: \"Actually vs Estimated report \",\r\n    route: \"/activities\",\r\n    icon: <Delivery />,\r\n  },\r\n  { name: \"Stock Report \", route: \"/activities\", icon: <DonutLarge /> },\r\n  {\r\n    name: \"Project Summary Report\",\r\n    route: \"/activities\",\r\n    icon: <Delivery />,\r\n  },\r\n];\r\n\r\nconst libraryItems = [\r\n  {\r\n    name: \"Labour\",\r\n    route: \"/labour\",\r\n    icon: <PeopleIcon />,\r\n  },\r\n  { name: \"Material\", route: \"/materials\", icon: <BuildIcon /> },\r\n  { name: \"Equipment\", route: \"/equipment\", icon: <GavelIcon /> },\r\n];\r\n\r\nconst ss = [\r\n  { name: \"GRN \", route: \"/store\", icon: <Delivery /> },\r\n  { name: \"Issue request material \", route: \"/store\", icon: <Delivery /> },\r\n  { name: \"Issue material  \", route: \"/store\", icon: <Delivery /> },\r\n  { name: \" Daily store Report  \", route: \"/store\", icon: <Delivery /> },\r\n];\r\nconst storeDrawer = [\r\n  { name: \"Material Requisition\", route: \"/material\", icon: <Delivery /> },\r\n  { name: \"Store\", route: \"/store\", icon: <StoreIcon /> },\r\n  // { name: \"Store\", content: ss, icon: <StoreIcon /> },\r\n];\r\n\r\nconst safetyItems = [\r\n  { name: \"Checklist\", route: \"/checklist/safety\", icon: <Receipt /> },\r\n  { name: \"Issues\", route: \"/issues/safety\", icon: <BugReport /> },\r\n];\r\n\r\nconst qualityItems = [\r\n  { name: \"Checklist\", route: \"/checklist/quality\", icon: <Receipt /> },\r\n  { name: \"Issues\", route: \"/issues/quality\", icon: <BugReport /> },\r\n];\r\n\r\nconst mainDrawer = [\r\n  { name: \"Overview\", route: \"/overview\", icon: <LocalActivity /> },\r\n  { name: \"Activities\", route: \"/activities\", icon: <LocalActivity /> },\r\n  { name: \"Safety\", icon: <ListIcon />, content: safetyItems },\r\n  { name: \"Quality\", icon: <ListIcon />, content: qualityItems },\r\n  // { name: \"Purchase\", icon: <ShoppingCart />, content: storeDrawer },\r\n  // todo,\r\n  // { name: \"Planning\", icon: <ListIcon />, content: planningItems },\r\n  // { name: \"Equipments\", icon: <ListIcon />, content: equipmentsItems },\r\n  // { name: \"MIS\", icon: <ListIcon />, content: misItems },\r\n  // { name: \"Library\", icon: <ListIcon />, content: libraryItems },\r\n  // { name: \"Chat\", route: \"/activities\", icon: <ListIcon /> },\r\n  { name: \"Library\", icon: <LibraryBooks />, content: libraryItems },\r\n  { name: \"Planning\", icon: <ListIcon />, content: planningItems },\r\n  { name: \"Projects\", route: \"/projectList\", icon: <Work /> },\r\n  { name: \"Support\", route: \"/support\", icon: <HelpIcon /> },\r\n];\r\n\r\nconst homepageDrawerItems = [\r\n  { name: \"About Us\", route: \"about\", icon: <GroupWorkOutlined /> },\r\n  { name: \"Problems Faced\", route: \"problems\", icon: <ErrorOutline /> },\r\n  { name: \"Our Solution\", route: \"objective\", icon: <EmojiObjectsOutlined /> },\r\n  { name: \"Timeline\", route: \"timeline\", icon: <TimelineOutlined /> },\r\n  {\r\n    name: \"Features and Services\",\r\n    route: \"services\",\r\n    icon: <VerifiedUserOutlined />,\r\n  },\r\n  {\r\n    name: \"Demo\",\r\n    route: \"demo\",\r\n    icon: <OndemandVideoOutlined />,\r\n  },\r\n  {\r\n    name: \"Contact Us\",\r\n    route: \"contact\",\r\n    icon: <ContactMail />,\r\n  },\r\n  \r\n];\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Grow } from \"@material-ui/core\";\r\n\r\nconst color = \"#345BAE\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: 1400,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  active: {\r\n    // backgroundColor: color,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    justifyContent: \"right\",\r\n    color: color,\r\n    fontFamily: \"Bungee Inline\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    fontWeight: \"800\",\r\n    color: color,\r\n    textAlign: \"center\",\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  navGrid: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  homepageIcon: {\r\n    display: \"box\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n\r\n    color: color,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport { Add as AddIcon, ImportExport } from \"@material-ui/icons\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport AddDefault from \"./AddDefault\";\r\nimport { logout } from \"../../Redux/loginRedux/loginAction\";\r\nimport {\r\n  getDefaultChecklist,\r\n  updateDefaultChecklist,\r\n} from \"../../Redux/checkListRedux/checklistAction\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { verifyValidity } from \"./checklistUtil\";\r\nimport { previewImage } from \"antd/lib/upload/utils\";\r\nimport EditCheckList from \"./EditCheckList\";\r\nimport Papa from \"papaparse\";\r\n\r\nclass Checklist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const roles = [\r\n      \"junior_engineer\",\r\n      \"senior_engineer\",\r\n      \"project_manager\",\r\n      \"quality_engineer\",\r\n      \"safety_engineer\",\r\n      \"super_admin\",\r\n    ];\r\n    const isAddVisible = roles.find(item => item == role);\r\n    this.state = {\r\n      editmodalOpen: false,\r\n      modalOpen: false,\r\n      checklistTitle: \"\",\r\n      content: [],\r\n      loading: true,\r\n      defaultChecklist: [],\r\n      noOfChecklist: 1,\r\n      defaultChecklistID: \"null\",\r\n      alertChecklistTitle: false,\r\n      alertChecklistTitleField: \"\",\r\n      type: this.props.match.params.type,\r\n      isAddVisible: isAddVisible,\r\n      checklistTitleEdit: \"\",\r\n      editIndex: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const type = this.props.match.params.type;\r\n      const role = global.config.secureStorage.getItem(\"role\");\r\n      //\r\n      if (!verifyValidity(role, type)) {\r\n        // global.config.secureStorage.clear();\r\n        this.props.logout();\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n      this.props.getDefaultChecklist(this.props.match.params.type);\r\n    } catch (error) {}\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.match.params.type !== this.props.match.params.type) {\r\n      this.props.getDefaultChecklist(newProps.match.params.type);\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleChecklistDeleteCount = index => {\r\n    if (this.state.noOfChecklist === 1) return;\r\n    let newChecklist = [...this.state.content];\r\n    newChecklist.splice(index, 1);\r\n    this.setState({\r\n      content: newChecklist,\r\n      noOfChecklist: this.state.noOfChecklist - 1,\r\n    });\r\n  };\r\n\r\n  handleChecklistAddCount = () => {\r\n    this.setState({\r\n      noOfChecklist: this.state.noOfChecklist + 1,\r\n    });\r\n  };\r\n\r\n  handleModalOpen = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n    });\r\n    this.setState({\r\n      noOfChecklist: 1,\r\n      content: [],\r\n      checklistTitle: \"\",\r\n    });\r\n  };\r\n  handleAutoComplete = (event, value) => {\r\n    if (this.state.alertChecklistTitle) {\r\n      this.setState({\r\n        alertChecklistTitle: !this.state.alertChecklistTitle,\r\n        alertChecklistTitleField: \"\",\r\n      });\r\n    }\r\n    if (value === null) {\r\n      this.setState({\r\n        content: [],\r\n        noOfChecklist: 1,\r\n      });\r\n    }\r\n    if (typeof value === \"object\" && value !== null) {\r\n      let newChecklist = this.props.defaultChecklist.data.filter(\r\n        obj => obj.title === value.title\r\n      );\r\n      this.setState({\r\n        content: newChecklist[0].content,\r\n        noOfChecklist: newChecklist[0].content.length,\r\n      });\r\n    }\r\n    this.setState({\r\n      checklistTitle: value,\r\n    });\r\n  };\r\n\r\n  handleContent = (event, index) => {\r\n    let newContent = [...this.state.content];\r\n    newContent[index] = {\r\n      description: event.target.value,\r\n      // type: \"\",\r\n    };\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  };\r\n  guidGenerator = () => {\r\n    var S4 = function () {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return (\r\n      S4() +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      S4() +\r\n      S4()\r\n    );\r\n  };\r\n  submitActivity = () => {\r\n    let randomId = this.guidGenerator();\r\n    const { checklistTitle, content } = this.state;\r\n    if (checklistTitle === \"\") {\r\n      this.setState({\r\n        alertChecklistTitle: !this.state.alertChecklistTitle,\r\n        alertChecklistTitleField: \"Please provide a checklist title\",\r\n      });\r\n      return;\r\n    }\r\n    if (content.length === 0) {\r\n      alert(\"Please Fill sub-checklist name\");\r\n      return;\r\n    }\r\n    let newChecklist = [...this.props.defaultChecklist.data];\r\n    if (typeof checklistTitle === \"string\") {\r\n      let flag = false;\r\n      let newContent = [];\r\n      for (let i = 0; i < this.state.defaultChecklist.length; i++)\r\n        if (this.state.defaultChecklist[i].title === checklistTitle) {\r\n          newContent = [...this.state.defaultChecklist[i].content, ...content];\r\n          newChecklist[i].content = content;\r\n          flag = true;\r\n          break;\r\n        }\r\n      if (!flag) {\r\n        newContent = content;\r\n        newChecklist.push({\r\n          title: checklistTitle,\r\n          content: newContent,\r\n          id: randomId,\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.state.defaultChecklist.length; i++)\r\n        if (this.state.defaultChecklist[i].title === checklistTitle.title) {\r\n          checklistTitle.content = [...content];\r\n          newChecklist[i] = checklistTitle;\r\n          break;\r\n        }\r\n    }\r\n\r\n    this.props.updateDefaultChecklist(\r\n      this.props.defaultChecklist._id,\r\n      newChecklist,\r\n      this.props.match.params.type\r\n    );\r\n    this.setState({\r\n      defaultChecklist: newChecklist,\r\n    });\r\n    this.setState({\r\n      checklistTitle: \"\",\r\n      content: [],\r\n      noOfChecklist: 1,\r\n    });\r\n\r\n    this.handleModalOpen();\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (!this.props.loading && this.state.loading) {\r\n      this.setState({\r\n        loading: false,\r\n        defaultChecklist: this.props.defaultChecklist.data,\r\n        defaultChecklistID: this.props.defaultChecklist._id,\r\n      });\r\n    }\r\n  }\r\n\r\n  editActivity = () => {\r\n    let defChecklist = this.state.defaultChecklist;\r\n    defChecklist[this.state.editIndex].title = this.state.checklistTitleEdit;\r\n    console.log(defChecklist);\r\n    this.setState({\r\n      defaultChecklist: defChecklist,\r\n    });\r\n    this.props.updateDefaultChecklist(\r\n      this.props.defaultChecklist._id,\r\n      defChecklist,\r\n      this.props.match.params.type\r\n    );\r\n    this.handleEditModalOpen();\r\n  };\r\n\r\n  importExcel(e, defaultChecklist, update, type) {\r\n    let newChecklist = defaultChecklist.data;\r\n    const files = e.target.files;\r\n    if (files) {\r\n      Papa.parse(files[0], {\r\n        complete: function (results) {\r\n          let data;\r\n          data = results.data;\r\n          // data.forEach(element => {\r\n          //   console.log(\"Finished:\", element);\r\n          // });\r\n          for (const elem in data) {\r\n            if (elem != 0) {\r\n              if (data[elem] != \"\") {\r\n                let title = data[elem][0];\r\n                let content = [];\r\n                // console.log(\"Finished:\", data[elem]);\r\n\r\n                for (const dis in data[elem]) {\r\n                  if (dis != 0) {\r\n                    // console.log(\"dis:\", data[elem][dis]);\r\n                    if (data[elem][dis] != \"\") {\r\n                      content.push({ description: data[elem][dis] });\r\n                    }\r\n                  }\r\n                }\r\n                function guidGenerator() {\r\n                  var S4 = function () {\r\n                    return (((1 + Math.random()) * 0x10000) | 0)\r\n                      .toString(16)\r\n                      .substring(1);\r\n                  };\r\n                  return (\r\n                    S4() +\r\n                    S4() +\r\n                    \"-\" +\r\n                    S4() +\r\n                    \"-\" +\r\n                    S4() +\r\n                    \"-\" +\r\n                    S4() +\r\n                    \"-\" +\r\n                    S4() +\r\n                    S4() +\r\n                    S4()\r\n                  );\r\n                }\r\n                let randomId = guidGenerator();\r\n                console.log(randomId);\r\n                newChecklist.push({\r\n                  title: title,\r\n                  content: content,\r\n                  id: randomId,\r\n                });\r\n                update(defaultChecklist._id, newChecklist, type);\r\n              }\r\n            }\r\n            // console.log(\"uploadArr:\", newChecklist);\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTaskChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  handleEditModalOpen = i => {\r\n    this.setState({\r\n      editmodalOpen: !this.state.editmodalOpen,\r\n      editIndex: i,\r\n    });\r\n  };\r\n  render() {\r\n    console.log(this.state.defaultChecklist);\r\n    return (\r\n      <>\r\n        <div>\r\n          <EditCheckList\r\n            checklistTitleEdit={this.state.checklistTitleEdit}\r\n            handleEditModalOpen={this.handleEditModalOpen}\r\n            handleTaskChange={this.handleTaskChange}\r\n            editActivity={this.editActivity}\r\n            open={this.state.editmodalOpen}\r\n          />\r\n        </div>\r\n        {this.props.loading ? (\r\n          <Loading loading={true} />\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <AddDefault\r\n                handleChecklistAddCount={this.handleChecklistAddCount}\r\n                handleChecklistDeleteCount={this.handleChecklistDeleteCount}\r\n                noOfChecklist={this.state.noOfChecklist}\r\n                data={this.props.defaultChecklist.data}\r\n                checklistTitle={this.state.checklistTitle}\r\n                content={this.state.content}\r\n                handleAutoComplete={this.handleAutoComplete}\r\n                open={this.state.modalOpen}\r\n                handleModalOpen={this.handleModalOpen}\r\n                submitActivity={this.submitActivity}\r\n                handleContent={this.handleContent}\r\n                alertChecklistTitle={this.state.alertChecklistTitle}\r\n                alertChecklistTitleField={this.state.alertChecklistTitleField}\r\n              />\r\n            </div>\r\n            {this.state.isAddVisible && (\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    className=\"m-2\"\r\n                    color=\"primary\"\r\n                    // onClick={this.handleModalOpen}\r\n                  >\r\n                    <Typography><ImportExport /></Typography>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".csv,.xlsx,.xls\"\r\n                      onChange={e =>\r\n                        this.importExcel(\r\n                          e,\r\n                          this.props.defaultChecklist,\r\n                          this.props.updateDefaultChecklist,\r\n                          this.props.match.params.type\r\n                        )\r\n                      }\r\n                    />\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    className=\"\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleModalOpen}\r\n                  >\r\n                    <AddIcon />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {/* <Typography\r\n              className=\"d-flex justify-content-center my-3\"\r\n              variant=\"h4\"\r\n            >\r\n              Checklist\r\n            </Typography> */}\r\n            <div className=\"container\" style={{ marginTop: \"30px\" }}>\r\n              <ActivityList\r\n                iterList={this.props.defaultChecklist.data}\r\n                path={this.props.match.params.type}\r\n                handleEditModalOpen={this.handleEditModalOpen}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    defaultChecklist: state.checkListReducer.defaultChecklist,\r\n    loading: state.checkListReducer.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDefaultChecklist,\r\n  updateDefaultChecklist,\r\n  logout,\r\n})(Checklist);\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { Edit } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function ActivityList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.iterList && props.iterList.length !== 0 ? (\r\n        props.iterList.map((data, index) => {\r\n          return (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Link\r\n                style={{ textDecoration: \"none\", width: \"100%\" }}\r\n                to={`/checklist/${props.path}/${data.id}`}\r\n                key={index}\r\n              >\r\n                <Accordion className=\"my-2\">\r\n                  <AccordionSummary\r\n                    aria-controls={\"panelContent\" + index}\r\n                    id={\"panelHeader\" + index}\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {data.title}\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                </Accordion>\r\n              </Link>\r\n              <IconButton\r\n                aria-label=\"settings\"\r\n                onClick={() => {\r\n                  props.handleEditModalOpen(index);\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"#2E86AB\",\r\n                  color: \"#fff\",\r\n                  width: 45,\r\n                  margin: 10,\r\n                }}\r\n              >\r\n                <Edit />\r\n              </IconButton>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <Typography\r\n          className=\"mt-5 d-flex justify-content-center align-items-center\"\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          No Checklists Available !\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Grid,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { Delete, AddCircleOutline } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Autocomplete, {\r\n  createFilterOptions\r\n} from \"@material-ui/lab/Autocomplete\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function AddDefault(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const filter = createFilterOptions();\r\n\r\n  let content = [...props.content];\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        className=\"mt-5\"\r\n        open={props.open}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        fullScreen={fullScreen}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle className=\"mt-2\" id=\"form-dialog-title\">\r\n          New Checklist\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Provide a new Checklist Title and Checklists (if necessary)\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            value={props.checklistTitle}\r\n            onChange={(event, newValue) => {\r\n              if (typeof newValue === \"string\") {\r\n                props.handleAutoComplete(event, newValue);\r\n              } else if (newValue && newValue.inputValue) {\r\n                props.handleAutoComplete(event, newValue.inputValue);\r\n              } else {\r\n                props.handleAutoComplete(event, newValue);\r\n              }\r\n            }}\r\n            filterOptions={(options, params) => {\r\n              const filtered = filter(options, params);\r\n              if (params.inputValue !== \"\") {\r\n                filtered.push({\r\n                  inputValue: params.inputValue,\r\n                  title: `Add \"${params.inputValue}\"`\r\n                });\r\n              }\r\n              return filtered;\r\n            }}\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            options={props.data}\r\n            getOptionLabel={option => {\r\n              if (typeof option === \"string\") {\r\n                return option;\r\n              }\r\n              if (option.inputValue) {\r\n                return option.inputValue;\r\n              }\r\n              return option.title;\r\n            }}\r\n            renderOption={option => option.title}\r\n            className=\"mt-3 mb-2\"\r\n            freeSolo\r\n            fullWidth\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Checklist Title\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                error={props.alertChecklistTitle}\r\n                helperText={\r\n                  props.alertChecklistTitle\r\n                    ? props.alertChecklistTitleField\r\n                    : \"\"\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          {_.times(props.noOfChecklist, index => {\r\n            let indexValue = index + 1;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={10}>\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      label={\"Checklist Point \" + indexValue}\r\n                      type=\"text\"\r\n                      variant=\"standard\"\r\n                      value={\r\n                        typeof content[index] === \"object\" &&\r\n                        content[index] !== null\r\n                          ? content[index].description\r\n                          : \"\"\r\n                      }\r\n                      onChange={event => props.handleContent(event, index)}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      className=\"mt-2\"\r\n                      onClick={() => props.handleChecklistDeleteCount(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n          <Button\r\n            onClick={props.handleChecklistAddCount}\r\n            variant=\"outlined\"\r\n            className=\"my-3\"\r\n            startIcon={<AddCircleOutline />}\r\n          >\r\n            Add New Checklist Point\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions style={{ marginBottom: \"1.5em\", marginRight: \"1em\" }}>\r\n          <Button onClick={props.handleModalOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.submitActivity} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function EditCheckList(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} fullScreen={fullScreen}>\r\n        <DialogTitle>Edit CheckList</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Edit CheckList</DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskName\"\r\n            name=\"checklistTitleEdit\"\r\n            label=\"Checklist Title\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.checklistTitleEdit}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleEditModalOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          {/* <Button onClick={props.submitTask} color=\"primary\"> */}\r\n          <Button onClick={props.editActivity} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  makeStyles,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport userRoleOptions from \"./userRoles\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addProject } from \"../../Redux/projectRedux/projectAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { AddCircleOutline, DeleteOutlined } from \"@material-ui/icons\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\n// import Step3 from \"./Step3\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction NewProject(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    subProjectName: [],\r\n    projectType: \"\",\r\n    flatNumber: [],\r\n    floorNumber: [],\r\n    projectDescription: \"\",\r\n    userNumber: 1,\r\n    numberOfProjects: 1,\r\n    totalUsers: [],\r\n    users: [],\r\n    value: \"\",\r\n    userSuggestions: [],\r\n  });\r\n\r\n  // All the stuff related to material\r\n  const [materialCount, setMaterialCount] = useState(1);\r\n  const [materials, setMaterials] = useState([]);\r\n\r\n  // const deleteMaterial = i => {\r\n  //   if (materialCount === 1) {\r\n  //     alert(\"atleast 1 material is required\");\r\n  //     return;\r\n  //   }\r\n  //   var arr = [...materials];\r\n  //   arr.splice(i, 1);\r\n  //   setMaterials(arr);\r\n  //   setMaterialCount(prev => prev - 1);\r\n  //   //\r\n  // };\r\n\r\n  // const addMaterial = (event, index) => {\r\n  //   const prev = materials;\r\n  //   prev[index] = {\r\n  //     materialName: event.target.value,\r\n  //   };\r\n  //   //\r\n  //   setMaterials(prev);\r\n  // };\r\n\r\n  const [tempUserRoles, setTempUserRoles] = useState([]);\r\n  const [tempUsers, setTempUsers] = useState([]);\r\n  const loading = open && state.users.length === 0;\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${global.config.backendURL}/users/getUsers`\r\n        );\r\n\r\n        if (active) {\r\n          setState(prev => ({ ...prev, users: response.data }));\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setState(prev => ({ ...prev, users: [] }));\r\n    }\r\n  }, [open]);\r\n\r\n  const steps = [\r\n    \"Project Details\",\r\n    \"Add Subprojects\",\r\n    // \"Add Material Details\",\r\n    \"User Details\",\r\n  ];\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    console.log(state.projectType);\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  function addNewProject() {\r\n    setState({\r\n      ...state,\r\n      numberOfProjects: state.numberOfProjects + 1,\r\n    });\r\n  }\r\n\r\n  function deleteProject(index) {\r\n    if (state.numberOfProjects === 1) return;\r\n    let newSubProjectName = [...state.subProjectName];\r\n    let newFloorNumber = [...state.floorNumber];\r\n    let newFlatNumber = [...state.flatNumber];\r\n    newSubProjectName.splice(index, 1);\r\n    newFloorNumber.splice(index, 1);\r\n    newFlatNumber.splice(index, 1);\r\n    setState({\r\n      ...state,\r\n      subProjectName: newSubProjectName,\r\n      flatNumber: newFlatNumber,\r\n      floorNumber: newFloorNumber,\r\n      numberOfProjects: state.numberOfProjects - 1,\r\n    });\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setState({\r\n      projectName: \"\",\r\n      subProjectName: [],\r\n      flatNumber: [],\r\n      floorNumber: [],\r\n      projectDescription: \"\",\r\n      userNumber: 1,\r\n      numberOfProjects: 1,\r\n      totalUsers: [],\r\n      users: [],\r\n    });\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = global.config.secureStorage.getItem(\"user_id\");\r\n    const name = global.config.secureStorage.getItem(\"user_fullname\");\r\n    const username = global.config.secureStorage.getItem(\"username\");\r\n    const role = \"super_admin\";\r\n    const tempUser = { user, name, username, role };\r\n    const tempTotalUsers = state.totalUsers;\r\n    tempTotalUsers.push(tempUser);\r\n    const project = {\r\n      projectName: state.projectName,\r\n      numberOfProjects: state.numberOfProjects,\r\n      projectDescription: state.projectDescription,\r\n      userNumber: state.userNumber,\r\n      totalUsers: tempTotalUsers,\r\n      subProjectName: state.subProjectName,\r\n      flatNumber: state.flatNumber,\r\n      floorNumber: state.floorNumber,\r\n      projectType: state.projectType,\r\n      organization: global.config.secureStorage.getItem(\"organization\"),\r\n      // materials: materials,\r\n    };\r\n    if (state.projectName !== \"\") props.addProject(project);\r\n    else {\r\n      alert(\"Please Enter Project name\");\r\n    }\r\n  };\r\n\r\n  function getStepContent() {\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (\r\n          <Step1\r\n            projectName={state.projectName}\r\n            projectDescription={state.projectDescription}\r\n            handleChange={handleChange}\r\n            handleDropdownChange={handleDropdownChange}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <Step2\r\n            addNewProject={addNewProject}\r\n            deleteProject={deleteProject}\r\n            handleSecondStep={handleSecondStep}\r\n            flatNumber={state.flatNumber}\r\n            floorNumber={state.floorNumber}\r\n            subProjectName={state.subProjectName}\r\n            numberOfProjects={state.numberOfProjects}\r\n          />\r\n        );\r\n      // case 2:\r\n      //   return (\r\n      //     <Step3\r\n      //       materialCount={materialCount}\r\n      //       deleteMaterial={deleteMaterial}\r\n      //       setMaterialCount={setMaterialCount}\r\n      //       addMaterial={addMaterial}\r\n      //     />\r\n      //   );\r\n      case 2:\r\n        return (\r\n          <div className=\"container mt-2\">\r\n            <Grid container key={update}>\r\n              {_.times(state.userNumber, index => {\r\n                let tempIndex = index + 1;\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      className=\"mt-2 mb-1\"\r\n                      direction=\"row\"\r\n                      // justify=\"space-evenly\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={5}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Autocomplete\r\n                          defaultValue={\r\n                            tempUsers[index] ? tempUsers[index] : null\r\n                          }\r\n                          fullWidth\r\n                          onOpen={() => {\r\n                            setOpen(true);\r\n                            //\r\n                          }}\r\n                          onClose={() => {\r\n                            setOpen(false);\r\n                          }}\r\n                          id=\"autoComplete\"\r\n                          onChange={(event, value) =>\r\n                            handleUsers(event, value, index)\r\n                          }\r\n                          options={state.users}\r\n                          getOptionLabel={option =>\r\n                            option.firstName + \" \" + option.lastName\r\n                          }\r\n                          renderInput={params => (\r\n                            <TextField\r\n                              {...params}\r\n                              label={\"Select User \" + tempIndex}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Autocomplete\r\n                          defaultValue={\r\n                            tempUserRoles[index] ? tempUserRoles[index] : null\r\n                          }\r\n                          fullWidth\r\n                          name={\"userRole\" + index}\r\n                          onOpen={() => {\r\n                            setOpen(true);\r\n                          }}\r\n                          onClose={() => {\r\n                            setOpen(false);\r\n                          }}\r\n                          id=\"autoUser\"\r\n                          onChange={(event, value) => {\r\n                            //\r\n                            handleUserRoles(event, value, index);\r\n                          }}\r\n                          onInputChange={(event, value) => {\r\n                            //\r\n                          }}\r\n                          options={userRoleOptions}\r\n                          getOptionLabel={option => option.value}\r\n                          renderInput={params => (\r\n                            <TextField\r\n                              {...params}\r\n                              value={\r\n                                tempUserRoles[index]\r\n                                  ? tempUserRoles[index].value\r\n                                  : undefined\r\n                              }\r\n                              label={\"Role of User \" + tempIndex}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Grid\r\n                          item\r\n                          className=\"mt-3 mb-2\"\r\n                          style={{\r\n                            color: \"red\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            if (state.userNumber === 1) {\r\n                              return;\r\n                            }\r\n                            var temp2 = tempUserRoles;\r\n                            temp2.splice(index, 1);\r\n                            setTempUserRoles(temp2);\r\n                            temp2 = tempUsers;\r\n                            temp2.splice(index, 1);\r\n                            setTempUsers(temp2);\r\n                            var temp = state.totalUsers;\r\n                            if (state.totalUsers[index]) {\r\n                              temp.splice(index, 1);\r\n                            }\r\n                            setState(state => {\r\n                              return {\r\n                                ...state,\r\n                                totalUsers: temp,\r\n                                userNumber: state.userNumber - 1,\r\n                              };\r\n                            });\r\n                            console.table(state.totalUsers);\r\n                            setUpdate(!update);\r\n                          }}\r\n                        >\r\n                          <DeleteOutlined />\r\n                          <span>Delete User</span>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container>\r\n                        <div\r\n                          style={{\r\n                            backgroundColor: \"#D0D0D0\",\r\n                            height: \"0.1px\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        ></div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n              <Grid className=\"mt-3\" item>\r\n                <Button\r\n                  onClick={() => {\r\n                    setState(state => {\r\n                      return {\r\n                        ...state,\r\n                        userNumber: state.userNumber + 1,\r\n                      };\r\n                    });\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  startIcon={<AddCircleOutline />}\r\n                >\r\n                  Add new User\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown StepIndex\";\r\n    }\r\n  }\r\n\r\n  const handleSecondStep = (event, index) => {\r\n    if (event.target.name === \"subProjectName\") {\r\n      let newSubProjectName = [...state.subProjectName];\r\n      newSubProjectName[index] = event.target.value;\r\n      setState({\r\n        ...state,\r\n        subProjectName: newSubProjectName,\r\n      });\r\n    } else if (event.target.name === \"floorNumber\") {\r\n      if (event.target.value < 0) return;\r\n      let newFloorNumber = [...state.floorNumber];\r\n      newFloorNumber[index] = event.target.value;\r\n      setState({\r\n        ...state,\r\n        floorNumber: newFloorNumber,\r\n      });\r\n    } else if (event.target.name === \"flatNumber\") {\r\n      if (event.target.value < 0) return;\r\n      let newFlatNumber = [...state.flatNumber];\r\n      newFlatNumber[index] = event.target.value;\r\n      setState({\r\n        ...state,\r\n        flatNumber: newFlatNumber,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    console.log(event.target.value);\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDropdownChange = (e, newValue) => {\r\n    if (newValue != null) {\r\n      setState({\r\n        ...state,\r\n        projectType: newValue.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUsers = (event, value, index) => {\r\n    if (!value) return;\r\n    let tempReference = [...state.totalUsers];\r\n    let tempData = {};\r\n    tempData = {\r\n      ...state.totalUsers[index],\r\n      user: value ? value._id : \"\",\r\n      name: value.firstName + \" \" + value.lastName,\r\n      username: value.username,\r\n    };\r\n    tempReference[index] = tempData;\r\n    setTempUsers([...tempUsers, value]);\r\n    setState({\r\n      ...state,\r\n      totalUsers: tempReference,\r\n    });\r\n  };\r\n\r\n  const handleUserRoles = (event, value, index) => {\r\n    //\r\n    //\r\n\r\n    var temp = tempUserRoles;\r\n    temp[index] = value;\r\n    setTempUserRoles(temp);\r\n    let tempReference = [...state.totalUsers];\r\n    let tempData = {};\r\n    tempData = {\r\n      ...state.totalUsers[index],\r\n      role: value.key,\r\n    };\r\n    tempReference[index] = tempData;\r\n\r\n    setState({\r\n      ...state,\r\n      totalUsers: tempReference,\r\n    });\r\n  };\r\n\r\n  if (props.loading) {\r\n    return <Loading loading={props.loading} />;\r\n  }\r\n\r\n  if (props.created) {\r\n    return <Redirect to=\"/projectList\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.notifications && (\r\n        <Notifications notifications={props.notifications} />\r\n      )}\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {props.notifications && (\r\n          <Notifications notifications={props.notifications} />\r\n        )}\r\n        <form onSubmit={onSubmit}>\r\n          {activeStep === steps.length ? (\r\n            <div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Typography className={classes.instructions}>\r\n                  All steps are completed\r\n                </Typography>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={handleReset}\r\n                  style={{ margin: \"0px 5px\" }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  style={{ margin: \"0px 5px\" }}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  style={{ margin: \"0px 5px\" }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {getStepContent()}\r\n              <div className=\"d-flex justify-content-center mt-4\">\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  className={classes.backButton}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNext}\r\n                >\r\n                  {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNewProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project: state.projectReducer,\r\n    notifications: state.notifications,\r\n    created: state.projectReducer.success,\r\n    loading: state.projectReducer.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addProject })(NewProject);\r\n","import React from \"react\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport Autocomplete, {\r\n  createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\nconst Step1 = props => {\r\n  const filter = createFilterOptions();\r\n  return (\r\n    <div className=\"container mt-2\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"projectName\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={props.projectName}\r\n            onChange={props.handleChange}\r\n            id=\"projectName\"\r\n            label=\"Project Name\"\r\n            autoFocus\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"projectDescription\"\r\n            label=\"Location\"\r\n            multiline\r\n            placeholder=\"Project Location\"\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            value={props.projectDescription}\r\n            onChange={props.handleChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          {/* <TextField\r\n            id=\"outlined-select-currency-native\"\r\n            select\r\n            label=\"Type of Project\"\r\n            name=\"projectType\"\r\n            value={props.projectType}\r\n            onChange={props.handleChange}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n          >\r\n            {Types.map(option => (\r\n              <option key={option.key} value={option.value}>\r\n                {option.value}\r\n              </option>\r\n            ))}\r\n          </TextField> */}\r\n          <Autocomplete\r\n            style={{ width: 200 }}\r\n            value={props.projectType}\r\n            options={[\r\n              { id: 1, value: \"Building Works\" },\r\n              { id: 2, value: \"Infrastructure\" },\r\n            ]}\r\n            getOptionSelected={(option, value) => option.value === value.value}\r\n            onChange={props.handleDropdownChange}\r\n            getOptionLabel={option => option.value}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                name=\"projectType\"\r\n                label=\"Project Type\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step1;\r\n","import React from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { AddCircleOutline } from \"@material-ui/icons\";\r\n\r\nconst Step2 = props => {\r\n  return (\r\n    <div className=\"container mt-2\" style={{ marginBottom: \"1em\" }}>\r\n      {_.times(props.numberOfProjects, i => (\r\n        <React.Fragment key={i}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"subProjectName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={\r\n                  props.subProjectName.length !== 0\r\n                    ? props.subProjectName[i]\r\n                    : \"\"\r\n                }\r\n                onChange={event => props.handleSecondStep(event, i)}\r\n                id=\"projectName\"\r\n                label=\"Subproject Name\"\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"floorNumber\"\r\n                fullWidth\r\n                id=\"floorNumber\"\r\n                onChange={event => props.handleSecondStep(event, i)}\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                label=\"No. of Floors\"\r\n                value={\r\n                  props.floorNumber.length !== 0 ? props.floorNumber[i] : 0\r\n                }\r\n                type=\"number\"\r\n                variant=\"filled\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"flatNumber\"\r\n                fullWidth\r\n                id=\"flatNumber\"\r\n                onChange={event => props.handleSecondStep(event, i)}\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                label=\"No. of Flats per floor\"\r\n                value={props.flatNumber.length !== 0 ? props.flatNumber[i] : 0}\r\n                type=\"number\"\r\n                variant=\"filled\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <div className=\"my-3\">\r\n            <Grid\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              container\r\n            >\r\n              <div onClick={() => props.deleteProject(i)}>\r\n                <Grid\r\n                  item\r\n                  className=\"mb-1\"\r\n                  style={{ color: \"red\", cursor: \"pointer\" }}\r\n                >\r\n                  <DeleteOutlined fontSize=\"default\" />\r\n                  <span>Delete Subproject</span>\r\n                </Grid>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#D0D0D0\",\r\n                  height: \"0.1px\",\r\n                  width: \"100%\",\r\n                }}\r\n              ></div>\r\n            </Grid>\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n      <div>\r\n        <Grid item style={{ marginLeft: \"2px\" }}>\r\n          <Button\r\n            onClick={() => props.addNewProject()}\r\n            variant=\"outlined\"\r\n            startIcon={<AddCircleOutline />}\r\n          >\r\n            Add New Subproject\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step2;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as action from \"../Redux/loginRedux/loginAction\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { LockOutlined as LockOutlinedIcon } from \"@material-ui/icons\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport { store } from \"react-notifications-component\";\r\nimport firebase from \"../firebase\";\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: false,\r\n      username: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      fromRegister: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.register === true) {\r\n      this.setState({ fromRegister: true });\r\n      store.addNotification({\r\n        title: \"Successfully Registered\",\r\n        message: \"Login to your Account\",\r\n        type: \"success\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animated\", \"fadeIn\"],\r\n        animationOut: [\"animated\", \"fadeOut\"],\r\n        dismiss: {\r\n          duration: 3000,\r\n          pauseOnHover: true,\r\n        },\r\n      });\r\n    }\r\n\r\n    // to be tested\r\n    // if (!global.config.secureStorage.getItem(\"notification_id\")) {\r\n    //   console.log('ss')\r\n    //   const messaging = firebase.messaging();\r\n    //   messaging\r\n    //     .requestPermission()\r\n    //     .then(() => {\r\n    //       return messaging.getToken();\r\n    //     })\r\n    //     .then(token => {\r\n    //       global.config.secureStorage.setItem(\"notification_id\", token);\r\n    //     })\r\n    //     .catch(err => console.error(err));\r\n    // }\r\n  }\r\n\r\n  handleUsernameChange = e => {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = e => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleForgotPassword = e => {\r\n    e.preventDefault();\r\n    alert(\"Work in Progress...\");\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.login(this.state.username, this.state.password);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        {global.config.secureStorage.getItem(\"main_admin\") &&\r\n          this.props.loggedIn === true && <Redirect to=\"/dashboard\" />}\r\n        {!global.config.secureStorage.getItem(\"main_admin\") &&\r\n          this.props.loggedIn === true && (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/projectList\",\r\n                state: this.state.username,\r\n              }}\r\n            />\r\n          )}\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                value={this.state.username}\r\n                onChange={this.handleUsernameChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"UserName\"\r\n                name=\"tel\"\r\n                autoComplete=\"tel\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                value={this.state.password}\r\n                onChange={this.handlePasswordChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              {/* <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              /> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit}\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                  <Link href=\"/registerAdmin\" variant=\"body2\">\r\n                    {\"Sign Up as Organization\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Sign Up as User\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={8}></Box>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n    error: state.loginReducer.error,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: (user, password) => dispatch(action.login(user, password)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Login));\r\n","import {\r\n  REGISTER_FAILURE,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  USERNAME_EXISTS,\r\n} from \"./registerActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst unameNotificationOpts = {\r\n  // uid: 'once-please', // you can specify your own uid if required\r\n  title: \"Error\",\r\n  message: \"User Already Registered ! Please Login\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst failureNotificationOpts = {\r\n  // uid: 'once-please', // you can specify your own uid if required\r\n  title: \"Oops\",\r\n  message: \"Some Error Occured ! Try Again !\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"User registration successful\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\nexport const registerRequest = () => {\r\n  return {\r\n    type: REGISTER_REQUEST,\r\n  };\r\n};\r\nexport const usernameExists = error => {\r\n  return {\r\n    type: USERNAME_EXISTS,\r\n    error: error,\r\n  };\r\n};\r\nexport const registerSuccess = () => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const registerFailure = error => {\r\n  return {\r\n    type: REGISTER_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const register = ({\r\n  email,\r\n  username,\r\n  phone,\r\n  organization,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  isAdmin,\r\n  requestAdmin,\r\n  mainAdmin,\r\n}) => {\r\n  const reqData = {\r\n    email,\r\n    phone,\r\n    username,\r\n    organization,\r\n    password,\r\n    firstName,\r\n    lastName,\r\n    isAdmin,\r\n    requestAdmin,\r\n    mainAdmin,\r\n  };\r\n  console.log(reqData);\r\n\r\n  return async function (dispatch) {\r\n    dispatch(registerRequest());\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/register`,\r\n        reqData\r\n      );\r\n      if (res.data.err && res.data.err === \"UEXIST\") {\r\n        dispatch(usernameExists(res.data.err));\r\n        dispatch(Notifications.error(unameNotificationOpts));\r\n        return;\r\n      }\r\n      dispatch(registerSuccess());\r\n      dispatch(Notifications.success(successNotificationOpts));\r\n    } catch (err) {\r\n      dispatch(registerFailure(err));\r\n      dispatch(Notifications.error(failureNotificationOpts));\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserProjects } from \"../../Redux/projectRedux/projectAction\";\r\nimport Project from \"./Project\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { Button } from \"@material-ui/core\";\r\nclass ProjectList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const admin = global.config.secureStorage.getItem(\"is_admin\");\r\n    this.state = {\r\n      loading: false,\r\n      isAdmin: admin,\r\n    };\r\n  }\r\n\r\n  toggleLoading = value => {\r\n    this.setState({\r\n      loading: value,\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUserProjects(\r\n      global.config.secureStorage.getItem(\"username\")\r\n    );\r\n  }\r\n\r\n  goToAddProject = () => {\r\n    //\r\n    this.props.history.push(\"/addProject\");\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userProjects);\r\n    if (this.props.userProjectLoading || this.state.loading) {\r\n      return <Loading loading={true} />;\r\n    }\r\n    if (this.props.userProjectSuccess && this.props.userProjects.length === 0) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            width: \"100vw\",\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          <h2 style={{ textAlign: \"center\" }}>\r\n            No projects are assigned to you right now!!\r\n          </h2>\r\n          {this.state.isAdmin && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              style={{ marginTop: \"10px\" }}\r\n              onClick={this.goToAddProject}\r\n            >\r\n              Add New Project\r\n            </Button>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.userProjectIsError) {\r\n      return <h1>Error</h1>;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          {this.props.userProjects.map((item, index) => (\r\n            <Project\r\n              project={item}\r\n              key={index}\r\n              history={this.props.history}\r\n              setLoading={this.toggleLoading}\r\n              admin={this.state.isAdmin}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginLeft: \"20px\",\r\n          }}\r\n        >\r\n          {this.state.isAdmin && (\r\n            <Button onClick={this.goToAddProject}>Add Another Project</Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.loginReducer.user,\r\n    userProjects: state.projectReducer.userProjects,\r\n    userProjectLoading: state.projectReducer.userProjectLoading,\r\n    userProjectIsError: state.projectReducer.userProjectIsError,\r\n    userProjectSuccess: state.projectReducer.userProjectSuccess,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserProjects: ids => dispatch(getUserProjects(ids)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectList);\r\n","import React, { Component } from \"react\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport Style from \"./project.module.scss\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  // CardHeader,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { ExpandMore, ExpandLess, Edit } from \"@material-ui/icons\";\r\n\r\nimport * as action from \"../../Redux/projectRedux/projectAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nclass Project extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n    };\r\n  }\r\n  handleExpandClick = () => {\r\n    this.setState({ expanded: !this.state.expanded });\r\n  };\r\n  cardClicked = async () => {\r\n    this.props.setLoading(true);\r\n    global.config.secureStorage.setItem(\"projectId\", this.props.project._id);\r\n    global.config.secureStorage.setItem(\r\n      \"projectName\",\r\n      this.props.project.projectName\r\n    );\r\n    const username = global.config.secureStorage.getItem(\"username\");\r\n    global.config.secureStorage.setItem(\r\n      \"projectType\",\r\n      this.props.project.projectType\r\n    );\r\n    try {\r\n      const response = await axios.get(\r\n        `${global.config.backendURL}/users/getRoleByProjectId`,\r\n        {\r\n          params: {\r\n            projectId: this.props.project._id,\r\n            username: username,\r\n          },\r\n        }\r\n      );\r\n      this.props.setLoading(false);\r\n      global.config.secureStorage.setItem(\"role\", response.data);\r\n      //\r\n      if (\r\n        global.config.rolesWithStoreDrawerVisible.find(\r\n          item => item === response.data\r\n        )\r\n      ) {\r\n        this.props.history.push(\"/store\");\r\n      } else {\r\n        this.props.history.push(\"/subprojectList\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      this.props.setLoading(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.notifications && (\r\n          <>\r\n            <Notifications notifications={this.props.notifications} />\r\n          </>\r\n        )}\r\n        <Card className={Style.card}>\r\n          {/* <CardHeader\r\n          onClick={this.cardClicked}\r\n          className={Style.header}\r\n          title={this.props.project.projectName}\r\n          subheader={this.props.project.projectDescription}\r\n          action={\r\n            <IconButton aria-label=\"settings\" onClick={this.handleExpandClick}>\r\n              <ExpandMore />\r\n            </IconButton>\r\n          }\r\n        /> */}\r\n          <CardContent onClick={this.cardClicked}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n                style={{ fontWeight: 700 }}\r\n                noWrap\r\n              >\r\n                {this.props.project.projectName}\r\n              </Typography>\r\n              <IconButton\r\n                aria-label=\"settings\"\r\n                style={{\r\n                  backgroundColor: \"#2E86AB\",\r\n                  color: \"#fff\",\r\n                  padding: 4,\r\n                  marginRight: 4,\r\n                }}\r\n              >\r\n                <Edit />\r\n              </IconButton>\r\n            </div>\r\n            <Typography variant=\"body1\">\r\n              {this.props.project.projectDescription}\r\n            </Typography>\r\n            <div className={Style.project__flat}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                display=\"inline\"\r\n                style={{ fontWeight: 700 }}\r\n              >\r\n                Number of subprojects:\r\n              </Typography>\r\n              <Typography variant=\"body2\" noWrap display=\"inline\">\r\n                {\" \"}\r\n                {this.props.project.numberOfProjects}\r\n              </Typography>\r\n              <br></br>\r\n              {/* <br></br> */}\r\n              <Typography\r\n                variant=\"body2\"\r\n                display=\"inline\"\r\n                style={{ fontWeight: 700 }}\r\n              >\r\n                Number of users:\r\n              </Typography>\r\n              <Typography variant=\"body2\" noWrap display=\"inline\">\r\n                {\" \"}\r\n                {this.props.project.userNumber}\r\n              </Typography>\r\n            </div>\r\n          </CardContent>\r\n          {this.props.admin && (\r\n            <>\r\n              <div className={Style.expand}>\r\n                <IconButton\r\n                  aria-label=\"settings\"\r\n                  onClick={this.handleExpandClick}\r\n                >\r\n                  {this.state.expanded ? <ExpandLess /> : <ExpandMore />}\r\n                </IconButton>\r\n              </div>\r\n              <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent className={Style.inner}>\r\n                  <center>\r\n                    <Button\r\n                      onClick={e => {\r\n                        e.preventDefault();\r\n                        this.props.deleteProject(this.props.project._id);\r\n                      }}\r\n                      color=\"secondary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </center>\r\n                </CardContent>\r\n              </Collapse>\r\n            </>\r\n          )}\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteProject: projectId => dispatch(action.deleteProject(projectId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSubprojects } from \"../../Redux/subProjectRedux/subProjectAction\";\r\nimport Subproject from \"./Subproject\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nclass ProjectList extends Component {\r\n  async componentDidMount() {\r\n    await this.props.getSubprojects(\r\n      global.config.secureStorage.getItem(\"projectId\")\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.loading) {\r\n      return <Loading loading={true} />;\r\n    }\r\n    if (this.props.isError) {\r\n      return <h1>Something went wrong</h1>;\r\n    }\r\n    if (this.props.success && this.props.subProjects.length === 0) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100vw\",\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          <h2 style={{ textAlign: \"center\" }}>\r\n            No subprojects available right now!!\r\n          </h2>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          {/* {this.props.subProjects} */}\r\n          {this.props.subProjects.map((item, index) => (\r\n            <Subproject\r\n              project={item}\r\n              key={index}\r\n              history={this.props.history}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    subProjects: state.subProjectReducer.subProjects,\r\n    loading: state.subProjectReducer.loading,\r\n    success: state.subProjectReducer.success,\r\n    isError: state.subProjectReducer.isError,\r\n    error: state.subProjectReducer.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSubprojects: id => dispatch(getSubprojects(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectList);\r\n","import React, { Component } from \"react\";\r\nimport Style from \"./subproject.module.scss\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nexport default class Subproject extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  cardClicked = () => {\r\n    console.log(this.props.project._id);\r\n    global.config.secureStorage.setItem(\"subprojectId\", this.props.project._id);\r\n    global.config.secureStorage.setItem(\r\n      \"subProjectName\",\r\n      this.props.project.subProjectName\r\n    );\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n\r\n    if (role === \"quality_engineer\") {\r\n      this.props.history.push(\"/checklist/quality\");\r\n      return;\r\n    }\r\n    if (role === \"safety_engineer\") {\r\n      this.props.history.push(\"/checklist/safety\");\r\n      return;\r\n    }\r\n    if (role == \"planning_manager\") {\r\n      this.props.history.push(\"/plan\");\r\n      return;\r\n    }\r\n    this.props.history.push(\"/overview\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className={Style.card} onClick={this.cardClicked}>\r\n        <Typography variant=\"p\" style={{ fontWeight: 700 }} noWrap>\r\n          Sub Project:\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"primary\"\r\n          style={{ fontWeight: 700 }}\r\n          noWrap\r\n        >\r\n          {this.props.project.subProjectName}\r\n        </Typography>\r\n        {/* <div className={Style.project__flat}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            display=\"inline\"\r\n            style={{ fontWeight: 700 }}\r\n          >\r\n            Number of floors:\r\n          </Typography>\r\n          <Typography variant=\"body2\" noWrap display=\"inline\">\r\n            {\" \"}\r\n            {this.props.project.floorNumber}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography\r\n            variant=\"body2\"\r\n            display=\"inline\"\r\n            style={{ fontWeight: 700 }}\r\n          >\r\n            Number of flats per floor:\r\n          </Typography>\r\n          <Typography variant=\"body2\" noWrap display=\"inline\">\r\n            {\" \"}\r\n            {this.props.project.flatNumber}\r\n          </Typography>\r\n        </div> */}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"subproject_card__1Aa6N\",\"project__header\":\"subproject_project__header__3D3ek\",\"project__description\":\"subproject_project__description__1TWyK\",\"project__flat\":\"subproject_project__flat__3CA4S\",\"project__flat__title\":\"subproject_project__flat__title__XMm_E\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport OurTable from \"../../Components/tableCard\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport AddIssue from \"./AddIssue\";\r\nimport TableIssues from \"./TableIssues\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  GridList,\r\n  GridListTile,\r\n  Backdrop,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport * as action from \"../../Redux/IssuesRedux/issuesAction\";\r\nimport {\r\n  PhotoCamera,\r\n  Check,\r\n  PanTool,\r\n  Add,\r\n  CloudDownload,\r\n} from \"@material-ui/icons\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport axios from \"axios\";\r\nimport { Tab } from \"@material-ui/core\";\r\n\r\nclass Issues extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role2 = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\r\n      \"safety_engineer\",\r\n      \"quality_engineer\",\r\n      \"super_admin\",\r\n      \"project_manager\",\r\n      \"senior_engineer\",\r\n    ];\r\n    const isAddVisible = editRoles.find(item => item == role2) ? true : false;\r\n\r\n    const approvableRoles = [\r\n      \"senior_engineer\",\r\n      \"project_manager\",\r\n      \"super_admin\",\r\n    ];\r\n    const isApprovable = approvableRoles.find(item => item == role2)\r\n      ? true\r\n      : false;\r\n    this.state = {\r\n      open: false,\r\n      constPics: [],\r\n      section: \"\",\r\n      desc: \"\",\r\n      createIssue: false,\r\n      location: \"\",\r\n      viewImages: [],\r\n      priority: \"\",\r\n      data: [],\r\n      initialData: [],\r\n      loading: false,\r\n      isAddVisible: isAddVisible,\r\n      isApprovable: isApprovable,\r\n      approveImage: \"\",\r\n      isOpenTable: false,\r\n      role: global.config.secureStorage.getItem(\"role\"),\r\n    };\r\n  }\r\n\r\n  saveIssueSectionToState = event => {\r\n    this.setState({ section: event.target.value });\r\n  };\r\n  saveIssueDescriptionToState = event => {\r\n    this.setState({ desc: event.target.value });\r\n  };\r\n\r\n  savelocationToState = event => {\r\n    this.setState({ location: event.target.value });\r\n  };\r\n\r\n  savepriorityToState = event => {\r\n    const val = event.target.value > 0 ? event.target.value : 0;\r\n    this.setState({ priority: val });\r\n  };\r\n  toggleCreateNewIssue = () => {\r\n    this.setState({ createIssue: !this.state.createIssue });\r\n  };\r\n\r\n  toggleOpenTable = () => {\r\n    this.setState({ isOpenTable: !this.state.isOpenTable });\r\n  };\r\n\r\n  toggleCloseTable = () => {\r\n    this.setState({ isOpenTable: false });\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  handleSubmit = () => {\r\n    let now = new Date();\r\n    const date =\r\n      now.getDate() +\r\n      \"/\" +\r\n      (parseInt(now.getMonth()) + 1).toString() +\r\n      \"/\" +\r\n      now.getFullYear();\r\n    var images = [];\r\n    this.state.constPics.forEach(ele => {\r\n      images.push(ele.base64);\r\n    });\r\n    const payload = {\r\n      id: Date.now(),\r\n      date: date,\r\n      location: this.state.location,\r\n      priority: this.state.priority,\r\n      section: this.state.section,\r\n      desc: this.state.desc,\r\n      images: images,\r\n      subProjectId: global.config.secureStorage.getItem(\"subprojectId\"),\r\n      type: this.props.match.params.type,\r\n    };\r\n    this.props.saveIssue(payload);\r\n    this.toggleCreateNewIssue();\r\n  };\r\n\r\n  savePicsToState = files => {\r\n    this.setState({ constPics: files });\r\n    //\r\n  };\r\n  handelApproveImg = file => {\r\n    // console.log(file.toString());\r\n    if (file == \"\") {\r\n      this.setState({\r\n        approveImage: \"\",\r\n      });\r\n    }\r\n    this.setState({\r\n      approveImage: file.toString(),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const subProjectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    //\r\n    const type = this.props.match.params.type;\r\n    //\r\n    this.props.getIssues(subProjectId, type);\r\n  }\r\n\r\n  setImages = list => {\r\n    this.setState({\r\n      viewImages: list,\r\n    });\r\n  };\r\n  handleDropdownChange = e => {\r\n    console.log(e.target.value);\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        priority: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.match.params.type !== this.props.match.params.type) {\r\n      const subProjectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n\r\n      this.props.getIssues(subProjectId, newProps.match.params.type);\r\n    }\r\n  }\r\n  top = 50;\r\n  left = 50;\r\n  width = window.innerWidth > 400 ? \"60%\" : \"100%\";\r\n  num = window.innerWidth > 1000 ? 1 : 2;\r\n  render() {\r\n    const { isOpenTable, isAddVisible } = this.state;\r\n\r\n    if (isOpenTable) {\r\n      return (\r\n        <TableIssues\r\n          isApprovable={this.state.isApprovable}\r\n          title=\"Issues\"\r\n          subtitle=\"Track Your Issues Here\"\r\n          data={this.props.issuesData}\r\n          toggleCloseTable={this.toggleCloseTable}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid container direction=\"row\" style={{ flex: \"1\" }}>\r\n        <Grid className=\"container-sm\" item xs={12}>\r\n          <Modal\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={this.state.open}>\r\n              <div\r\n                className=\"container mt-2\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: `${this.top}%`,\r\n                  left: `${this.left}%`,\r\n                  transform: `translate(-${this.top}%, -${this.left}%)`,\r\n                  margin: \"30px auto\",\r\n                  backgroundColor: \"white\",\r\n                  maxWidth: `${this.width}`,\r\n                  padding: \"20px 20px\",\r\n                  boxShadow:\r\n                    \"0px 20px 30px rgba(0, 0, 0, 0.1), 0px 8px 8px rgba(0, 0, 0, 0.15),0px 4px 4px rgba(0, 0, 0, 0.5)\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    justifyContent: \"space-around\",\r\n                    overflow: \"hidden\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                >\r\n                  <GridList\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 450,\r\n                    }}\r\n                    className=\"justify-content-center align-items-center\"\r\n                  >\r\n                    {this.state.viewImages.length === 0 ||\r\n                    this.state.viewImages === [] ? (\r\n                      <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <h5>No Photos Uploaded</h5>\r\n                      </div>\r\n                    ) : (\r\n                      this.state.viewImages.map((ele, key, index) => {\r\n                        return (\r\n                          <img\r\n                            src={ele}\r\n                            alt={\"Contruction\" + key.toString()}\r\n                            style={{ width: \"100%\", height: \"auto\" }}\r\n                            // width=\"100%\"\r\n                            // height=\"100%\"\r\n                          />\r\n                        );\r\n                      })\r\n                    )}\r\n                  </GridList>\r\n                </div>\r\n                <br />\r\n                <Grid\r\n                  style={{ flex: \"1\" }}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  // className=\"justify-content-center align-items-center\"\r\n                >\r\n                  <Grid item>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                      Close\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </Grid>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isAddVisible && (\r\n          <>\r\n            {this.state.createIssue ? (\r\n              <AddIssue\r\n                classes={this.classes}\r\n                desc={this.state.desc}\r\n                section={this.state.section}\r\n                priority={this.state.priority}\r\n                location={this.state.location}\r\n                constPics={this.state.constPics}\r\n                saveIssueSectionToState={this.saveIssueSectionToState}\r\n                saveIssueDescriptionToState={this.saveIssueDescriptionToState}\r\n                handleSubmit={this.handleSubmit}\r\n                savepriorityToState={this.savepriorityToState}\r\n                toggleCreateNewIssue={this.toggleCreateNewIssue}\r\n                savelocationToState={this.savelocationToState}\r\n                savePicsToState={files => this.savePicsToState(files)}\r\n                handleDropdownChange={this.handleDropdownChange}\r\n              />\r\n            ) : (\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                style={{ margin: \"10px\" }}\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    style={{ margin: 10 }}\r\n                    onClick={this.toggleCreateNewIssue}\r\n                    size=\"large\"\r\n                    startIcon={<Add />}\r\n                  >\r\n                    Add Issue\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Button\r\n                    style={{ margin: 10, backgroundColor: \"#4a934a\" }}\r\n                    onClick={this.toggleOpenTable}\r\n                    size=\"large\"\r\n                    startIcon={<CloudDownload />}\r\n                  >\r\n                    Generate PDF\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </>\r\n        )}\r\n        <Loading loading={this.props.loading} />\r\n        {!this.props.loading && !this.state.createIssue && (\r\n          <Grid container direction=\"row\" style={{ marginTop: \"1em\" }}>\r\n            <Grid item xs={12}>\r\n              <OurTable\r\n                handelApproveImg={this.handelApproveImg}\r\n                approveImage={this.state.approveImage}\r\n                isApprovable={this.state.isApprovable}\r\n                title=\"Issues\"\r\n                subtitle=\"Track Your Issues Here\"\r\n                data={this.props.issuesData}\r\n                setImages={this.setImages}\r\n                handleOpen={this.handleOpen}\r\n                removeIssue={this.props.removeIssue}\r\n                askApproval={this.props.askApproval}\r\n                type={this.props.match.params.type}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n    issuesData: state.issuesReducer.data,\r\n    loading: state.issuesReducer.loading,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    saveIssue: payload => dispatch(action.createIssue(payload)),\r\n    getIssues: (subProjectId, type) =>\r\n      dispatch(action.getIssues(subProjectId, type)),\r\n    removeIssue: (id, subprojectId, type) =>\r\n      dispatch(action.removeIssue(id, subprojectId, type)),\r\n    askApproval: (id, subProjectId, type, approveImage) =>\r\n      dispatch(action.askApproval(id, subProjectId, type, approveImage)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Issues);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { PhotoCamera, Check, Delete } from \"@material-ui/icons\";\r\nimport FileBase64 from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  innerRoot: {\r\n    margin: \"10px\",\r\n    marginBottom: \"20px\",\r\n    padding: \"10px\",\r\n    // backgroundColor: \"#ccc\",\r\n  },\r\n  issueCard: {\r\n    padding: \"5px !important\",\r\n    paddingLeft: \"10px !important\",\r\n    // padding: \"10px !important\",\r\n  },\r\n}));\r\n\r\nexport default function OurTable(props) {\r\n  const classes = useStyles();\r\n  const [nonApproved, setNonApproved] = useState([]);\r\n  useEffect(() => {\r\n    // console.log(\"ss\");\r\n    setNonApproved(() => {\r\n      var temp = [];\r\n\r\n      props.data.forEach(ele => {\r\n        if (ele.status == \"Approved\") {\r\n          return;\r\n        }\r\n        temp.push({\r\n          ...ele,\r\n          pics: (\r\n            <Button\r\n              color=\"primary\"\r\n              type=\"button\"\r\n              startIcon={<PhotoCamera />}\r\n              onClick={() => {\r\n                props.setImages(ele.images);\r\n                props.handleOpen();\r\n              }}\r\n            >\r\n              View Pictures\r\n            </Button>\r\n          ),\r\n          action: (\r\n            <Grid item style={{ padding: \"20px\" }}>\r\n              <Divider />\r\n              <Button\r\n                style={{ marginRight: \"20px\", width: \"120px\" }}\r\n                color=\"primary\"\r\n                // startIcon={<Update />}\r\n              >\r\n                <FileBase64\r\n                  multiple={false}\r\n                  className=\"btn\"\r\n                  value={props.approveImage}\r\n                  onDone={file => {\r\n                    props.handelApproveImg(file.base64);\r\n                    // files.forEach(ele => ele.base64);\r\n                    // props.handlePanaroma(file.base64);\r\n                  }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<Check />}\r\n                disabled={ele.status == \"Approved\"}\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  if (props.approveImage !== \"\") {\r\n                    const subprojectId =\r\n                      global.config.secureStorage.getItem(\"subprojectId\");\r\n                    props.askApproval(\r\n                      ele.issueId,\r\n                      subprojectId,\r\n                      props.type,\r\n                      props.approveImage\r\n                    );\r\n                  } else {\r\n                    alert(\"Please add a Image For Approval\");\r\n                  }\r\n                  props.handelApproveImg(\"\");\r\n                }}\r\n              >\r\n                Approve\r\n              </Button>\r\n            </Grid>\r\n          ),\r\n        });\r\n      });\r\n      return temp;\r\n    });\r\n  }, [props.approveImage]);\r\n\r\n  const [approved, setApproved] = useState(() => {\r\n    var temp = [];\r\n\r\n    props.data.forEach(ele => {\r\n      if (ele.status == \"pending\") {\r\n        return;\r\n      }\r\n      temp.push({\r\n        ...ele,\r\n        pics: (\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            startIcon={<PhotoCamera />}\r\n            onClick={() => {\r\n              let imagesWithAproval = ele.images;\r\n              imagesWithAproval.push(ele.approveImage);\r\n              props.setImages(ele.images);\r\n              props.handleOpen();\r\n            }}\r\n          >\r\n            View Pictures\r\n          </Button>\r\n        ),\r\n        action: (\r\n          <Button\r\n            color=\"secondary\"\r\n            startIcon={<Delete />}\r\n            onClick={e => {\r\n              const subprojectId =\r\n                global.config.secureStorage.getItem(\"subprojectId\");\r\n              props.removeIssue(ele.issueId, subprojectId, props.type);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ),\r\n      });\r\n    });\r\n    return temp;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" style={{ marginLeft: \"3%\" }}>\r\n          Non-Approved Issues\r\n        </Typography>\r\n        <Divider />\r\n        <CardContent>\r\n          {nonApproved.length == 0 && (\r\n            <Grid>\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                No issues available\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Grid container>\r\n            {nonApproved\r\n              ? nonApproved.map((ele, index) => {\r\n                  return (\r\n                    <Card xs={6} key={index} className={classes.innerRoot}>\r\n                      <CardHeader\r\n                        className={classes.issueCard}\r\n                        title={`Issue Id - ${ele.issueId}`}\r\n                        titleTypographyProps={{ variant: \"body1\" }}\r\n                        subheader={`Created on: ${ele.date}`}\r\n                      />\r\n                      <CardContent className={classes.issueCard}>\r\n                        <Grid container item xs={12} className=\"mb-2\">\r\n                          <Grid item xs={12}>\r\n                            <Typography variant=\"body2\">\r\n                              <strong>Section</strong> - {ele.section}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography variant=\"body2\">\r\n                              <strong>Priority</strong> - {ele.priority}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography variant=\"body2\">\r\n                              <strong>Location</strong> - {ele.location}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography variant=\"body2\" wrap=\"true\">\r\n                              <strong>Description</strong> - {ele.description}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={2} direction=\"row\">\r\n                          <Grid item>{ele.pics}</Grid>\r\n                          {props.isApprovable && (\r\n                            <Grid container>{ele.action}</Grid>\r\n                          )}\r\n                        </Grid>\r\n                      </CardContent>\r\n                    </Card>\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </Grid>\r\n        </CardContent>\r\n        <Typography variant=\"h5\" style={{ marginLeft: \"3%\" }}>\r\n          Approved Issues\r\n        </Typography>\r\n        <Divider />\r\n        <CardContent>\r\n          {approved.length == 0 && (\r\n            <Grid>\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                No approved issues available\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid container>\r\n            {approved.map((ele, index) => {\r\n              return (\r\n                <Card key={index} className={classes.innerRoot} elevation={3}>\r\n                  <CardHeader\r\n                    className={classes.issueCard}\r\n                    title={`Issue Id - ${ele.issueId}`}\r\n                    titleTypographyProps={{ variant: \"body1\" }}\r\n                    subheader={`Created on: ${ele.date}`}\r\n                  />\r\n                  <CardContent className={classes.issueCard}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Section</strong> - {ele.section}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Priority</strong> - {ele.priority}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Location</strong> - {ele.location}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body2\" wrap=\"true\">\r\n                        <strong>Description</strong> - {ele.description}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={2} direction=\"row\">\r\n                      <Grid item>{ele.pics}</Grid>\r\n                      {props.isApprovable && <Grid item>{ele.action}</Grid>}\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Add, Cancel } from \"@material-ui/icons\";\r\nimport FileBase64 from \"react-file-base64\";\r\n\r\nconst createIssue = props => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"container mt-2\"\r\n        style={{\r\n          width: `${window.innerWidth < 1000 ? \"100%\" : \"80%\"}`,\r\n          margin: \"30px auto\",\r\n          padding: \"20px 20px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          // boxShadow:\r\n          //   \"0px 20px 30px rgba(0, 0, 0, 0.1), 0px 8px 8px rgba(0, 0, 0, 0.15),0px 4px 4px rgba(0, 0, 0, 0.5)\"\r\n        }}\r\n      >\r\n        <Typography style={{ margin: \"10px 0px 20px\" }} variant=\"h4\">\r\n          Create New Issue\r\n        </Typography>\r\n        <form onSubmit={props.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                className=\"m-1\"\r\n                name=\"Section\"\r\n                variant=\"outlined\"\r\n                required\r\n                value={props.section}\r\n                onChange={props.saveIssueSectionToState}\r\n                id=\"projectName\"\r\n                label=\"Section\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                className=\"m-1\"\r\n                name=\"location\"\r\n                variant=\"outlined\"\r\n                required\r\n                value={props.location}\r\n                onChange={props.savelocationToState}\r\n                id=\"location\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                label=\"Location\"\r\n                type=\"text\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                className=\"m-1\"\r\n                name=\"Activity\"\r\n                variant=\"outlined\"\r\n                required\r\n                id=\"Activity\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                label=\"Activity\"\r\n                type=\"text\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              {/* <TextField\r\n                fullWidth\r\n                className=\"m-1\"\r\n                name=\"priority\"\r\n                variant=\"outlined\"\r\n                required\r\n                value={props.priority}\r\n                onChange={props.savepriorityToState}\r\n                id=\"priority\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                label=\"Flat Number\"\r\n                type=\"text\"\r\n              /> */}\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Priority</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={props.priority}\r\n                  label=\"Age\"\r\n                  onChange={props.handleDropdownChange}\r\n                >\r\n                  <MenuItem value={\"Normal\"}>Normal</MenuItem>\r\n                  <MenuItem value={\"Medium\"}>Medium</MenuItem>\r\n                  <MenuItem value={\"High\"}>High</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                name=\"issueDescription\"\r\n                label=\"Description\"\r\n                multiline\r\n                placeholder=\"Issue Description\"\r\n                rows={4}\r\n                required\r\n                variant=\"outlined\"\r\n                value={props.desc}\r\n                onChange={props.saveIssueDescriptionToState}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container direction=\"row\" spacing={2}>\r\n                {props.constPics.length === 0 || props.constPics === [] ? (\r\n                  <>\r\n                    <h5>Select one or more Photos</h5>\r\n                  </>\r\n                ) : (\r\n                  props.constPics.map((ele, key) => {\r\n                    return (\r\n                      <Grid item key={key}>\r\n                        <img\r\n                          src={ele.base64}\r\n                          alt={\"Contruction\" + key.toString()}\r\n                          height=\"150px\"\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <FileBase64\r\n                    multiple={true}\r\n                    value={props.const_pics}\r\n                    onDone={files => {\r\n                      files.forEach(ele => ele.base64);\r\n                      props.savePicsToState(files);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              style={{ marginTop: \"1em\" }}\r\n              spacing={2}\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={props.handleSubmit}\r\n                  startIcon={<Add />}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  onClick={props.toggleCreateNewIssue}\r\n                  startIcon={<Cancel />}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(createIssue);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Typography, Snackbar, Slide } from \"@material-ui/core\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst TableIssues = props => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  const columns = [\r\n    {\r\n      name: \"section\",\r\n      label: \"Section\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"priority\",\r\n      label: \"Priority\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"location\",\r\n      label: \"Location\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"desc\",\r\n      label: \"Description\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"status\",\r\n      label: \"Status\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const tempData = [];\r\n    {\r\n      props.data.map(elem => {\r\n        tempData.push({\r\n          section: elem.section,\r\n          priority: elem.priority,\r\n          location: elem.location,\r\n          desc: elem.description,\r\n          status: elem.status,\r\n        });\r\n      });\r\n    }\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    axios\r\n      .get(`${global.config.backendURL}/project/getProjectInfo/${projectId}`)\r\n      .then(res => setProjectName(res.data.projectName))\r\n      .catch(e => console.log(e));\r\n    setData(tempData);\r\n    setLoading(false);\r\n  }, []);\r\n  const subprojectName = global.config.secureStorage.getItem(\"subProjectName\");\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <>\r\n          <Grid item container justify=\"center\" className=\"mt-4\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<KeyboardBackspaceIcon />}\r\n              onClick={props.toggleCloseTable}\r\n            >\r\n              Go back\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"center\">\r\n            <Grid item lg={6}>\r\n              <center style={{ marginTop: \"1.5em\" }}>\r\n                <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n                  <strong>Project: </strong>\r\n                  {projectName}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n                  <strong>Sub Project: </strong>\r\n                  {subprojectName}\r\n                </Typography>\r\n              </center>\r\n              <center>\r\n                <button\r\n                  className=\"btn-warning btn mt-3 mb-3 generatePDF\"\r\n                  onClick={() => {\r\n                    window.print();\r\n                  }}\r\n                >\r\n                  Download PDF\r\n                </button>\r\n              </center>\r\n              <div style={{ margin: \"0 20px\" }} className=\"mt-4 mb-4\">\r\n                <MUIDataTable\r\n                  title={`Issues `}\r\n                  columns={columns}\r\n                  data={data}\r\n                  options={{\r\n                    selectableRows: false,\r\n                    responsive: \"simple\",\r\n                    pagination: false,\r\n                    download: false,\r\n                    viewColumns: false,\r\n                    filter: false,\r\n                    print: false,\r\n                    search: false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(TableIssues);\r\n","import React, { Component } from \"react\";\r\nimport { Button, CardHeader, Typography, Grid } from \"@material-ui/core\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Material from \"./Material\";\r\nimport AddMaterial from \"./AddMaterial\";\r\nimport ModifyMaterial from \"./ModifyMaterial\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addMaterial,\r\n  getMaterial,\r\n  updateMaterial,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  getStore,\r\n} from \"../../Redux/materialRedux/materialAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n// import Typography from \"material-ui/styles/typography\";\r\n// import { each } from \"lodash\";\r\n\r\nclass Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\"purchase_manager\", \"project_manager\", \"super_admin\"];\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      materialName: \"\",\r\n      materialLimit: \"\",\r\n      materialQuantity: \"\",\r\n      editMaterialId: \"\",\r\n      allMaterials: [],\r\n      storeData: [],\r\n      isCreateNewMaterial: false,\r\n      isModifyMaterial: false,\r\n      isEditable: isEditable,\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getMaterial();\r\n    await this.props.getStore();\r\n    if (!this.props.loading) {\r\n      this.setState({\r\n        allMaterials: this.props.material.data,\r\n        storeData: this.props.material.storeData,\r\n      });\r\n    }\r\n  }\r\n  handleChange = (event, value = null) => {\r\n    if (value === null) {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        materialName: value,\r\n      });\r\n    }\r\n  };\r\n  handleExpectedDate = date => {\r\n    this.setState({\r\n      expectedDate: date,\r\n    });\r\n  };\r\n  handleDeliveryDate = (date, id) => {\r\n    if (date === undefined) {\r\n      alert(\"How about putting a date Dude ? \");\r\n      return;\r\n    }\r\n    const newMaterials = this.state.allMaterials.map(eachMaterial => {\r\n      if (eachMaterial.materialID === id) {\r\n        const change = {\r\n          ...eachMaterial,\r\n          deliveryDate: date,\r\n        };\r\n        this.props.addDeliveryDate(id, change);\r\n        return change;\r\n      }\r\n      return eachMaterial;\r\n    });\r\n    this.setState({\r\n      allMaterials: newMaterials,\r\n    });\r\n  };\r\n  toggleCreateNewMaterial = () => {\r\n    this.setState({\r\n      materialName: \"\",\r\n      materialQuantity: \"\",\r\n      materialLimit: \"\",\r\n      isCreateNewMaterial: !this.state.isCreateNewMaterial,\r\n    });\r\n  };\r\n  toggleModifyMaterialComponent = () => {\r\n    this.setState({\r\n      isModifyMaterial: !this.state.isModifyMaterial,\r\n    });\r\n  };\r\n  editMaterial = id => {\r\n    this.setState({\r\n      editMaterialId: id,\r\n    });\r\n    const Material = this.state.allMaterials.find(Material => {\r\n      return Material.materialID === id;\r\n    });\r\n    this.setState({\r\n      materialName: Material.materialName,\r\n      materialQuantity: Material.materialQuantity,\r\n      materialLimit: Material.materialLimit,\r\n      isModifyMaterial: !this.state.isModifyMaterial,\r\n    });\r\n  };\r\n\r\n  removeMaterial = id => {\r\n    const requiredMaterial = this.state.allMaterials.find(eachMaterial => {\r\n      return eachMaterial.materialID === id;\r\n    });\r\n    this.props.deleteMaterial(requiredMaterial._id);\r\n    const newMaterials = this.state.allMaterials.filter(\r\n      eachMaterial => eachMaterial.materialID !== id\r\n    );\r\n    this.setState({\r\n      allMaterials: newMaterials,\r\n    });\r\n  };\r\n\r\n  updateMaterial = event => {\r\n    event.preventDefault();\r\n    const newMaterials = this.state.allMaterials.map(eachMaterial => {\r\n      if (eachMaterial.materialID === this.state.editMaterialId) {\r\n        const change = {\r\n          ...eachMaterial,\r\n          materialName: this.state.materialName || eachMaterial.materialName,\r\n          materialQuantity:\r\n            this.state.materialQuantity || eachMaterial.materialQuantity,\r\n          materialLimit: this.state.materialLimit || eachMaterial.materialLimit,\r\n        };\r\n        this.props.updateMaterial(eachMaterial.materialID, change);\r\n        return change;\r\n      }\r\n      return eachMaterial;\r\n    });\r\n    this.setState({\r\n      allMaterials: newMaterials,\r\n      isModifyMaterial: !this.state.isModifyMaterial,\r\n    });\r\n  };\r\n  handleRemark = async (remark, id) => {\r\n    //\r\n    const newMaterials = this.state.allMaterials.map(eachMaterial => {\r\n      if (eachMaterial.materialID === id) {\r\n        const change = {\r\n          ...eachMaterial,\r\n          remark: remark,\r\n        };\r\n        this.props.updateMaterial(eachMaterial.materialID, change);\r\n        return change;\r\n      }\r\n      return eachMaterial;\r\n    });\r\n    //\r\n    this.setState({\r\n      allMaterials: newMaterials,\r\n    });\r\n  };\r\n  saveMaterial = event => {\r\n    event.preventDefault();\r\n    const id = Date.now();\r\n    if (\r\n      this.state.expectedDate === undefined ||\r\n      this.state.materialQuantity === undefined ||\r\n      this.state.materialName === undefined\r\n    ) {\r\n      alert(\"Please fill all fields\");\r\n      return;\r\n    }\r\n    const finalMaterial = {\r\n      materialName: this.state.materialName,\r\n      materialQuantity: this.state.materialQuantity,\r\n      // materialLimit: this.state.materialLimit,\r\n      expectedDate: this.state.expectedDate,\r\n      materialID: id,\r\n    };\r\n\r\n    let newMaterials = [...this.state.allMaterials, finalMaterial];\r\n\r\n    this.setState({\r\n      materialName: \"\",\r\n      materialQuantity: \"\",\r\n      materialLimit: \"\",\r\n      allMaterials: newMaterials,\r\n      isCreateNewMaterial: !this.state.isCreateNewMaterial,\r\n    });\r\n    this.props.addMaterial(finalMaterial);\r\n  };\r\n  render() {\r\n    const { isCreateNewMaterial, isModifyMaterial } = this.state;\r\n    if (isCreateNewMaterial) {\r\n      return (\r\n        <AddMaterial\r\n          storeData={this.props.storeData}\r\n          handleChange={this.handleChange}\r\n          materialName={this.state.materialName}\r\n          materialQuantity={this.state.materialQuantity}\r\n          handleExpectedDate={this.handleExpectedDate}\r\n          expectedDate={this.state.expectedDate}\r\n          materialLimit={this.state.materialLimit}\r\n          saveMaterial={this.saveMaterial}\r\n          toggleCreateNewMaterial={this.toggleCreateNewMaterial}\r\n        />\r\n      );\r\n    } else if (isModifyMaterial) {\r\n      return (\r\n        <ModifyMaterial\r\n          materialName={this.state.materialName}\r\n          materialQuantity={this.state.materialQuantity}\r\n          materialLimit={this.state.materialLimit}\r\n          updateMaterial={this.updateMaterial}\r\n          handleChange={this.handleChange}\r\n          toggleModifyMaterialComponent={this.toggleModifyMaterialComponent}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isEditable && (\r\n          <section className={Style.button__display}>\r\n            <Button\r\n              onClick={this.toggleCreateNewMaterial}\r\n              startIcon={<Add />}\r\n              size=\"large\"\r\n            >\r\n              Add Material\r\n            </Button>\r\n          </section>\r\n        )}\r\n        {this.props.loading ? (\r\n          <Loading loading={this.props.loading} />\r\n        ) : !this.props.loading && !this.props.data.length ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100vw\",\r\n              height: \"80vh\",\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textSecondary\"\r\n              style={{ marginLeft: \"0.5em\", textAlign: \"center\" }}\r\n            >\r\n              No Materials Found!\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <CardHeader\r\n                title=\"Pending Orders\"\r\n                subheader=\"Material in repository\"\r\n              />\r\n\r\n              <section className={Style.all__material}>\r\n                {this.props.data.filter(item => item.deliveryDate === undefined)\r\n                  .length === 0 && (\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textSecondary\"\r\n                    style={{ marginLeft: \"0.5em\" }}\r\n                  >\r\n                    No Pending Orders available\r\n                  </Typography>\r\n                )}\r\n                {this.props.data.map((eachMaterial, index) => {\r\n                  return eachMaterial.deliveryDate === undefined ? (\r\n                    <div key={index}>\r\n                      <Material\r\n                        isEditable={this.state.isEditable}\r\n                        id={eachMaterial.materialID}\r\n                        materialName={eachMaterial.materialName}\r\n                        materialQuantity={eachMaterial.materialQuantity}\r\n                        // materialLimit={eachMaterial.materialLimit}\r\n                        showActions={true}\r\n                        expectedDate={eachMaterial.expectedDate}\r\n                        editMaterial={this.editMaterial}\r\n                        addDeliveryDate={this.handleDeliveryDate}\r\n                        deleteMaterial={this.removeMaterial}\r\n                        materialRemark={eachMaterial.remark}\r\n                        addRemark={this.handleRemark}\r\n                        isRemark={true}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div key={index}></div>\r\n                  );\r\n                })}\r\n              </section>\r\n            </div>\r\n            {/* Important : Change this to purchase manager role when that role is  added and replace the not statement here with === to prevent unauthorised access to this section*/}\r\n\r\n            <div>\r\n              <CardHeader\r\n                title=\"Delivered Orders\"\r\n                subheader=\"Material in repository\"\r\n              />\r\n              <section className={Style.all__material}>\r\n                {this.props.data.filter(item => item.deliveryDate !== undefined)\r\n                  .length === 0 && (\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textSecondary\"\r\n                    style={{ marginLeft: \"0.5em\" }}\r\n                  >\r\n                    No delivered Orders available\r\n                  </Typography>\r\n                )}\r\n                {this.props.data.map((eachMaterial, index) => {\r\n                  return eachMaterial.deliveryDate !== undefined ? (\r\n                    <div key={index}>\r\n                      <Material\r\n                        isEditable={this.state.isEditable}\r\n                        id={eachMaterial.materialID}\r\n                        deliveredDate={eachMaterial.deliveryDate}\r\n                        materialName={eachMaterial.materialName}\r\n                        materialQuantity={eachMaterial.materialQuantity}\r\n                        expectedDate={eachMaterial.expectedDate}\r\n                        editMaterial={this.editMaterial}\r\n                        addDeliveryDate={this.handleDeliveryDate}\r\n                        deleteMaterial={this.removeMaterial}\r\n                        materialRemark={eachMaterial.remark}\r\n                        addRemark={this.handleRemark}\r\n                        isRemark={false}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div key={index}></div>\r\n                  );\r\n                })}\r\n              </section>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  material: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    material: state.materialReducer,\r\n    notifications: state.notifications,\r\n    success: state.materialReducer.success,\r\n    loading: state.materialReducer.loading,\r\n    data: state.materialReducer.data,\r\n    storeData: state.materialReducer.storeData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addMaterial,\r\n  getMaterial,\r\n  updateMaterial,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  getStore,\r\n})(Display);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\n\r\nconst AddMaterial = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [materials, setMaterials] = useState([]);\r\n  const [toggleText, setToggleText] = useState(false);\r\n  const loading = open && materials.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setMaterials(Array.from(tempMaterials));\r\n    })();\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setMaterials([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.saveMaterial}>\r\n          <h1 className={Style.add__material__header}>Create New Material</h1>\r\n          {toggleText ? (\r\n            <>\r\n              <Grid container>\r\n                <Grid item md={8} xs={12}>\r\n                  <TextField\r\n                    name=\"materialName\"\r\n                    value={props.materialName}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={props.handleChange}\r\n                    id=\"materialName\"\r\n                    label=\"Material Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  className=\"m-2 align-content-xs-center justify-xs-center\"\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={() => setToggleText(false)}\r\n                    startIcon={<AddIcon />}\r\n                  >\r\n                    Select Existing\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  // fullWidth\r\n                  onOpen={() => {\r\n                    setOpen(true);\r\n                  }}\r\n                  onClose={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                  id=\"autoComplete\"\r\n                  name=\"materialName\"\r\n                  onChange={(event, value) => props.handleChange(event, value)}\r\n                  options={materials}\r\n                  getOptionLabel={ele => ele}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      fullWidth\r\n                      label={\"Select Material\"}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              {/* <Grid\r\n                item\r\n                className=\"m-2 align-content-xs-center justify-xs-center\"\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  onClick={() => setToggleText(true)}\r\n                  startIcon={<AddIcon />}\r\n                >\r\n                  Add New Material\r\n                </Button>\r\n              </Grid> */}\r\n            </Grid>\r\n          )}\r\n          <br />\r\n          {/* change this later */}\r\n          <TextField\r\n            name=\"materialQuantity\"\r\n            id=\"materialQuantity\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Quantity\"\r\n            value={props.materialQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <InputLabel>Expected Delivery By</InputLabel>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              disableToolbar\r\n              variant=\"dialog\"\r\n              format=\"dd/MM/yyyy\"\r\n              margin=\"normal\"\r\n              value={\r\n                props.expectedDate === undefined ? null : props.expectedDate\r\n              }\r\n              onChange={props.handleExpectedDate}\r\n              name=\"expectedDate\"\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <br />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewMaterial}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddMaterial;\r\n","import React from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Update, Cancel } from \"@material-ui/icons\";\r\n\r\nconst ModifyMaterial = props => {\r\n  // \r\n  return (\r\n    <>\r\n      <section className={Style.modify__material}>\r\n        <form>\r\n          <h1 className={Style.add__material__header}>Edit Material Details</h1>\r\n          <TextField\r\n            name=\"materialName\"\r\n            value={props.materialName}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            onChange={props.handleChange}\r\n            id=\"materialName\"\r\n            label=\"Material Name\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialQuantity\"\r\n            value={props.materialQuantity}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            onChange={props.handleChange}\r\n            id=\"materialQuantity\"\r\n            label=\"Quantity\"\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                startIcon={<Update />}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                onClick={props.updateMaterial}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                startIcon={<Cancel />}\r\n                size=\"large\"\r\n                onClick={props.toggleModifyMaterialComponent}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default ModifyMaterial;\r\n","import React, { Component } from \"react\";\r\nimport { Button, CardHeader, Typography } from \"@material-ui/core\";\r\nimport ToDo from \"./ToDo\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport AddToDo from \"./AddToDo\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodo,\r\n  getTodo,\r\n  deleteTodo,\r\n  updateTodo\r\n} from \"../../Redux/todoRedux/todoAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DisplayToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\"project_manager\", \"super_admin\"];\r\n    var isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      taskTitle: \"\",\r\n      taskDetail: \"\",\r\n      userName: \"\",\r\n      deadline: new Date(),\r\n      todoId: \"\",\r\n      allTodos: [],\r\n      isCreateNewTodo: false,\r\n      isEditable: isEditable\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.getTodo();\r\n    // console.clear();\r\n    if (!this.props.loading) {\r\n      this.setState({\r\n        allTodos: this.props.todo.data\r\n      });\r\n      //\r\n    }\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleChangeUser = (event, value) => {\r\n    this.setState({\r\n      userName: value.firstName + \" \" + value.lastName\r\n    });\r\n    this.setState({\r\n      userId: value._id\r\n    });\r\n  };\r\n  handleChangeDate = event => {\r\n    this.setState({\r\n      deadline: event\r\n    });\r\n  };\r\n  toggleCreateNewTodo = () => {\r\n    this.setState({\r\n      taskTitle: \"\",\r\n      taskDetail: \"\",\r\n      userName: \"\",\r\n      deadline: new Date(),\r\n      isCreateNewTodo: !this.state.isCreateNewTodo\r\n    });\r\n  };\r\n\r\n  deleteTodo = id => {\r\n    const requiredTodo = this.props.todo.data.find(eachTodo => {\r\n      return eachTodo.todoId === id;\r\n    });\r\n    //\r\n    this.props.deleteTodo(requiredTodo._id);\r\n  };\r\n\r\n  saveTodo = event => {\r\n    event.preventDefault();\r\n    const id = Date.now();\r\n    let now = this.state.deadline;\r\n    const date =\r\n      now.getDate() +\r\n      \"/\" +\r\n      (parseInt(now.getMonth()) + 1).toString() +\r\n      \"/\" +\r\n      now.getFullYear();\r\n\r\n    const finalTodo = {\r\n      taskTitle: this.state.taskTitle,\r\n      taskDetail: this.state.taskDetail,\r\n      userName: this.state.userName,\r\n      deadline: date,\r\n      todoId: id,\r\n      userId: this.state.userId\r\n    };\r\n\r\n    // let newTodos = [...this.state.allTodos, finalTodo];\r\n\r\n    this.setState({\r\n      taskTitle: \"\",\r\n      taskDetail: \"\",\r\n      userName: \"\",\r\n      isCreateNewTodo: !this.state.isCreateNewTodo\r\n    });\r\n    this.props.addTodo(finalTodo);\r\n  };\r\n  handleRemark = async (remark, id) => {\r\n    var todo = this.props.todo.data.find(item => item.todoId === id);\r\n    const change = {\r\n      ...todo,\r\n      remark: remark\r\n    };\r\n    this.props.updateTodo(todo._id, change);\r\n  };\r\n\r\n  render() {\r\n    const { isCreateNewTodo } = this.state;\r\n    if (isCreateNewTodo) {\r\n      return (\r\n        <AddToDo\r\n          handleChange={this.handleChange}\r\n          handleChangeUser={this.handleChangeUser}\r\n          handleChangeDate={this.handleChangeDate}\r\n          taskTitle={this.state.taskTitle}\r\n          taskDetail={this.state.taskDetail}\r\n          userName={this.state.userName}\r\n          deadline={this.state.deadline}\r\n          saveTodo={this.saveTodo}\r\n          toggleCreateNewTodo={this.toggleCreateNewTodo}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isEditable && (\r\n          <section className={Style.button__display}>\r\n            <Button\r\n              onClick={this.toggleCreateNewTodo}\r\n              startIcon={<Add />}\r\n              size=\"large\"\r\n            >\r\n              Add Todo\r\n            </Button>\r\n          </section>\r\n        )}\r\n        {this.props.loading ? (\r\n          <Loading loading={this.props.loading} />\r\n        ) : !this.props.loading && !this.props.todo.data.length ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100vw\",\r\n              height: \"80vh\"\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textSecondary\"\r\n              style={{ marginLeft: \"0.5em\", textAlign: \"center\" }}\r\n            >\r\n              No Todo Found!\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <section className={Style.all__todo}>\r\n              {this.props.todo.data.map((eachTodo, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <ToDo\r\n                      isEditable={this.state.isEditable}\r\n                      id={eachTodo.todoId}\r\n                      taskTitle={eachTodo.taskTitle}\r\n                      taskDetail={eachTodo.taskDetail}\r\n                      userName={eachTodo.userName}\r\n                      deadline={eachTodo.deadline}\r\n                      deleteTodo={this.deleteTodo}\r\n                      todoRemark={eachTodo.remark}\r\n                      addRemark={this.handleRemark}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </section>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDisplayToDo.propTypes = {\r\n  todo: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todo: state.todoReducer,\r\n    notifications: state.notifications,\r\n    success: state.todoReducer.success,\r\n    loading: state.todoReducer.loading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addTodo,\r\n  getTodo,\r\n  deleteTodo,\r\n  updateTodo\r\n})(DisplayToDo);\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, Button } from \"@material-ui/core\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  TextField,\r\n  Grid\r\n\r\n  // CardActions\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  AddComment as AddCommentIcon,\r\n  Delete as DeleteIcon\r\n} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n\r\n    // backgroundColor: \"#ccc\",\r\n  },\r\n  todoCard: {\r\n    padding: \"10px !important\"\r\n  }\r\n}));\r\n\r\nexport default function ToDo({\r\n  taskTitle,\r\n  taskDetail,\r\n  userName,\r\n  deadline,\r\n  id,\r\n  deleteTodo,\r\n  isEditable,\r\n  todoRemark,\r\n  addRemark\r\n}) {\r\n  const classes = useStyles();\r\n  var [toggleRemark, setToggleRemark] = useState(false);\r\n  var [remark, setRemark] = useState(\"\");\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={3}>\r\n      <CardHeader\r\n        className={classes.todoCard}\r\n        title={`Task - ${taskTitle}`}\r\n        style={{ padding: \"0px\" }}\r\n        // subheader={`Created At ${date}`}\r\n      />\r\n      <CardContent className={classes.todoCard} style={{ padding: \"10px\" }}>\r\n        <Typography variant=\"body1\">\r\n          <strong> Description -</strong> {taskDetail}\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          <strong>Assigned To -</strong> {userName}\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          <strong>Deadline -</strong> {deadline}\r\n        </Typography>\r\n        {todoRemark !== undefined ? (\r\n          <Typography>\r\n            <strong>Remark :</strong> {todoRemark}\r\n          </Typography>\r\n        ) : null}\r\n      </CardContent>\r\n      {isEditable && (\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          style={{ marginLeft: \"0.5em\" }}\r\n          onClick={() => deleteTodo(id)}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n      )}\r\n      {!toggleRemark ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginLeft: \"0.5em\" }}\r\n          onClick={() => setToggleRemark(true)}\r\n          startIcon={<AddCommentIcon />}\r\n        >\r\n          Remark\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <CardActions style={{ marginLeft: \"5px\" }}>\r\n            <Grid container>\r\n              <Grid className=\"mt-4\" item>\r\n                <TextField\r\n                  name=\"remark\"\r\n                  value={remark}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={e => setRemark(e.target.value)}\r\n                  id=\"remark\"\r\n                  label=\"Remarks\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid className=\"ml-2 mt-4\" item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setToggleRemark(false);\r\n                    addRemark(remark, id);\r\n                  }}\r\n                  startIcon={<AddIcon />}\r\n                >\r\n                  Done\r\n                </Button>\r\n              </Grid>\r\n              <Grid className=\"ml-2 mt-4\" item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setToggleRemark(false)}\r\n                  startIcon={<CloseIcon />}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\";\r\nimport { Save, Cancel } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"axios\";\r\nimport Style from \"./style.module.scss\";\r\n\r\nconst AddToDo = props => {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const loading = open && users.length === 0;\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n        const response = await axios.get(\r\n          `${global.config.backendURL}/project/getUsers/${projectId}`\r\n        );\r\n        //\r\n        if (active) {\r\n          setUsers(response.data);\r\n        }\r\n      } catch (err) {}\r\n\r\n      //\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setUsers([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__todo}>\r\n        <form onSubmit={props.saveTodo}>\r\n          <h1 className={Style.add__todo__header}>Add New Tasks</h1>\r\n          <TextField\r\n            className=\"m-1\"\r\n            name=\"taskTitle\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={props.taskTitle}\r\n            onChange={props.handleChange}\r\n            id=\"taskTitle\"\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"taskDetail\"\r\n            id=\"taskDetails\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={4}\r\n            onChange={props.handleChange}\r\n            label=\"Task Details\"\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Autocomplete\r\n            fullWidth\r\n            onOpen={() => {\r\n              setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            id=\"userName\"\r\n            options={users}\r\n            getOptionLabel={option => option.firstName + \" \" + option.lastName}\r\n            onChange={(event, value) => {\r\n              props.handleChangeUser(event, value);\r\n            }}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label={\"Select User \"}\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              display=\"block\"\r\n              name=\"deadline\"\r\n              id=\"deadline\"\r\n              inputVariant=\"outlined\"\r\n              // format=\"dd/MM/yyyy\"\r\n              margin=\"normal\"\r\n              // required\r\n              label=\"Deadline\"\r\n              minDate={new Date()}\r\n              onChange={props.handleChangeDate}\r\n              value={props.deadline}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\"\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <br />\r\n          <br />\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={props.toggleCreateNewTodo}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddToDo;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport AddActivity from \"./AddActivity\";\r\nimport NonEditMainList from \"./NonEditMainList\";\r\nimport EditMainList from \"./EditMainList\";\r\nimport {\r\n  ChangeHistory as Change,\r\n  Add as AddIcon,\r\n  CloudDownload,\r\n  Edit,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  getDefaultActivities,\r\n  updateDefaultActivities,\r\n  updateActivityName,\r\n} from \"../../Redux/activityRedux/activityAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport AddRoadActivity from \"./AddRoadActivity\";\r\nimport TableActivities from \"./TableActivities\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nconst iterList = require(\"./defaultActivities/defaultArray\");\r\nclass Activities extends Component {\r\n  constructor(props) {\r\n    // console.log(iterList);\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const roles = [\"project_manager\", \"chief_engineer\", \"super_admin\"];\r\n    const isAddVisible = roles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      modalOpen: false,\r\n      roadModalOpen: false,\r\n      activityName: \"\",\r\n      subActivityName: \"\",\r\n      roadActivityName: \"\",\r\n      isEditRoadActivity: false,\r\n      subProject: {},\r\n      changeAct: false,\r\n      loading: true,\r\n      isFetched: false,\r\n      defaultActivity: [],\r\n      activeActivityIndex: 0,\r\n      expanded: \"panel1\",\r\n      percentage: [],\r\n      alertSubActivity: false,\r\n      alertSubActivityField: \"\",\r\n      isAddVisible: isAddVisible,\r\n      tableData: [],\r\n      isOpenTable: false,\r\n      projectType: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (panel, index) => (event, newExpanded) => {\r\n    // this.setState({ activeActivityIndex: index });\r\n    this.setState({\r\n      expanded: newExpanded ? panel : false,\r\n    });\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.getDefaultActivities();\r\n      // console.log(this.props.percentage);\r\n      this.setState({\r\n        projectType: global.config.secureStorage.getItem(\"projectType\"),\r\n        defaultActivity: this.props.defaultActivity.data,\r\n        percentage: this.props.percentage.per,\r\n        percentageActivity: this.props.percentage.accName,\r\n        // defaultActivity: this.props.defaultActivity.data[0].data,\r\n        loading: !this.state.loading,\r\n      });\r\n      this.fetchData();\r\n    } catch (error) {\r\n      //\r\n    }\r\n  }\r\n\r\n  submitActivityList = () => {\r\n    this.props.updateDefaultActivities(\r\n      this.props.defaultActivity._id,\r\n      this.state.defaultActivity\r\n    );\r\n    this.props.getDefaultActivities();\r\n    this.changeAct();\r\n  };\r\n\r\n  fetchData = () => {\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    // console.log(projectId);\r\n    const id = global.config.secureStorage.getItem(\"subprojectId\");\r\n    let tempactivities = [];\r\n    let tempfloorwisedata = [];\r\n    axios\r\n      .get(\r\n        `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n      )\r\n      .then(async res => {\r\n        tempactivities = res.data.data;\r\n        // axios\r\n        //   .get(\r\n        //     `${global.config.backendURL}/activities/getFloorsPercentage/${projectId}/${id}`\r\n        //   )\r\n        //   .then(async res => {\r\n        let tempA = [];\r\n        let tempF = [];\r\n        let temparr = [];\r\n        // tempfloorwisedata = res.data;\r\n        let flatData;\r\n        try {\r\n          flatData = await axios.post(\r\n            `${global.config.backendURL}/activities/getAllActivity`,\r\n            { subprojectId: id }\r\n          );\r\n        } catch (er) {\r\n          console.log(er);\r\n        }\r\n        tempactivities.map(activity => {\r\n          activity.content.map(sub => {\r\n            let flats = {};\r\n            if (sub.link in flatData.data) {\r\n              for (let [key, value] of Object.entries(\r\n                flatData.data[sub.link]\r\n              )) {\r\n                flats[key] = value.map(\r\n                  (ele, id) => ele === \"complete\" && id + 1\r\n                );\r\n              }\r\n            } else if (activity.activity in flatData.data) {\r\n              for (let [key, value] of Object.entries(\r\n                flatData.data[activity.activity]\r\n              )) {\r\n                flats[key] = value.map(\r\n                  (ele, id) => ele === \"complete\" && id + 1\r\n                );\r\n              }\r\n            }\r\n            if (sub.subTitle != \"Update Here\") {\r\n              tempA.push({\r\n                activity: activity.title,\r\n                subactivity: sub.subTitle,\r\n                flats,\r\n              });\r\n            } else {\r\n              tempA.push({\r\n                activity: activity.title,\r\n                subactivity: activity.title,\r\n                flats,\r\n              });\r\n            }\r\n          });\r\n        });\r\n        // tempA.map((ele, index) => {\r\n        //   temparr = [];\r\n        //   tempfloorwisedata.map((floor, i) => {\r\n        //     if (floor[index].percentage !== 0) {\r\n        //       temparr.push({\r\n        //         status: floor[index].percentage,\r\n        //         flats: ele.flats[i],\r\n        //       });\r\n        //     } else {\r\n        //       temparr.push({\r\n        //         status: floor[index].percentage,\r\n        //         flats: [],\r\n        //       });\r\n        //     }\r\n        //   });\r\n        //   tempF.push({\r\n        //     activity: ele.activity,\r\n        //     subactivity: ele.subactivity,\r\n        //     floors: temparr,\r\n        //   });\r\n        // });\r\n        tempA = [];\r\n        tempactivities.map(ele => {\r\n          temparr = [];\r\n          tempF.map(item => {\r\n            if (ele.title == item.activity) {\r\n              temparr.push({\r\n                title: item.subactivity,\r\n                floors: item.floors,\r\n              });\r\n            }\r\n          });\r\n          tempA.push({ activity: ele.title, subactivities: temparr });\r\n        });\r\n        this.setState({ tableData: tempA });\r\n      })\r\n      //     .catch(e => console.log(e));\r\n      // })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  handleModalOpen = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n    });\r\n  };\r\n  handleModalRoadOpen = () => {\r\n    this.setState({\r\n      roadModalOpen: !this.state.roadModalOpen,\r\n    });\r\n  };\r\n\r\n  handleAutoComplete = (event, value) => {\r\n    this.setState({\r\n      activityName: value,\r\n    });\r\n  };\r\n\r\n  handleActivityChange = event => {\r\n    if (this.state.alertSubActivity) {\r\n      this.setState({\r\n        alertSubActivity: !this.state.alertSubActivity,\r\n        alertSubActivityField: \"\",\r\n      });\r\n    }\r\n    // this.getAllSubAc();\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getAllSubAc = () => {\r\n    let deff = [...this.state.defaultActivity];\r\n    // deff = deff[this.state.activeActivityIndex].data;\r\n    let allSub = [];\r\n    deff.forEach(acc => {\r\n      acc.content.forEach(subacc => {\r\n        allSub.push(subacc.link);\r\n      });\r\n    });\r\n    return allSub;\r\n  };\r\n\r\n  makeValidLink = activity => {\r\n    const regex = /[.,\\\\/#!$%\\\\^&\\\\*;:{}=\\-_`~()]/g;\r\n    return activity.toLowerCase().replace(regex, \" \").split(\" \").join(\"\");\r\n  };\r\n\r\n  submitActivity = () => {\r\n    const { activityName, subActivityName } = this.state;\r\n    if (activityName == \"\") {\r\n      this.setState({\r\n        activityName: \"\",\r\n        subActivityName: \"\",\r\n      });\r\n      // //\r\n      this.handleModalOpen();\r\n      return;\r\n    }\r\n\r\n    let allsub = this.getAllSubAc();\r\n\r\n    let matchFound = false;\r\n    allsub.forEach(element => {\r\n      let newlink = this.makeValidLink(subActivityName);\r\n\r\n      if (element == newlink) {\r\n        this.setState({\r\n          alertSubActivity: !this.state.alertSubActivity,\r\n          alertSubActivityField: element + \" Sub Activity Already Exists\",\r\n        });\r\n        matchFound = true;\r\n      }\r\n    });\r\n    if (!matchFound) {\r\n      let newActivity = [...this.state.defaultActivity];\r\n      let link = this.makeValidLink(subActivityName);\r\n      if (typeof activityName === \"string\") {\r\n        let flag = false;\r\n        let newSubActivity = [];\r\n        for (let i = 0; i < this.state.defaultActivity.length; i++)\r\n          if (this.state.defaultActivity[i].title === activityName) {\r\n            if (subActivityName === \"\") {\r\n              this.setState({\r\n                alertSubActivity: !this.state.alertSubActivity,\r\n                alertSubActivityField: \"Please Fill sub activity name\",\r\n              });\r\n              return;\r\n            }\r\n            newSubActivity = [...this.state.defaultActivity[i].content];\r\n            newSubActivity.push({\r\n              visibility: true,\r\n              subTitle: subActivityName,\r\n              link,\r\n            });\r\n            newActivity[i].content = newSubActivity;\r\n            flag = true;\r\n            break;\r\n          }\r\n        if (!flag) {\r\n          let mainLink = this.makeValidLink(activityName);\r\n          newSubActivity.push({\r\n            visibility: true,\r\n            subTitle: subActivityName !== \"\" ? subActivityName : \"Update Here\",\r\n            link: subActivityName !== \"\" ? link : \"null\",\r\n          });\r\n          newActivity.push({\r\n            visibility: true,\r\n            title: activityName,\r\n            content: newSubActivity,\r\n            activity: mainLink,\r\n          });\r\n        }\r\n      } else {\r\n        let newSubActivity = [];\r\n        if (subActivityName === \"\") {\r\n          this.setState({\r\n            alertSubActivity: !this.state.alertSubActivity,\r\n            alertSubActivityField: \"Please Fill sub activity name\",\r\n          });\r\n          return;\r\n        }\r\n        for (let i = 0; i < this.state.defaultActivity.length; i++)\r\n          if (this.state.defaultActivity[i].title === activityName.title) {\r\n            if (\r\n              activityName.content.length === 1 &&\r\n              activityName.content[0].link === \"null\"\r\n            ) {\r\n              newSubActivity.push({\r\n                visibility: true,\r\n                subTitle: subActivityName,\r\n                link,\r\n              });\r\n            } else {\r\n              newSubActivity = [...this.state.defaultActivity[i].content];\r\n              newSubActivity.push({\r\n                visibility: true,\r\n                subTitle: subActivityName,\r\n                link,\r\n              });\r\n            }\r\n            activityName.content = newSubActivity;\r\n            newActivity[i] = activityName;\r\n            break;\r\n          }\r\n      }\r\n      this.setState({\r\n        defaultActivity: newActivity,\r\n      });\r\n      this.props.updateDefaultActivities(\r\n        this.props.defaultActivity._id,\r\n        newActivity\r\n      );\r\n      this.setState({\r\n        activityName: \"\",\r\n        subActivityName: \"\",\r\n      });\r\n      // //\r\n      this.handleModalOpen();\r\n    }\r\n  };\r\n\r\n  handleRoadEdit = name => {\r\n    this.setState({\r\n      roadActivityName: name,\r\n      isEditRoadActivity: true,\r\n    });\r\n\r\n    this.handleModalRoadOpen();\r\n  };\r\n  EditRoadActivity = () => {\r\n    let newRoad = this.state.defaultActivity;\r\n    newRoad[this.state.activeActivityIndex] = {\r\n      name: this.state.roadActivityName,\r\n      data: iterList,\r\n    };\r\n    let newActivity = newRoad;\r\n\r\n    this.props.updateDefaultActivities(\r\n      this.props.defaultActivity._id,\r\n      newActivity\r\n    );\r\n    this.setState({\r\n      roadActivityName: \"\",\r\n      isEditRoadActivity: false,\r\n    });\r\n    this.handleModalRoadOpen();\r\n  };\r\n  submitRoadActivity = () => {\r\n    let newRoad = this.state.defaultActivity;\r\n    newRoad[newRoad.length] = {\r\n      name: this.state.roadActivityName,\r\n      data: iterList,\r\n    };\r\n    let newActivity = newRoad;\r\n    // console.log(newRoad);\r\n    this.props.updateDefaultActivities(\r\n      this.props.defaultActivity._id,\r\n      newActivity\r\n    );\r\n    this.setState({\r\n      roadActivityName: \"\",\r\n    });\r\n    this.handleModalRoadOpen();\r\n  };\r\n\r\n  changeAct = () => {\r\n    this.setState({ changeAct: !this.state.changeAct });\r\n  };\r\n\r\n  updateSubActivityNameUI = (activityIndex, subActivityIndex, value) => {\r\n    var tempArray = [\r\n      ...this.state.defaultActivity[this.state.activeActivityIndex].data,\r\n    ];\r\n    if (subActivityIndex == -1) {\r\n      tempArray[activityIndex][\"title\"] = value;\r\n    } else {\r\n      tempArray[activityIndex][\"content\"][subActivityIndex].subTitle = value;\r\n    }\r\n    let newAcc = [...this.state.defaultActivity];\r\n    newAcc[this.state.activeActivityIndex].data = tempArray;\r\n    this.setState({\r\n      defaultActivity: newAcc,\r\n    });\r\n    // this.changeAct();\r\n  };\r\n\r\n  updateMainList = (event, index) => {\r\n    let tempArray = [...this.state.defaultActivity];\r\n    let prev = tempArray[index].visibility;\r\n    tempArray[index].visibility = !prev;\r\n    let newAcc = [...this.state.defaultActivity];\r\n    newAcc = tempArray;\r\n    this.setState({\r\n      defaultActivity: newAcc,\r\n    });\r\n  };\r\n\r\n  updateSubList = (event, index, subIndex) => {\r\n    var tempArray = [...this.state.defaultActivity];\r\n    let prev = tempArray[index].content[subIndex].visibility;\r\n    tempArray[index].content[subIndex].visibility = !prev;\r\n    let newAcc = [...this.state.defaultActivity];\r\n    newAcc = tempArray;\r\n    this.setState({\r\n      defaultActivity: newAcc,\r\n    });\r\n  };\r\n\r\n  toggleCloseTable = () => {\r\n    this.setState({ isOpenTable: !this.state.isOpenTable });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.loading) {\r\n      return <Loading loading={this.props.loading} />;\r\n    }\r\n    const { isOpenTable } = this.state;\r\n\r\n    if (isOpenTable) {\r\n      return (\r\n        <TableActivities\r\n          tableData={this.state.tableData}\r\n          toggleCloseTable={this.toggleCloseTable}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <AddActivity\r\n            alertSubActivity={this.state.alertSubActivity}\r\n            alertSubActivityField={this.state.alertSubActivityField}\r\n            data={this.state.defaultActivity}\r\n            activityName={this.state.activityName}\r\n            handleAutoComplete={this.handleAutoComplete}\r\n            open={this.state.modalOpen}\r\n            handleModalOpen={this.handleModalOpen}\r\n            submitActivity={this.submitActivity}\r\n            handleActivityChange={this.handleActivityChange}\r\n          />\r\n        </div>\r\n        {this.state.isAddVisible && (\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            style={{ marginTop: \"2em\" }}\r\n            justify=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                className=\"m-2\"\r\n                color=\"primary\"\r\n                onClick={this.handleModalOpen}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add Activity\r\n              </Button>\r\n            </Grid>\r\n\r\n            {!this.state.changeAct && (\r\n              <Grid item>\r\n                <Button\r\n                  className=\"m-2\"\r\n                  onClick={this.changeAct}\r\n                  startIcon={<Change />}\r\n                >\r\n                  Modify Activities\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            <Grid item>\r\n              <Button\r\n                className=\"m-2\"\r\n                style={{ backgroundColor: \"#4a934a\" }}\r\n                onClick={this.toggleCloseTable}\r\n                startIcon={<CloudDownload />}\r\n              >\r\n                Generate PDF\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        <div className=\"container mt-2\">\r\n          {this.state.loading ? (\r\n            <Loading loading={this.state.loading} />\r\n          ) : !this.state.changeAct ? (\r\n            <NonEditMainList\r\n              defaultActivity={this.state.defaultActivity}\r\n              percentage={this.state.percentage}\r\n              percentageActivity={this.state.percentageActivity}\r\n            />\r\n          ) : (\r\n            <EditMainList\r\n              updateActivityName={this.props.updateActivityName}\r\n              defaultActivity={this.state.defaultActivity}\r\n              changeAct={this.changeAct}\r\n              updateMainList={this.updateMainList}\r\n              updateSubList={this.updateSubList}\r\n              submitActivityList={this.submitActivityList}\r\n              updateSubActivityNameUI={this.updateSubActivityNameUI}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.activityReducer);\r\n  return {\r\n    isUpdateSuccess: state.isUpdateSuccess,\r\n    defaultActivity: state.activityReducer.defaultActivity,\r\n    percentage: state.activityReducer.percentage,\r\n    loading: state.activityReducer.loading,\r\n    monitoring: state.monitoringReducer.monitoring,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDefaultActivities,\r\n  updateDefaultActivities,\r\n  updateActivityName,\r\n})(Activities);\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete, {\r\n  createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\n\r\nexport default function AddActivity(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const filter = createFilterOptions();\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        fullScreen={fullScreen}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Activity</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Provide a new Activity and new Sub Activity (if necessary)\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            value={props.activityName}\r\n            onChange={(event, newValue) => {\r\n              if (typeof newValue === \"string\") {\r\n                props.handleAutoComplete(event, newValue);\r\n              } else if (newValue && newValue.inputValue) {\r\n                props.handleAutoComplete(event, newValue.inputValue);\r\n              } else {\r\n                props.handleAutoComplete(event, newValue);\r\n              }\r\n            }}\r\n            filterOptions={(options, params) => {\r\n              const filtered = filter(options, params);\r\n              if (params.inputValue !== \"\") {\r\n                filtered.push({\r\n                  inputValue: params.inputValue,\r\n                  title: `Add \"${params.inputValue}\"`,\r\n                });\r\n              }\r\n              return filtered;\r\n            }}\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            options={props.data}\r\n            getOptionLabel={option => {\r\n              if (typeof option === \"string\") {\r\n                return option;\r\n              }\r\n              if (option.inputValue) {\r\n                return option.inputValue;\r\n              }\r\n\r\n              return option.title;\r\n            }}\r\n            renderOption={option => option.title}\r\n            className=\"my-3\"\r\n            freeSolo\r\n            fullWidth\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Activity Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"subActivityName\"\r\n            name=\"subActivityName\"\r\n            label=\"Sub Activity Name\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            error={props.alertSubActivity}\r\n            helperText={props.alertSubActivityField}\r\n            onChange={props.handleActivityChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions style={{ marginBottom: \"1.5em\", marginRight: \"1em\" }}>\r\n          <Button onClick={props.handleModalOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.submitActivity} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginBottom: \"1rem\",\r\n    marginTop: \"1em\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction MainList(props) {\r\n  // console.log(props.percentage);\r\n\r\n  function revisedRandId() {\r\n    return Math.random()\r\n      .toString(36)\r\n      .replace(/[^a-z]+/g, \"\")\r\n      .substr(2, 10);\r\n  }\r\n  const classes = useStyles();\r\n  const checkEmpty = subActivity => {\r\n    let temp = subActivity.filter(\r\n      eachSubActivity => eachSubActivity.visibility === true\r\n    );\r\n    if (temp.length === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  return (\r\n    <DragDropContext>\r\n      <>\r\n        <Droppable droppableId={\"infratable\"}>\r\n          {provided => (\r\n            <div\r\n              className={classes.root}\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              {props.defaultActivity &&\r\n                props.defaultActivity.map((data, index) => {\r\n                  if (data.visibility) {\r\n                    return (\r\n                      <Draggable\r\n                        key={index}\r\n                        index={index}\r\n                        draggableId={`panelHeader${index}`}\r\n                      >\r\n                        {provided => (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              width: \"100%\",\r\n                              padding: \"10px\",\r\n                            }}\r\n                          >\r\n                            <div style={{ display: \"inline-block\", flex: 1 }}>\r\n                              <Accordion\r\n                                className=\"mb-1\"\r\n                                TransitionProps={{ unmountOnExit: true }}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                key={index}\r\n                              >\r\n                                <AccordionSummary\r\n                                  expandIcon={\r\n                                    <ExpandMoreIcon\r\n                                      fontSize=\"large\"\r\n                                      color=\"secondary\"\r\n                                    />\r\n                                  }\r\n                                  aria-controls={\"panelContent\" + index}\r\n                                  id={\"panelHeader\" + index}\r\n                                >\r\n                                  <div\r\n                                    style={{\r\n                                      width: \"100%\",\r\n                                      display: \"flex\",\r\n                                      alignItems: \"center\",\r\n                                      justifyContent: \"space-between\",\r\n                                    }}\r\n                                    {...provided.dragHandleProps}\r\n                                  >\r\n                                    <Typography className={classes.heading}>\r\n                                      {data.title}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                      color=\"textSecondary\"\r\n                                    >\r\n                                      {props.percentage[index] !== undefined &&\r\n                                      props.percentage[index] !== null\r\n                                        ? props.percentage[index]?.toFixed(2) //add toFixed\r\n                                        : \"0.00\"}\r\n                                      %\r\n                                    </Typography>\r\n                                  </div>\r\n                                </AccordionSummary>\r\n                                {data.content !== null\r\n                                  ? data.content.map((value, subIndex) => {\r\n                                      if (value.visibility) {\r\n                                        return (\r\n                                          <div key={subIndex}>\r\n                                            <hr\r\n                                              style={{\r\n                                                padding: \"5px\",\r\n                                                margin: 0,\r\n                                              }}\r\n                                            />\r\n                                            <Link\r\n                                              style={{ textDecoration: \"none\" }}\r\n                                              to={{\r\n                                                state: {\r\n                                                  roadActivityIndex:\r\n                                                    props.activeActivityIndex,\r\n                                                },\r\n                                                pathname: `/activities/${data.activity}/${value.link}`,\r\n                                              }}\r\n                                            >\r\n                                              <AccordionDetails\r\n                                                style={{ paddingLeft: \"50px\" }}\r\n                                              >\r\n                                                {value.subTitle}\r\n                                              </AccordionDetails>\r\n                                            </Link>\r\n                                          </div>\r\n                                        );\r\n                                      }\r\n                                    })\r\n                                  : \"\"}\r\n\r\n                                {data.content !== null &&\r\n                                checkEmpty(data.content) ? (\r\n                                  <div>\r\n                                    <hr style={{ padding: \"5px\", margin: 0 }} />\r\n                                    <Link\r\n                                      style={{ textDecoration: \"none\" }}\r\n                                      to={`/activities/${data.activity}/null`}\r\n                                    >\r\n                                      <AccordionDetails\r\n                                        style={{ paddingLeft: \"50px\" }}\r\n                                      >\r\n                                        {\"Update Here\"}\r\n                                      </AccordionDetails>\r\n                                    </Link>\r\n                                  </div>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </Accordion>\r\n                            </div>\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default MainList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Checkbox,\r\n  Grid,\r\n  Button,\r\n  FormControlLabel,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport EditModal from \"./EditModal\";\r\n\r\nimport { Done, Cancel, Edit } from \"@material-ui/icons\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst EditMainList = props => {\r\n  const [isEditOpen, setEditOpen] = useState(false);\r\n  const [editActivityValue, setActivityValue] = useState(\"\");\r\n  const [activityIndex, setActivityIndex] = useState(-1);\r\n  const [subActivityIndex, setSubActivityIndex] = useState(-1);\r\n  return (\r\n    <div style={{ marginTop: \"1em\" }}>\r\n      <EditModal\r\n        isOpen={isEditOpen}\r\n        setEditOpen={setEditOpen}\r\n        value={editActivityValue}\r\n        index={activityIndex}\r\n        subIndex={subActivityIndex}\r\n        updateActivityName={props.updateActivityName}\r\n        updateSubActivityNameUI={props.updateSubActivityNameUI}\r\n      />\r\n      {props.defaultActivity.map((data, index) => {\r\n        return (\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }} key={index}>\r\n            <div style={{ display: \"inline-block\" }}>\r\n              <Checkbox\r\n                checked={data.visibility}\r\n                onChange={event => {\r\n                  props.updateMainList(event, index);\r\n                }}\r\n                name=\"check\"\r\n                color=\"primary\"\r\n              />\r\n            </div>\r\n            <div style={{ display: \"inline-block\", flex: 1 }}>\r\n              <Accordion\r\n                className=\"mb-1\"\r\n                TransitionProps={{ unmountOnExit: true }}\r\n                key={index}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={\r\n                    <ExpandMoreIcon fontSize=\"large\" color=\"secondary\" />\r\n                  }\r\n                  aria-controls={\"panelContent\" + index}\r\n                  id={\"panelHeader\" + index}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\"\r\n                    }}\r\n                  >\r\n                    <Typography>{data.title}</Typography>\r\n                    <IconButton\r\n                      style={{ marginRight: \"20px\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        setEditOpen(true);\r\n                        setActivityValue(data.title);\r\n                        setActivityIndex(index);\r\n                        setSubActivityIndex(-1);\r\n                      }}\r\n                    >\r\n                      <Edit color=\"primary\" />\r\n                    </IconButton>\r\n                  </div>\r\n                </AccordionSummary>\r\n\r\n                {data.content !== null && data.content[0].link !== \"null\"\r\n                  ? data.content.map((value, subIndex) => {\r\n                      return (\r\n                        <div key={subIndex}>\r\n                          <hr style={{ padding: \"5px\", margin: 0 }} />\r\n                          <AccordionDetails\r\n                            style={{\r\n                              paddingLeft: \"50px\",\r\n                              alignItems: \"center\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\"\r\n                            }}\r\n                          >\r\n                            <FormControlLabel\r\n                              control={\r\n                                <Checkbox\r\n                                  checked={value.visibility}\r\n                                  onChange={event => {\r\n                                    props.updateSubList(event, index, subIndex);\r\n                                  }}\r\n                                  name=\"check\"\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              label={value.subTitle}\r\n                            ></FormControlLabel>\r\n                            <IconButton\r\n                              style={{ marginRight: \"20px\" }}\r\n                              onClick={() => {\r\n                                setEditOpen(true);\r\n                                setActivityValue(value.subTitle);\r\n                                setActivityIndex(index);\r\n                                setSubActivityIndex(subIndex);\r\n                              }}\r\n                            >\r\n                              <Edit color=\"primary\" />\r\n                            </IconButton>\r\n                          </AccordionDetails>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : \"\"}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <Grid container spacing={2} className=\"mt-2 mb-4\" justify=\"center\">\r\n        <Grid item>\r\n          <Button startIcon={<Done />} onClick={props.submitActivityList}>\r\n            Done\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"secondary\"\r\n            startIcon={<Cancel />}\r\n            onClick={props.changeAct}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMainList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { updateActivityName } from \"../../Redux/activityRedux/activityAction\";\r\n\r\nexport default function EditModal(props) {\r\n  const [value, setValue] = useState(props.value);\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={() => props.setEditOpen(false)}>\r\n      <DialogTitle>Edit Subactivity Name</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          defaultValue={props.value}\r\n          onChange={e => setValue(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            var projectId = global.config.secureStorage.getItem(\"projectId\");\r\n            props.updateActivityName({\r\n              projectId,\r\n              activityIndex: props.index,\r\n              subActivityIndex: props.subIndex,\r\n              title: value,\r\n            });\r\n            props.updateSubActivityNameUI(props.index, props.subIndex, value);\r\n            props.setEditOpen(false);\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={() => props.setEditOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nconst TableActivities = props => {\r\n  const [data, setData] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const columns = [\r\n    {\r\n      name: \"title\",\r\n      label: \"Sub Activity Title\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"floors\",\r\n      label: \"Floor-Wise Status\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let tempData = [];\r\n    let temparr = [];\r\n    props.tableData.map(elem => {\r\n      tempData = [];\r\n      elem.subactivities.map((item, i) => {\r\n        let row = [];\r\n        row.push(\r\n          <Accordion\r\n            style={{ backgroundColor: \"#f5f5f5\" }}\r\n            key={i}\r\n            defaultExpanded={true}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Floor-wise Data</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <TableContainer>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Floor</TableCell>\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>Flats Completed</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {item.floors.map((lab, id) => (\r\n                      <TableRow key={id}>\r\n                        <TableCell>Floor{++id}</TableCell>\r\n                        <TableCell>{lab.status}%</TableCell>\r\n                        <TableCell>\r\n                          {lab.flats && lab.flats.length != 0\r\n                            ? lab.flats.map(\r\n                                ele => ele && <li>{\"Flat \" + ele}</li>\r\n                              )\r\n                            : \"-\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        );\r\n        tempData.push({ title: item.title, floors: row });\r\n      });\r\n      temparr.push({ title: elem.activity, subactivities: tempData });\r\n    });\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    axios\r\n      .get(`${global.config.backendURL}/project/getProjectInfo/${projectId}`)\r\n      .then(res => setProjectName(res.data.projectName))\r\n      .catch(e => console.log(e));\r\n    setData(temparr);\r\n    setLoading(false);\r\n  }, []); //eslint-disable-line\r\n  const subprojectName = global.config.secureStorage.getItem(\"subProjectName\");\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <>\r\n          <Grid item container justify=\"center\" className=\"mt-4\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<KeyboardBackspaceIcon />}\r\n              onClick={props.toggleCloseTable}\r\n            >\r\n              Go back\r\n            </Button>\r\n          </Grid>\r\n          <center style={{ marginTop: \"1.5em\" }}>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n              <strong>Project: </strong>\r\n              {projectName}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n              <strong>Sub Project: </strong>\r\n              {subprojectName}\r\n            </Typography>\r\n          </center>\r\n          <center>\r\n            <button\r\n              className=\"btn-warning btn mt-3 mb-3 generatePDF\"\r\n              onClick={() => {\r\n                window.print();\r\n              }}\r\n            >\r\n              Download PDF\r\n            </button>\r\n          </center>\r\n          <Grid container justify=\"center\">\r\n            <Grid item lg={6}>\r\n              {data.map((elem, id) => (\r\n                <div style={{ margin: \"0 20px\" }} className=\"mt-4 mb-4\">\r\n                  <MUIDataTable\r\n                    title={`Activity: ${elem.title}`}\r\n                    columns={columns}\r\n                    data={elem.subactivities}\r\n                    options={{\r\n                      selectableRows: false,\r\n                      responsive: \"simple\",\r\n                      pagination: false,\r\n                      download: false,\r\n                      viewColumns: false,\r\n                      filter: false,\r\n                      print: false,\r\n                      search: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(TableActivities);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Group, CheckBox, FilterList, ErrorRounded } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Loading from \"../../Components/Loading\";\r\nimport BarchartData from \"./Barchart\";\r\nimport VerticleList from \"./VerticleList\";\r\n\r\nimport { getDefaultActivities } from \"../../Redux/activityRedux/activityAction\";\r\nimport { getAllUpdatesDetails } from \"../../Redux/overviewRedux/overviewAction\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Overview extends Component {\r\n  constructor(props) {\r\n    // console.log(iterList);\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const roles = [\"project_manager\", \"chief_engineer\", \"super_admin\"];\r\n    // const isAddVisible = roles.find(item => item == role) ? true : false;\r\n\r\n    this.state = {\r\n      subProject: {},\r\n      loading: true,\r\n      activeActivityIndex: 0,\r\n      percentage: [],\r\n      accNames: [],\r\n      projectType: \"\",\r\n      activityDetails: [],\r\n      safetyCheckList: 0,\r\n      safetyIssue: 0,\r\n      qualityCheckList: 0,\r\n      qualityIssue: 0,\r\n      users: 0,\r\n      actualCompletionByPercent: [],\r\n      estimatedCompletionByPercent: [],\r\n      actualCompletionByCost: [],\r\n      estimatedCompletionByCost: [],\r\n      activityNames: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        `${\r\n          global.config.backendURL\r\n        }/overview/getAllStatisticalData/${global.config.secureStorage.getItem(\r\n          \"projectId\"\r\n        )}/${global.config.secureStorage.getItem(\"subprojectId\")}`\r\n      );\r\n      response.data.forEach(data => {\r\n        if (data.type === \"checklist\") {\r\n          this.setState({\r\n            safetyCheckList: data.safety,\r\n            qualityCheckList: data.quality,\r\n          });\r\n        }\r\n        if (data.type === \"issue\") {\r\n          this.setState({\r\n            safetyIssue: data.safety,\r\n            qualityIssue: data.quality,\r\n          });\r\n        }\r\n        if (data.type === \"users\") {\r\n          this.setState({ users: data.total });\r\n        }\r\n      });\r\n      const monitoringRes = await axios.get(\r\n        `${\r\n          global.config.backendURL\r\n        }/monitoring/getActivities/${global.config.secureStorage.getItem(\r\n          \"subprojectId\"\r\n        )}/${global.config.secureStorage.getItem(\"projectId\")}`\r\n      );\r\n      let estimatedCompletionByPercent = [];\r\n      let actualCompletionByPercent = [];\r\n      let estimatedCompletionByCost = [];\r\n      let actualCompletionByCost = [];\r\n      let activityNames = [];\r\n      monitoringRes.data.forEach(data => {\r\n        let tempData = JSON.stringify(data);\r\n        tempData = JSON.parse(tempData);\r\n\r\n        if (\r\n          tempData.estimatedcompletion_by_cost > 0 ||\r\n          (tempData.estimatedcompletion.toLowerCase() != \"not available\" &&\r\n            Number(tempData.estimatedcompletion.split(\"%\")[0]) > 0) ||\r\n          tempData.actualcompletion_by_cost > 0 ||\r\n          (tempData.actualcompletion.toLowerCase() != \"not available\" &&\r\n            Number(tempData.actualcompletion.split(\"%\")[0]) > 0)\r\n        ) {\r\n          estimatedCompletionByPercent.push(\r\n            tempData.estimatedcompletion.toLowerCase() != \"not available\"\r\n              ? Number(tempData.estimatedcompletion.split(\"%\")[0])\r\n              : 0\r\n          );\r\n          actualCompletionByPercent.push(\r\n            tempData.actualcompletion.toLowerCase() != \"not available\"\r\n              ? Number(tempData.actualcompletion.split(\"%\")[0])\r\n              : 0\r\n          );\r\n          estimatedCompletionByCost.push(\r\n            isNaN(tempData.estimatedcompletion_by_cost)\r\n              ? 0\r\n              : tempData.estimatedcompletion_by_cost\r\n          );\r\n          actualCompletionByCost.push(\r\n            isNaN(tempData.actualcompletion_by_cost)\r\n              ? 0\r\n              : tempData.actualcompletion_by_cost\r\n          );\r\n          activityNames.push(tempData.title);\r\n        }\r\n      });\r\n      await this.props.getDefaultActivities();\r\n      await this.props.getAllUpdatesDetails(\r\n        global.config.secureStorage.getItem(\"subprojectId\")\r\n      );\r\n      console.log(this.props.percentage);\r\n\r\n      let newPer = [];\r\n      let newData = [];\r\n\r\n      let DataAcc = this.props.percentage.accName;\r\n      let DataList = this.props.percentage.per;\r\n      DataList.forEach((element, i) => {\r\n        if (element != 0) {\r\n          newPer.push(element);\r\n          newData.push(DataAcc[i]);\r\n        }\r\n      });\r\n      if (this.props.activityDetails)\r\n        this.setState({\r\n          activityDetails: this.props.activityDetails,\r\n        });\r\n      this.setState({\r\n        loading: !this.state.loading,\r\n        percentage: newPer,\r\n        accNames: newData,\r\n        estimatedCompletionByCost: estimatedCompletionByCost,\r\n        estimatedCompletionByPercent: estimatedCompletionByPercent,\r\n        actualCompletionByCost: actualCompletionByCost,\r\n        actualCompletionByPercent: actualCompletionByPercent,\r\n        activityNames: activityNames,\r\n      });\r\n      // this.fetchData();\r\n    } catch (error) {\r\n      //\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.loading) {\r\n      return <Loading loading={this.props.loading} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\" style={{ marginTop: \"20px\" }}>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n            item\r\n            sm={8}\r\n            xs={12}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid className=\"mt-2\" item sm={2} xs={6}>\r\n                <Grid\r\n                  className=\"p-4\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/editUser\">\r\n                    <IconButton aria-label=\"settings\">\r\n                      <Group fontSize=\"large\" color=\"disabled\" />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Typography variant=\"h6\">{this.state.users}</Typography>\r\n                  <Typography variant=\"h6\">Users</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-2\" item sm={2} xs={6}>\r\n                <Grid\r\n                  className=\"p-4\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/checklist/quality\">\r\n                    <IconButton aria-label=\"settings\">\r\n                      <FilterList fontSize=\"large\" color=\"disabled\" />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Typography variant=\"h6\">\r\n                    {this.state.qualityCheckList}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\">Quality Check list</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-2\" item sm={2} xs={6}>\r\n                <Grid\r\n                  className=\"p-4\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/checklist/safety\">\r\n                    <IconButton aria-label=\"settings\">\r\n                      <FilterList fontSize=\"large\" color=\"disabled\" />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Typography variant=\"h6\">\r\n                    {this.state.safetyCheckList}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\">Safety Check list</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-2\" item sm={2} xs={6}>\r\n                <Grid\r\n                  className=\"p-4\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/issues/quality\">\r\n                    <IconButton aria-label=\"settings\">\r\n                      <ErrorRounded fontSize=\"large\" color=\"disabled\" />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Typography variant=\"h6\">\r\n                    {this.state.qualityIssue}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\">Quality Issue</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-2\" item sm={2} xs={6}>\r\n                <Grid\r\n                  className=\"p-4\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid #ddd\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/issues/safety\">\r\n                    <IconButton aria-label=\"settings\">\r\n                      <ErrorRounded fontSize=\"large\" color=\"disabled\" />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Typography variant=\"h6\">{this.state.safetyIssue}</Typography>\r\n                  <Typography variant=\"h6\">Safety Issue</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={4} xs={12}>\r\n            <VerticleList activityDetails={this.state.activityDetails} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container className=\"mt-4\" spacing={2}>\r\n          <Grid item sm={4} xs={12}>\r\n            {/* {console.log(this.state.accNames)} */}\r\n            {this.state.accNames.length > 0 ? (\r\n              <BarchartData\r\n                accNames={this.state.accNames}\r\n                percentage={this.state.percentage}\r\n                percentageLabel=\"Activity Updates\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Grid item sm={4} xs={12}>\r\n            {/* {console.log(this.state.accNames)} */}\r\n            {this.state.activityNames &&\r\n            this.state.estimatedCompletionByPercent &&\r\n            this.state.activityNames.length > 0 ? (\r\n              <BarchartData\r\n                accNames={this.state.activityNames}\r\n                percentage={this.state.estimatedCompletionByPercent}\r\n                percentageLabel=\"Estimated Completion by Percentage\"\r\n                percentage1={this.state.actualCompletionByPercent}\r\n                percentage1Label=\"Actual Completion by Percentage\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Grid item sm={4} xs={12}>\r\n            {/* {console.log(this.state.accNames)} */}\r\n            {this.state.activityNames &&\r\n            this.state.actualCompletionByCost &&\r\n            this.state.activityNames.length > 0 ? (\r\n              <BarchartData\r\n                accNames={this.state.activityNames}\r\n                percentage={this.state.estimatedCompletionByCost}\r\n                percentageLabel=\"Estimated Completion by Cost\"\r\n                percentage1={this.state.actualCompletionByCost}\r\n                percentage1Label=\"Actual Completion by Cost\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.overviewReducer);\r\n  return {\r\n    defaultActivity: state.activityReducer.defaultActivity,\r\n    percentage: state.activityReducer.percentage,\r\n    loading: state.activityReducer.loading,\r\n    activityDetails: state.overviewReducer.activityDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getDefaultActivities,\r\n  getAllUpdatesDetails,\r\n})(Overview);\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    padding: 20,\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n  },\r\n  title: {\r\n    backgroundColor: \"#345BAE\",\r\n    padding: \"11px 10px\",\r\n    color: \"#fff\",\r\n    borderRadius: 11,\r\n  },\r\n  footer: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  footerlink: {\r\n    backgroundColor: \"#345BAE\",\r\n    padding: \"11px 10px\",\r\n    borderRadius: 11,\r\n    color: \"#fff\",\r\n  },\r\n  getcol: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n  noUpdates: {\r\n    padding: \"1em\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default function VerticleList(props) {\r\n  console.log(props.activityDetails);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Latest Updates</Typography>\r\n      </div>\r\n      {props.activityDetails ? (\r\n        props.activityDetails.slice(0, 3).map((detail, detailIndex) => {\r\n          return (\r\n            <Card\r\n              variant=\"outlined\"\r\n              style={{ margin: \"5px\", width: \"100%\" }}\r\n              elevation={3}\r\n            >\r\n              <CardContent>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <Typography variant=\"p\" className={classes.getcol}>\r\n                      Updated by:{detail.data[detail.data.length - 1].user}\r\n                      {/* {detail.user} */}\r\n                    </Typography>\r\n                    <Typography variant=\"p\" className={classes.getcol}>\r\n                      Update Date :{detail.data[detail.data.length - 1].date}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"p\" className={classes.getcol}>\r\n                      Activity Name:\r\n                      {detail.data[detail.data.length - 1].activityName}\r\n                    </Typography>\r\n                    <Typography variant=\"p\" className={classes.getcol}>\r\n                      Update Percentage:\r\n                      {detail.data[detail.data.length - 1].updatedPercentage}%\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })\r\n      ) : (\r\n        <div className={classes.noUpdates}>\r\n          <Typography variant=\"p\">Updates Not Available</Typography>\r\n        </div>\r\n      )}\r\n      <div className={classes.footer}>\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            state: {\r\n              activityDetails: props.activityDetails,\r\n            },\r\n            pathname: `/overview/viewupdates`,\r\n          }}\r\n        >\r\n          <Typography variant=\"p\" className={classes.footerlink}>\r\n            View More {\">>\"}\r\n          </Typography>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  GET_UPDATES_DETAILS,\r\n  SUCCESS_GET_UPDATES_DETAILS,\r\n  ERROR_GET_UPDATES_DETAILS,\r\n} from \"./overviewActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst successActionHelper = data => {\r\n  return {\r\n    type: SUCCESS_GET_UPDATES_DETAILS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getAllUpdatesDetails = subprojectId => async dispatch => {\r\n  //\r\n  //   dispatch(loadingActionHelper());\r\n  try {\r\n    const res = await axios.get(\r\n      `${global.config.backendURL}/overview/getAllUpdatesDetails/${subprojectId}`\r\n    );\r\n    // console.log(\"ss\", res.data);\r\n    // successActionHelper(res.data);\r\n    dispatch(successActionHelper(res.data));\r\n  } catch (err) {\r\n    // errorActionHelper(err);\r\n    // dispatch(errorActionHelper(err.data));\r\n  }\r\n};\r\n","import { LOADING_WBS, SUCCESS_GET_WBS, ERROR_GET_WBS } from \"./wbsTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst loadingActionHelper = () => {\r\n  return {\r\n    type: LOADING_WBS,\r\n  };\r\n};\r\nconst successWBSActionHelper = data => {\r\n  return {\r\n    type: SUCCESS_GET_WBS,\r\n    payload: data,\r\n  };\r\n};\r\nconst errorActionHelper = error => {\r\n  return {\r\n    type: ERROR_GET_WBS,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const getWbs = (activityName, sDate, eDate) => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n  //\r\n  try {\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    var newData = [];\r\n    var response = await axios.get(\r\n      `${global.config.backendURL}/wbs/getAllMis/${projectId}/${subprojectId}/${activityName}/${sDate}/${eDate}`\r\n    );\r\n    newData = response.data;\r\n\r\n    dispatch(successWBSActionHelper(newData));\r\n  } catch (error) {\r\n    dispatch(errorActionHelper(error.message));\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  clearActivityCheckedArray,\r\n  getTaskActivityDetails,\r\n  updateTaskActivityDetails,\r\n  doneUpdating,\r\n} from \"../../Redux/activityRedux/activityAction\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport {\r\n  ArrowForwardIos as ArrowForwardIosIcon,\r\n  Add as AddIcon,\r\n  Edit,\r\n  Delete,\r\n} from \"@material-ui/icons\";\r\n\r\nimport axios from \"axios\";\r\nimport AddTasks from \"./Tasks/AddTasks\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.common.white,\r\n    fontSize: 20,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nclass SubActivities extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activityDetails: [],\r\n      taskName: \"\",\r\n      taskQuantity: \"\",\r\n      taskUnit: \"\",\r\n      taskSubName: \"\",\r\n      taskSubQuantity: \"\",\r\n      taskSubUnit: \"\",\r\n\r\n      modalOpen: false,\r\n      subProject: {},\r\n      loading: true,\r\n      taskPercentage: [],\r\n      SubtaskPercentage: [],\r\n      expanded: \"panel1\",\r\n      isSubTask: false,\r\n      isEdit: false,\r\n      taskIndex: 0,\r\n      isUpdated: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const { subactivity } = this.props.match.params;\r\n    try {\r\n      this.props.clearActivityCheckedArray();\r\n      this.props.doneUpdating();\r\n      const subProjectDetails = await axios.get(\r\n        `${global.config.backendURL}/project/getSingleSubProject/${subprojectId}`\r\n      );\r\n      // const floorPerc = {\r\n      //   data: [\r\n      //     [\r\n      //       {\r\n      //         activity: \"pcc\",\r\n      //         percentage: 100,\r\n      //       },\r\n      //     ],\r\n      //   ],\r\n      // };\r\n\r\n      const floorPerc = await axios.get(\r\n        `${global.config.backendURL}/activities/getTaskPercentage/${projectId}/${subprojectId}/${subactivity}`\r\n      );\r\n      console.log(floorPerc);\r\n      this.setState({\r\n        subProject: subProjectDetails.data,\r\n        loading: false,\r\n        taskPercentage: floorPerc.data.task,\r\n        SubtaskPercentage: floorPerc.data.subtask,\r\n      });\r\n    } catch (error) {}\r\n  }\r\n  async componentDidUpdate() {\r\n    const path = this.props.match.params;\r\n\r\n    const { subactivity } = this.props.match.params;\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    if (!this.state.isUpdated) {\r\n      // const floorPerc = await axios.get(\r\n      //   `${global.config.backendURL}/activities/getTaskPercentage/${projectId}/${subprojectId}/${subactivity}`\r\n      // );\r\n      // this.setState({\r\n      //   taskPercentage: floorPerc.data.task,\r\n      //   SubtaskPercentage: floorPerc.data.subtask,\r\n      // });\r\n      await this.props.getTaskActivityDetails({\r\n        activity: path.subactivity,\r\n        subprojectId: subprojectId,\r\n      });\r\n      this.setState({\r\n        activityDetails: this.props.activityDetails,\r\n        isUpdated: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchPercentage = index => {\r\n    let temptaskPercentage = [...this.state.taskPercentage];\r\n    // let eachtaskPercentage = temptaskPercentage[index];\r\n    // // console.log(\"each\", eachtaskPercentage);\r\n    // for (var i = 0; i < temptaskPercentage[index].length; i++) {\r\n    //   if (eachtaskPercentage[i][\"activity\"] === finalActivity) {\r\n    //     return eachtaskPercentage[i][\"percentage\"];\r\n    //   }\r\n    // }\r\n    if (temptaskPercentage != undefined) {\r\n      if (temptaskPercentage[index]) {\r\n        return temptaskPercentage[index];\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  fetchPercentageSubTask = (index, subindex) => {\r\n    let temptaskPercentage = [...this.state.SubtaskPercentage];\r\n    if (temptaskPercentage != undefined) {\r\n      if (temptaskPercentage[index] != undefined) {\r\n        if (temptaskPercentage[index][subindex]) {\r\n          return parseInt(temptaskPercentage[index][subindex]);\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  handleChange = panel => (event, newExpanded) => {\r\n    this.setState({\r\n      expanded: newExpanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  handleModalOpen = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n      isSubTask: false,\r\n    });\r\n  };\r\n\r\n  handleTaskChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  handleEdit = (i, name, quantity, unit) => {\r\n    this.setState({\r\n      modalOpen: true,\r\n      isEdit: true,\r\n      taskName: name,\r\n      taskQuantity: quantity,\r\n      taskUnit: unit,\r\n      taskIndex: i,\r\n    });\r\n  };\r\n  handleSubtask = (i, name, quantity, unit) => {\r\n    this.setState({\r\n      modalOpen: true,\r\n      taskName: name,\r\n      taskQuantity: quantity,\r\n      taskUnit: unit,\r\n      isSubTask: true,\r\n      taskIndex: i,\r\n    });\r\n  };\r\n  submitTask = () => {\r\n    // console.log(\r\n    //   this.state.taskName,\r\n    //   this.state.taskQuantity,\r\n    //   this.state.taskUnit\r\n    // );\r\n\r\n    let arrayAcc = [...this.state.activityDetails];\r\n\r\n    if (!this.state.isEdit) {\r\n      arrayAcc[arrayAcc.length] = {\r\n        name: this.state.taskName,\r\n        quantity: this.state.taskQuantity,\r\n        unit: this.state.taskUnit,\r\n      };\r\n    } else {\r\n      arrayAcc[this.state.taskIndex] = {\r\n        name: this.state.taskName,\r\n        quantity: this.state.taskQuantity,\r\n        unit: this.state.taskUnit,\r\n      };\r\n    }\r\n    this.updateCondition(arrayAcc);\r\n    this.handleModalOpen();\r\n    this.setState({\r\n      isEdit: false,\r\n      taskIndex: 0,\r\n      activityDetails: [],\r\n      taskName: \"\",\r\n      taskQuantity: \"\",\r\n      taskUnit: \"\",\r\n    });\r\n  };\r\n  guidGenerator = () => {\r\n    var S4 = function () {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return (\r\n      S4() +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      \"-\" +\r\n      S4() +\r\n      S4() +\r\n      S4()\r\n    );\r\n  };\r\n  submitSubTask = () => {\r\n    // console.log(\r\n    //   this.state.taskName,\r\n    //   this.state.taskQuantity,\r\n    //   this.state.taskUnit\r\n    // );\r\n\r\n    let arrayAcc = [...this.state.activityDetails];\r\n    let randomid = this.guidGenerator();\r\n    let subArr = [];\r\n    subArr = arrayAcc[this.state.taskIndex].subTask;\r\n    if (subArr != undefined) {\r\n      subArr[subArr.length] = {\r\n        name: this.state.taskSubName,\r\n        quantity: this.state.taskSubQuantity,\r\n        unit: this.state.taskSubUnit,\r\n        percentage: \"0\",\r\n        randomid,\r\n      };\r\n    } else {\r\n      subArr = [\r\n        {\r\n          name: this.state.taskSubName,\r\n          quantity: this.state.taskSubQuantity,\r\n          unit: this.state.taskSubUnit,\r\n          percentage: \"0\",\r\n          randomid,\r\n        },\r\n      ];\r\n    }\r\n\r\n    arrayAcc[this.state.taskIndex] = {\r\n      name: this.state.taskName,\r\n      quantity: this.state.taskQuantity,\r\n      unit: this.state.taskUnit,\r\n      subTask: subArr,\r\n    };\r\n\r\n    this.updateCondition(arrayAcc);\r\n    this.handleModalOpen();\r\n    this.setState({\r\n      taskIndex: 0,\r\n      isSubTask: false,\r\n      activityDetails: [],\r\n\r\n      taskName: \"\",\r\n      taskQuantity: \"\",\r\n      taskUnit: \"\",\r\n\r\n      taskSubName: \"\",\r\n      taskSubQuantity: \"\",\r\n      taskSubUnit: \"\",\r\n    });\r\n  };\r\n\r\n  deleteTask = i => {\r\n    let arrayAcc = [...this.state.activityDetails];\r\n\r\n    arrayAcc.splice(i, 1);\r\n    this.updateCondition(arrayAcc);\r\n  };\r\n  deleteSubTask = (i, subindex) => {\r\n    let arrayAcc = [...this.state.activityDetails];\r\n    let subArr = [];\r\n    subArr = arrayAcc[i].subTask;\r\n    subArr.splice(subindex, 1);\r\n\r\n    arrayAcc[i].subTask = subArr;\r\n    this.updateCondition(arrayAcc);\r\n  };\r\n\r\n  updateCondition = arrayAcc => {\r\n    const { activity, subactivity, floorNumber, subTaskIndex } =\r\n      this.props.match.params;\r\n\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n\r\n    if (subactivity === \"null\") {\r\n      this.props.updateTaskActivityDetails({\r\n        activity: activity,\r\n        checkedArray: arrayAcc,\r\n        subprojectId,\r\n      });\r\n    } else {\r\n      this.props.updateTaskActivityDetails({\r\n        activity: subactivity,\r\n        checkedArray: arrayAcc,\r\n        subprojectId,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      isUpdated: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.activityDetails);\r\n    const path = this.props.match.params;\r\n    const activity = path.activity;\r\n    const subactivity = path.subactivity;\r\n    let finalActivity = \"\";\r\n    if (this.state.loading) return <Loading loading={this.state.loading} />;\r\n    if (subactivity === \"null\")\r\n      return <div>Null Activity please add activity</div>;\r\n    if (subactivity != \"null\")\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Typography variant=\"h6\" style={{ padding: \"10px 20px\" }}>\r\n              Activities/{path.activity.toUpperCase()}/\r\n              {path.subactivity.toUpperCase()}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <AddTasks\r\n              isSubTask={this.state.isSubTask}\r\n              taskName={this.state.taskName}\r\n              taskQuantity={this.state.taskQuantity}\r\n              taskUnit={this.state.taskUnit}\r\n              taskSubName={this.state.taskSubName}\r\n              taskSubQuantity={this.state.taskSubQuantity}\r\n              taskSubUnit={this.state.taskSubUnit}\r\n              handleModalOpen={this.handleModalOpen}\r\n              handleTaskChange={this.handleTaskChange}\r\n              submitTask={this.submitTask}\r\n              submitSubTask={this.submitSubTask}\r\n              open={this.state.modalOpen}\r\n            />\r\n          </div>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            style={{ marginVertical: \"2em\" }}\r\n            justify=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                className=\"m-2\"\r\n                color=\"primary\"\r\n                onClick={this.handleModalOpen}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add Tasks\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <div className=\"container\" style={{ marginTop: \"20px\" }}>\r\n            {this.state.activityDetails != undefined &&\r\n            this.state.activityDetails.length !== 0\r\n              ? this.state.activityDetails.map((task, index) => {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={this.state.expanded === `panel${index + 1}`}\r\n                      onChange={this.handleChange(`panel${index + 1}`)}\r\n                    >\r\n                      <AccordionSummary\r\n                        aria-controls=\"panel1d-content\"\r\n                        id=\"panel1d-header\"\r\n                        style={{\r\n                          paddingTop: 10,\r\n                          paddingBottom: 10,\r\n                        }}\r\n                      >\r\n                        <Grid\r\n                          container\r\n                          spacing={0}\r\n                          alignItems=\"center\"\r\n                          justify=\"space-between\"\r\n                        >\r\n                          <Typography variant=\"h6\">{task.name}</Typography>\r\n                          <Typography\r\n                            // style={{ marginLeft: \"20px\" }}\r\n                            color=\"textSecondary\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {this.fetchPercentage(index).toFixed(2)}%\r\n                          </Typography>\r\n                          <Grid item>\r\n                            <IconButton\r\n                              aria-label=\"settings\"\r\n                              onClick={() => {\r\n                                this.handleEdit(\r\n                                  index,\r\n                                  task.name,\r\n                                  task.quantity,\r\n                                  task.unit\r\n                                );\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#2E86AB\",\r\n                                color: \"#fff\",\r\n                                padding: 4,\r\n                                marginRight: 4,\r\n                              }}\r\n                            >\r\n                              <Edit />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              aria-label=\"settings\"\r\n                              onClick={() => {\r\n                                this.deleteTask(index);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"red\",\r\n                                color: \"#fff\",\r\n                                padding: 4,\r\n                              }}\r\n                            >\r\n                              <Delete />\r\n                            </IconButton>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails style={{ display: \"inline\" }}>\r\n                        <Grid\r\n                          container\r\n                          spacing={0}\r\n                          alignItems=\"center\"\r\n                          justify=\"center\"\r\n                          style={{\r\n                            marginBottom: 20,\r\n                            padding: 20,\r\n                          }}\r\n                        >\r\n                          {/* <Grid item lg={6}>\r\n                            <TableContainer\r\n                              style={{ width: \"100%\", backgroundColor: \"#fff\" }}\r\n                              aria-label=\"custom pagination table\"\r\n                            >\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <StyledTableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: \"100%\" }}\r\n                                  >\r\n                                    Estimated Quantity\r\n                                  </StyledTableCell>\r\n                                  <StyledTableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: \"100%\" }}\r\n                                  >\r\n                                    Unit\r\n                                  </StyledTableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                <TableRow key={index}>\r\n                                  <TableCell\r\n                                    style={{ padding: 0 }}\r\n                                    align=\"center\"\r\n                                  >\r\n                                    <Typography\r\n                                      align={\"center\"}\r\n                                      variant=\"h6\"\r\n                                      align=\"center\"\r\n                                    >\r\n                                      {task.quantity}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell\r\n                                    style={{ padding: 0 }}\r\n                                    align=\"center\"\r\n                                  >\r\n                                    <Typography\r\n                                      align={\"center\"}\r\n                                      variant=\"h6\"\r\n                                      align=\"center\"\r\n                                    >\r\n                                      {task.unit}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableBody>\r\n                            </TableContainer>\r\n                          </Grid> */}\r\n                        </Grid>\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          style={{ marginTop: \"2em\" }}\r\n                          justify=\"flex-end\"\r\n                        >\r\n                          <Grid item>\r\n                            <Button\r\n                              className=\"m-2\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                this.handleSubtask(\r\n                                  index,\r\n                                  task.name,\r\n                                  task.quantity,\r\n                                  task.unit\r\n                                );\r\n                              }}\r\n                              startIcon={<AddIcon />}\r\n                            >\r\n                              Add Sub Tasks\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                        {task.subTask\r\n                          ? task.subTask.map((subTask, subTaskIndex) => {\r\n                              return (\r\n                                <Grid style={{ display: \"flex\" }}>\r\n                                  <Link\r\n                                    key={subTaskIndex}\r\n                                    style={{ textDecoration: \"none\", flex: 1 }}\r\n                                    to={{\r\n                                      pathname: `/activities/${path.activity}/${path.subactivity}/${index}/${subTaskIndex}`,\r\n                                    }}\r\n                                  >\r\n                                    <Card\r\n                                      style={{\r\n                                        boxShadow:\r\n                                          \"0 2px 4px rgb(179, 179, 179)\",\r\n                                        marginLeft: 20,\r\n                                        marginRight: 20,\r\n                                      }}\r\n                                      className=\"mb-2\"\r\n                                      variant=\"outlined\"\r\n                                    >\r\n                                      <CardContent>\r\n                                        <Grid\r\n                                          container\r\n                                          justify=\"space-between\"\r\n                                          alignItems=\"center\"\r\n                                          direction=\"row\"\r\n                                        >\r\n                                          <Grid item xs={8}>\r\n                                            <Typography\r\n                                              variant=\"h5\"\r\n                                              component=\"h2\"\r\n                                            >\r\n                                              {subTask.name}\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                          <Grid item>\r\n                                            <Typography\r\n                                              // style={{ marginLeft: \"20px\" }}\r\n                                              color=\"textSecondary\"\r\n                                            >\r\n                                              {this.fetchPercentageSubTask(\r\n                                                index,\r\n                                                subTaskIndex\r\n                                              ).toFixed(2)}\r\n                                              %\r\n                                            </Typography>\r\n                                          </Grid>\r\n\r\n                                          {/* <Grid item>\r\n                                            <ArrowForwardIosIcon />\r\n                                          </Grid> */}\r\n                                        </Grid>\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </Link>\r\n                                  <IconButton\r\n                                    aria-label=\"settings\"\r\n                                    onClick={() => {\r\n                                      this.deleteSubTask(index, subTaskIndex);\r\n                                    }}\r\n                                    style={{\r\n                                      backgroundColor: \"red\",\r\n                                      color: \"#fff\",\r\n                                      padding: \"11px\",\r\n                                      height: \"44px\",\r\n                                      margin: 10,\r\n                                    }}\r\n                                  >\r\n                                    <Delete />\r\n                                  </IconButton>\r\n                                </Grid>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    activityDetails: state.activityReducer.activityDetails,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTaskActivityDetails: data => dispatch(getTaskActivityDetails(data)),\r\n    updateTaskActivityDetails: data =>\r\n      dispatch(updateTaskActivityDetails(data)),\r\n    clearActivityCheckedArray: () => dispatch(clearActivityCheckedArray()),\r\n    doneUpdating: () => dispatch(doneUpdating()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SubActivities);\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function AddTasks(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} fullScreen={fullScreen}>\r\n        <DialogTitle>New {props.isSubTask ? \"SubTask\" : \"Task\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Provide a new {props.isSubTask ? \"SubTask\" : \"SubTask\"}\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskName\"\r\n            name={props.isSubTask ? \"taskSubName\" : \"taskName\"}\r\n            label=\"Task Name\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.isSubTask ? props.taskSubName : props.taskName}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          />\r\n          {/* <TextField\r\n            margin=\"dense\"\r\n            id=\"taskQuantity\"\r\n            name={props.isSubTask ? \"taskSubQuantity\" : \"taskQuantity\"}\r\n            label=\"Task Quantity\"\r\n            type=\"number\"\r\n            variant=\"standard\"\r\n            value={props.isSubTask ? props.taskSubQuantity : props.taskQuantity}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskUnit\"\r\n            name={props.isSubTask ? \"taskSubUnit\" : \"taskUnit\"}\r\n            label=\"Task Unit\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.isSubTask ? props.taskSubUnit : props.taskUnit}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          /> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleModalOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          {/* <Button onClick={props.submitTask} color=\"primary\"> */}\r\n          <Button\r\n            onClick={props.isSubTask ? props.submitSubTask : props.submitTask}\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { Update } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getTaskActivityDetails,\r\n  updateTaskActivityDetails,\r\n  doneUpdating,\r\n  getUpdateDetails,\r\n  updateDetails,\r\n} from \"../../Redux/activityRedux/activityAction\";\r\nimport SubTaskTable from \"./SubTaskTable\";\r\nimport EditSubTask from \"./Tasks/EditSubTask\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport axios from \"axios\";\r\n\r\nclass SubTaskData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const editRoles = [\r\n      \"project_manager\",\r\n      \"junior_engineer\",\r\n      \"senior_engineer\",\r\n      \"super_admin\",\r\n    ];\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      modalOpen: false,\r\n      subProject: {},\r\n      loading: true,\r\n      activityDetails: [],\r\n      isUpdated: false,\r\n      isUpdatedDetails: false,\r\n      isEditable: isEditable,\r\n      subTaskData: [],\r\n      subTaskPanaroma: [],\r\n      subTaskPercentage: 0,\r\n      taskSubName: \"\",\r\n      taskSubQuantity: \"\",\r\n      taskSubUnit: \"\",\r\n      activityUpdateDetails: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const id = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const { activity, subactivity, floorNumber, subTaskIndex } =\r\n      this.props.match.params;\r\n    try {\r\n      const subProjectDetails = await axios.get(\r\n        `${global.config.backendURL}/project/getSingleSubProject/${id}`\r\n      );\r\n      // var array = Array(Number(subProjectDetails.data.flatNumber)).fill(false);\r\n      this.setState({\r\n        subProject: subProjectDetails.data,\r\n      });\r\n      if (subactivity === \"null\") {\r\n        //\r\n        await this.props.getTaskActivityDetails({\r\n          activity: activity,\r\n          subprojectId: id,\r\n        });\r\n      } else {\r\n        await this.props.getTaskActivityDetails({\r\n          activity: subactivity,\r\n          subprojectId: id,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    try {\r\n      if (this.props.activityDetails != undefined && !this.state.isUpdated) {\r\n        const path = this.props.match.params;\r\n        let subtask =\r\n          this.props.activityDetails[path.floorNumber].subTask[\r\n            path.subTaskIndex\r\n          ];\r\n        await this.props.getUpdateDetails({\r\n          randomid: subtask.randomid,\r\n        });\r\n        // this.setState({\r\n        //   isUpdatedDetails: true,\r\n        // });\r\n        this.setState({\r\n          loading: false,\r\n          activityDetails: this.props.activityDetails,\r\n          subTaskData: subtask,\r\n          subTaskPercentage: subtask.percentage,\r\n          subTaskPanaroma: subtask.panaroma,\r\n          taskSubName: subtask.name,\r\n          taskSubQuantity: subtask.quantity,\r\n          taskSubUnit: subtask.unit,\r\n          randomid: subtask.randomid,\r\n          isUpdated: true,\r\n        });\r\n      }\r\n      if (\r\n        this.state.activityUpdateDetails !== [] &&\r\n        !this.state.isUpdatedDetails\r\n      ) {\r\n        const { floorNumber, subTaskIndex } = this.props.match.params;\r\n        let subtask =\r\n          this.props.activityDetails[floorNumber].subTask[subTaskIndex];\r\n        if (this.props.activityUpdateDetails.randomid == subtask.randomid) {\r\n          this.setState({\r\n            activityUpdateDetails: this.props.activityUpdateDetails.data,\r\n            isUpdatedDetails: true,\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (this.props.activityDetails) {\r\n  //     const { floorNumber, subTaskIndex } = this.props.match.params;\r\n  //     let subtask =\r\n  //       this.props.activityDetails[floorNumber].subTask[subTaskIndex];\r\n  //     if (this.props.activityUpdateDetails) {\r\n  //       if (this.props.activityUpdateDetails.randomid == subtask.randomid) {\r\n  //         this.setState({\r\n  //           activityUpdateDetails: this.props.activityUpdateDetails.data,\r\n  //           // isUpdatedDetails: true,\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n  updateSubTask = () => {\r\n    const { activity, subactivity, floorNumber, subTaskIndex } =\r\n      this.props.match.params;\r\n    let arrayAcc = [...this.state.activityDetails];\r\n    if (!this.state.subTaskPanaroma) {\r\n      alert(\"Please Select Panaroma to update\");\r\n      return false;\r\n    }\r\n\r\n    let subArr = [];\r\n    subArr = arrayAcc[floorNumber].subTask;\r\n    let randomid = arrayAcc[floorNumber].subTask[subTaskIndex].randomid;\r\n    let updatedPercentage =\r\n      this.state.subTaskPercentage -\r\n      arrayAcc[floorNumber].subTask[subTaskIndex].percentage;\r\n    let now = new Date();\r\n    this.props.updateDetails({\r\n      randomid,\r\n      panaroma: this.state.subTaskPanaroma,\r\n      updatedPercentage,\r\n      user: global.config.secureStorage.getItem(\"username\"),\r\n      activityName: activity,\r\n      date:\r\n        now.getDate() +\r\n        \"/\" +\r\n        (parseInt(now.getMonth()) + 1).toString() +\r\n        \"/\" +\r\n        now.getFullYear(),\r\n    });\r\n\r\n    if (subArr != undefined) {\r\n      subArr[subTaskIndex] = {\r\n        name: this.state.taskSubName,\r\n        quantity: this.state.taskSubQuantity,\r\n        unit: this.state.taskSubUnit,\r\n        percentage: this.state.subTaskPercentage,\r\n        randomid,\r\n      };\r\n    }\r\n    arrayAcc[floorNumber].subTask = subArr;\r\n\r\n    this.updateCondition(arrayAcc);\r\n  };\r\n\r\n  updateCondition = arrayAcc => {\r\n    const { activity, subactivity, floorNumber, subTaskIndex } =\r\n      this.props.match.params;\r\n\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n\r\n    if (subactivity === \"null\") {\r\n      this.props.updateTaskActivityDetails({\r\n        activity: activity,\r\n        checkedArray: arrayAcc,\r\n        subprojectId,\r\n      });\r\n    } else {\r\n      this.props.updateTaskActivityDetails({\r\n        activity: subactivity,\r\n        checkedArray: arrayAcc,\r\n        subprojectId,\r\n      });\r\n    }\r\n    window.location.reload();\r\n    this.setState({\r\n      subTaskPanaroma: \"\",\r\n      isUpdatedDetails: false,\r\n    });\r\n  };\r\n\r\n  handlePanaroma = file => {\r\n    this.setState({\r\n      subTaskPanaroma: file,\r\n    });\r\n  };\r\n  addPercentage = (event, newValue) => {\r\n    // console.log(event, newValue);\r\n    if (newValue <= 100) {\r\n      this.setState({\r\n        subTaskPercentage: newValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  goBack = () => {\r\n    // this.props.history.goBack();\r\n  };\r\n  handleModalOpen = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen,\r\n    });\r\n  };\r\n  handleTaskChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  submitTask = () => {\r\n    const { activity, subactivity, floorNumber, subTaskIndex } =\r\n      this.props.match.params;\r\n\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    let arrayAcc = [...this.state.activityDetails];\r\n\r\n    let subArr = [];\r\n    subArr = arrayAcc[floorNumber].subTask;\r\n    if (subArr != undefined) {\r\n      subArr[subTaskIndex] = {\r\n        name: this.state.taskSubName,\r\n        quantity: this.state.taskSubQuantity,\r\n        unit: this.state.taskSubUnit,\r\n        percentage: this.state.subTaskPercentage,\r\n        panaroma: this.state.subTaskPanaroma,\r\n      };\r\n    }\r\n    arrayAcc[floorNumber].subTask = subArr;\r\n    this.updateCondition(arrayAcc);\r\n    this.handleModalOpen();\r\n    this.setState({\r\n      isEdit: false,\r\n      taskIndex: 0,\r\n      activityDetails: [],\r\n      isUpdated: false,\r\n      taskSubName: \"\",\r\n      taskSubQuantity: \"\",\r\n      taskSubUnit: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.isUpdated);\r\n    // console.log(this.state.activityUpdateDetails);\r\n    // if (this.state.isUpdated == true) {\r\n    //   if (this.props.isUpdateSuccess) {\r\n    //     this.props.history.goBack();\r\n    //   }\r\n    // }\r\n    // if (this.props.isUpdateSuccess) {\r\n    //   console.log(this.state.isUpdated);\r\n    //   // this.setState({\r\n    //   //   isUpdated: false,\r\n    //   // });\r\n    //   return <></>;\r\n    // }\r\n    const path = this.props.match.params;\r\n    const activity = path.activity;\r\n    const subactivity = path.subactivity;\r\n    if (this.state.loading) return <Loading loading={this.state.loading} />;\r\n    return (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h6\" style={{ padding: \"10px 20px\" }}>\r\n            Activities/{activity.toUpperCase()}/{subactivity.toUpperCase()}\r\n            /Flats\r\n          </Typography>\r\n        </div>\r\n        <div>\r\n          <EditSubTask\r\n            taskSubName={this.state.taskSubName}\r\n            taskSubQuantity={this.state.taskSubQuantity}\r\n            taskSubUnit={this.state.taskSubUnit}\r\n            handleModalOpen={this.handleModalOpen}\r\n            handleTaskChange={this.handleTaskChange}\r\n            submitTask={this.submitTask}\r\n            open={this.state.modalOpen}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"1.5em\",\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            // spacing={2}\r\n            style={{\r\n              margin: \"20px 0.3em 20px\",\r\n              width: \"90%\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Typography\r\n                className=\"justify-content-center d-flex my-2\"\r\n                variant=\"h4\"\r\n              >\r\n                {/* Flat List */}\r\n              </Typography>\r\n            </Grid>\r\n            {/* {this.state.isEditable && (\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<Update />}\r\n                  onClick={this.updateActivity}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            )} */}\r\n          </Grid>\r\n          <div className=\"container\">\r\n            <SubTaskTable\r\n              isEditable={this.state.isEditable}\r\n              addPercentage={this.addPercentage}\r\n              subPercentage={this.subPercentage}\r\n              updateSubTask={this.updateSubTask}\r\n              handleModalOpen={this.handleModalOpen}\r\n              handlePanaroma={this.handlePanaroma}\r\n              subTaskPanaroma={this.state.subTaskPanaroma}\r\n              subTaskData={this.state.subTaskData}\r\n              subTaskPercentage={this.state.subTaskPercentage}\r\n              activityUpdateDetails={this.state.activityUpdateDetails}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    activityDetails: state.activityReducer.activityDetails,\r\n    activityUpdateDetails: state.activityReducer.activityUpdateDetails,\r\n    loading: state.activityReducer.loading,\r\n    isUpdateSuccess: state.activityReducer.isUpdateSuccess,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTaskActivityDetails: data => dispatch(getTaskActivityDetails(data)),\r\n    updateTaskActivityDetails: data =>\r\n      dispatch(updateTaskActivityDetails(data)),\r\n    getUpdateDetails: data => dispatch(getUpdateDetails(data)),\r\n    updateDetails: data => dispatch(updateDetails(data)),\r\n    doneUpdating: () => dispatch(doneUpdating()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SubTaskData);\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function EditSubTask(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} fullScreen={fullScreen}>\r\n        <DialogTitle>Edit SubTask</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Provide a new SubTask Details</DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskName\"\r\n            name=\"taskSubName\"\r\n            label=\"Task Name\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.taskSubName}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          />\r\n          {/* <TextField\r\n            margin=\"dense\"\r\n            id=\"taskQuantity\"\r\n            name=\"taskSubQuantity\"\r\n            label=\"Task Quantity\"\r\n            type=\"number\"\r\n            variant=\"standard\"\r\n            value={props.taskSubQuantity}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskUnit\"\r\n            name=\"taskSubUnit\"\r\n            label=\"Task Unit\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.taskSubUnit}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleTaskChange}\r\n            fullWidth\r\n          /> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleModalOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          {/* <Button onClick={props.submitTask} color=\"primary\"> */}\r\n          <Button onClick={props.submitTask} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, CardHeader, Typography } from \"@material-ui/core\";\r\nimport Plan from \"./Plan\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport AddPlan from \"./AddPlan\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPlan,\r\n  getPlan,\r\n  deletePlan,\r\n  updatePlan,\r\n} from \"../../Redux/planningRedux/planAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport editRoles from \"../BarChart/planningEditRoles\";\r\n\r\nclass Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      planTitle: \"\",\r\n      planDetail: \"\",\r\n      deadline: new Date(),\r\n      createdAt: new Date(),\r\n      planId: \"\",\r\n      editPlanId: \"\",\r\n      allPlans: [],\r\n      isCreateNewPlan: false,\r\n      planCompleted: false,\r\n      isDelayed: false,\r\n      delayReason: \"\",\r\n      isEditable: isEditable,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.getPlan();\r\n    if (!this.props.loading) {\r\n      this.setState({\r\n        allPlans: this.props.plan.data,\r\n      });\r\n    }\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleChangeDate = event => {\r\n    this.setState({\r\n      deadline: event,\r\n    });\r\n  };\r\n  toggleCreateNewPlan = () => {\r\n    this.setState({\r\n      planTitle: \"\",\r\n      planDetail: \"\",\r\n      deadline: new Date(),\r\n      isCreateNewPlan: !this.state.isCreateNewPlan,\r\n    });\r\n  };\r\n\r\n  deletePlan = id => {\r\n    const requiredPlan = this.props.plan.data.find(eachPlan => {\r\n      return eachPlan.planId === id;\r\n    });\r\n    this.props.deletePlan(requiredPlan._id);\r\n    const newPlans = this.state.allPlans.filter(\r\n      eachPlan => eachPlan.planId !== id\r\n    );\r\n    this.setState({\r\n      allPlans: newPlans,\r\n    });\r\n  };\r\n\r\n  editPlanStatus = id => {\r\n    const newPlans = this.state.allPlans.map(eachPlan => {\r\n      if (eachPlan.planId === id) {\r\n        const change = {\r\n          ...eachPlan,\r\n          planCompleted: !this.state.planCompleted,\r\n        };\r\n        this.props.updatePlan(eachPlan.planId, change);\r\n        return change;\r\n      }\r\n      return eachPlan;\r\n    });\r\n    this.setState({\r\n      allPlans: newPlans,\r\n    });\r\n  };\r\n  editReason = (reason, id) => {\r\n    const newPlans = this.state.allPlans.map(eachPlan => {\r\n      if (eachPlan.planId === id) {\r\n        const change = {\r\n          ...eachPlan,\r\n          delayReason: reason,\r\n        };\r\n        this.props.updatePlan(eachPlan.planId, change);\r\n        return change;\r\n      }\r\n      return eachPlan;\r\n    });\r\n    this.setState({\r\n      allPlans: newPlans,\r\n    });\r\n  };\r\n  updatePlan = event => {\r\n    event.preventDefault();\r\n    const newPlans = this.state.allPlans.map(eachPlan => {\r\n      if (eachPlan.planId === this.state.editPlanId) {\r\n        const change = {\r\n          ...eachPlan,\r\n          planCompleted: this.state.planCompleted || eachPlan.planCompleted,\r\n          // delayReason: this.state.delayReason || eachPlan.delayReason,\r\n        };\r\n        this.props.updatePlan(eachPlan.planId, change);\r\n        return change;\r\n      }\r\n      return eachPlan;\r\n    });\r\n    this.setState({\r\n      allPlans: newPlans,\r\n    });\r\n  };\r\n\r\n  savePlan = event => {\r\n    event.preventDefault();\r\n    const id = Date.now();\r\n    // if (this.state.deadline.getTime() <= this.state.createdAt.getTime()) {\r\n    //   this.setState({\r\n    //     isDelayed: true,\r\n    //   });\r\n    // }\r\n    let now = this.state.deadline;\r\n    var date =\r\n      (parseInt(now.getMonth()) + 1).toString() +\r\n      \"-\" +\r\n      now.getDate() +\r\n      \"-\" +\r\n      now.getFullYear();\r\n\r\n    let n = this.state.createdAt;\r\n    const createdDate =\r\n      (parseInt(n.getMonth()) + 1).toString() +\r\n      \"-\" +\r\n      n.getDate() +\r\n      \"-\" +\r\n      n.getFullYear();\r\n    const finalPlan = {\r\n      planTitle: this.state.planTitle,\r\n      planDetail: this.state.planDetail,\r\n      createdAt: createdDate,\r\n      // createdAt: this.state.createdAt,\r\n      // isDelayed: this.state.isDelayed,\r\n      planCompleted: this.state.planCompleted,\r\n      delayReason: \"\",\r\n      deadline: date,\r\n      // deadline: this.state.deadline,\r\n      planId: id,\r\n    };\r\n\r\n    let newPlans = [...this.state.allPlans, finalPlan];\r\n\r\n    this.setState({\r\n      planTitle: \"\",\r\n      planDetail: \"\",\r\n      allPlans: newPlans,\r\n      isCreateNewPlan: !this.state.isCreateNewPlan,\r\n    });\r\n    this.props.addPlan(finalPlan);\r\n  };\r\n\r\n  render() {\r\n    const { isCreateNewPlan } = this.state;\r\n    if (isCreateNewPlan) {\r\n      return (\r\n        <AddPlan\r\n          handleChange={this.handleChange}\r\n          handleChangeDate={this.handleChangeDate}\r\n          planTitle={this.state.planTitle}\r\n          planDetail={this.state.planDetail}\r\n          deadline={this.state.deadline}\r\n          savePlan={this.savePlan}\r\n          toggleCreateNewPlan={this.toggleCreateNewPlan}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {this.props.notifications && (\r\n            <Notifications notifications={this.props.notifications} />\r\n          )}\r\n          {this.state.isEditable && (\r\n            <section className={Style.button__display}>\r\n              <Button\r\n                onClick={this.toggleCreateNewPlan}\r\n                startIcon={<Add />}\r\n                size=\"large\"\r\n              >\r\n                Add Plan\r\n              </Button>\r\n            </section>\r\n          )}\r\n          {this.props.loading ? (\r\n            <Loading loading={this.props.loading} />\r\n          ) : !this.props.loading && !this.state.allPlans.length ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                width: \"100vw\",\r\n                height: \"80vh\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                color=\"textSecondary\"\r\n                style={{ marginLeft: \"0.5em\", textAlign: \"center\" }}\r\n              >\r\n                No Plan Found!\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <CardHeader\r\n                title=\"Not Completed Plans\"\r\n                subheader=\"Plan in repository\"\r\n              />\r\n              <section className={Style.all__plan}>\r\n                {this.state.allPlans.map((eachPlan, index) => {\r\n                  return !eachPlan.planCompleted ? (\r\n                    <div key={index}>\r\n                      <Plan\r\n                        isEditable={this.state.isEditable}\r\n                        id={eachPlan.planId}\r\n                        planTitle={eachPlan.planTitle}\r\n                        planDetail={eachPlan.planDetail}\r\n                        deadline={eachPlan.deadline}\r\n                        createdAt={eachPlan.createdAt}\r\n                        planCompleted={eachPlan.planCompleted}\r\n                        handleChange={this.handleChange}\r\n                        delayReason={eachPlan.delayReason}\r\n                        editPlanStatus={this.editPlanStatus}\r\n                        deletePlan={this.deletePlan}\r\n                        editPlan={this.editPlan}\r\n                        show={\r\n                          !eachPlan.planCompleted &&\r\n                          !eachPlan.delayReason &&\r\n                          Date.parse(eachPlan.deadline) <=\r\n                            Date.parse(\r\n                              parseInt(new Date().getMonth()) +\r\n                                1 +\r\n                                \"-\" +\r\n                                new Date().getDate() +\r\n                                \"-\" +\r\n                                new Date().getFullYear()\r\n                            )\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        editReason={this.editReason}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div key={index}></div>\r\n                  );\r\n                })}\r\n              </section>\r\n\r\n              <CardHeader\r\n                title=\"Completed Plans\"\r\n                subheader=\"Plan in repository\"\r\n              />\r\n              <section className={Style.all__plan}>\r\n                {this.state.allPlans.map((eachPlan, index) => {\r\n                  return eachPlan.planCompleted ? (\r\n                    <div key={index}>\r\n                      <Plan\r\n                        id={eachPlan.planId}\r\n                        planTitle={eachPlan.planTitle}\r\n                        planDetail={eachPlan.planDetail}\r\n                        deadline={eachPlan.deadline}\r\n                        createdAt={eachPlan.createdAt}\r\n                        planCompleted={eachPlan.planCompleted}\r\n                        handleChange={this.handleChange}\r\n                        delayReason={eachPlan.delayReason}\r\n                        editPlanStatus={this.editPlanStatus}\r\n                        deletePlan={this.deletePlan}\r\n                        editPlan={this.editPlan}\r\n                        show={\r\n                          !eachPlan.planCompleted &&\r\n                          !eachPlan.delayReason &&\r\n                          Date.parse(eachPlan.deadline) <=\r\n                            Date.parse(\r\n                              parseInt(new Date().getMonth()) +\r\n                                1 +\r\n                                \"-\" +\r\n                                new Date().getDate() +\r\n                                \"-\" +\r\n                                new Date().getFullYear()\r\n                            )\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        editReason={this.editReason}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div key={index}></div>\r\n                  );\r\n                })}\r\n              </section>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  plan: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    plan: state.planReducer,\r\n    notifications: state.notifications,\r\n    success: state.planReducer.success,\r\n    loading: state.planReducer.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addPlan,\r\n  getPlan,\r\n  deletePlan,\r\n  updatePlan,\r\n})(Display);\r\n","import \"date-fns\";\r\nimport React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\";\r\nimport { Save, Cancel } from \"@material-ui/icons\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Style from \"./style.module.scss\";\r\n\r\nconst AddToDo = props => {\r\n  return (\r\n    <div>\r\n      <section className={Style.create__plan}>\r\n        <form onSubmit={props.savePlan}>\r\n          <h1 className={Style.add__plan__header}>Add New Plans</h1>\r\n          <TextField\r\n            className=\"m-1\"\r\n            name=\"planTitle\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={props.planTitle}\r\n            onChange={props.handleChange}\r\n            id=\"planTitle\"\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"planDetail\"\r\n            id=\"planDetail\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={4}\r\n            onChange={props.handleChange}\r\n            label=\"Plan Details\"\r\n            fullWidth\r\n            value={props.planDetail}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              display=\"block\"\r\n              name=\"deadline\"\r\n              id=\"deadline\"\r\n              inputVariant=\"outlined\"\r\n              // format=\"dd/MM/yyyy\"\r\n              margin=\"normal\"\r\n              // required\r\n              label=\"Deadline\"\r\n              minDate={new Date()}\r\n              onChange={props.handleChangeDate}\r\n              value={props.deadline}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <br />\r\n          <br />\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={props.toggleCreateNewPlan}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddToDo;\r\n","import React, { Component } from \"react\";\r\nimport { CardHeader } from \"@material-ui/core\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Material from \"./Material\";\r\nimport ModifyMaterial from \"./ModifyMaterial\";\r\nimport IssueHistory from \"./IssueHistory\";\r\nimport ApproveIssue from \"./ApproveIssue\";\r\nimport Style from \"./style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addMaterial,\r\n  getStore,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  updateStore\r\n} from \"../../Redux/storeRedux/storeAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\n\r\nclass Store extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const editRoles = [\"store_manager\", \"super_admin\"];\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      materialName: \"\",\r\n      materialLimit: \"\",\r\n      materialQuantity: \"\",\r\n      openingBalance: \"\",\r\n      closingBalance: \"\",\r\n      editMaterialId: \"\",\r\n      allMaterials: [],\r\n      isCreateNewMaterial: false,\r\n      isModifyMaterial: false,\r\n      isIssueMaterial: false,\r\n      isMaterialReq:false,\r\n      isApproveIssue : false,\r\n      isEditable: isEditable,\r\n      isDataFetched: false,\r\n      index: -1,\r\n      issueId: \"\",\r\n      materialReqId:\"\"\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.props.getStore();\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  toggleModifyMaterialComponent = () => {\r\n    this.setState({\r\n      isModifyMaterial: !this.state.isModifyMaterial\r\n    });\r\n  };\r\n\r\n  cancelButtonUtil = () => {\r\n    this.setState({\r\n      isModifyMaterial: !this.state.isModifyMaterial,\r\n      materialName: \"\",\r\n      materialLimit: \"\",\r\n      materialQuantity: \"\",\r\n      openingBalance: \"\",\r\n      closingBalance: \"\",\r\n      editMaterialId: \"\",\r\n      index: -1\r\n    });\r\n  };\r\n\r\n  toggleIssueMaterialComponent = () => {\r\n    this.setState({\r\n      isIssueMaterial: !this.state.isIssueMaterial\r\n    });\r\n  };\r\n\r\n  toggleMaterialReqComponent = () => {\r\n    this.setState({\r\n      isMaterialReq: !this.state.isMaterialReq\r\n    });\r\n  };\r\n\r\n  editMaterial = (name, index) => {\r\n    this.setState({\r\n      editMaterialName: name\r\n    });\r\n    const Material = this.props.storeData[index];\r\n    this.setState({\r\n      index: index,\r\n      materialName: Material.materialName,\r\n      materialQuantity: Material.materialQuantity,\r\n      openingBalance: Material.openingBalance,\r\n      closingBalance: Material.closingBalance,\r\n      isModifyMaterial: !this.state.isModifyMaterial\r\n    });\r\n  };\r\n\r\n  issueMaterial = (name, index) => {\r\n    this.setState({\r\n      editMaterialName: name\r\n    });\r\n    const Material = this.props.storeData[index];\r\n    this.setState({\r\n      issueId: Material._id,\r\n      materialName: Material.materialName,\r\n\r\n      isIssueMaterial: !this.state.isIssueMaterial\r\n    });\r\n  };\r\n\r\n  materialReq = (name, index) => {\r\n    this.setState({\r\n      editMaterialName: name\r\n    });\r\n    const Material = this.props.storeData[index];\r\n    this.setState({\r\n      materialReqId: Material._id,\r\n      materialName: Material.materialName,\r\n\r\n      isMaterialReq: !this.state.isMaterialReq\r\n    });\r\n  };\r\n\r\n\r\n\r\n  \r\n  /*deleteMaterialReqIssues = id => {\r\n\r\n    const requiredMaterialReq = this.props.storeData[0].materialReqIssues.splice(id,1);\r\n    console.log(this.props.storeData[0].materialReqIssues);\r\n    this.props.deleteMaterialReq(requiredMaterialReq.id);\r\n  };*/\r\n\r\n\r\n\r\n  updateStore = (event, index) => {\r\n    event.preventDefault();\r\n    const id = this.props.storeData[index]._id;\r\n\r\n    var prev = {\r\n      _id: id,\r\n      openingBalance: this.state.openingBalance,\r\n      closingBalance: this.state.closingBalance,\r\n      materialName: this.state.materialName,\r\n      materialQuantity: this.state.materialQuantity,\r\n      projectId: this.props.storeData[index].projectId\r\n    };\r\n\r\n    this.props.updateStore(prev);\r\n    this.setState({\r\n      isModifyMaterial: !this.state.isModifyMaterial\r\n    });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { isModifyMaterial } = this.state;\r\n    if (isModifyMaterial) {\r\n      return (\r\n        <ModifyMaterial\r\n          index={this.state.index}\r\n          materialName={this.state.materialName}\r\n          materialQuantity={this.state.materialQuantity}\r\n          openingBalance={this.state.openingBalance}\r\n          issue={this.state.issue}\r\n          closingBalance={this.state.closingBalance}\r\n          updateStore={this.updateStore}\r\n          handleChange={this.handleChange}\r\n          cancelButtonUtil={this.cancelButtonUtil}\r\n        />\r\n      );\r\n    }\r\n    const { isIssueMaterial } = this.state;\r\n    if (isIssueMaterial) {\r\n      //\r\n      return (\r\n        <IssueHistory\r\n          id={this.state.issueId}\r\n          materialName={this.state.materialName}\r\n          toggleIssueMaterialComponent={this.toggleIssueMaterialComponent}\r\n        />\r\n      );\r\n    }\r\n    const {isMaterialReq} = this.state;\r\n    if(isMaterialReq){\r\n      return(\r\n        <ApproveIssue\r\n        id={this.state.materialReqId}\r\n        materialName={this.state.materialName}\r\n        materialQuantity = {this.state.materialQuantity}\r\n        toggleMaterialReqComponent={this.toggleMaterialReqComponent}\r\n        ></ApproveIssue>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.props.loading ? (\r\n          <Loading loading={this.props.loading} />\r\n        ) : !this.props.loading && this.props.storeData.length === 0 ? (\r\n          <section className={Style.no__material}>\r\n            <h1>Nothing in Store</h1>\r\n            <br />\r\n            <br />\r\n          </section>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <section className={Style.all__material}>\r\n                {this.props.storeData.map((eachMaterial, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Material\r\n                        isEditable={this.state.isEditable}\r\n                        id={eachMaterial._id}\r\n                        index={index}\r\n                        materialName={eachMaterial.materialName}\r\n                        materialQuantity={eachMaterial.materialQuantity}\r\n                        showActions={true}\r\n                        editMaterial={this.editMaterial}\r\n                        issueMaterial={this.issueMaterial}\r\n                        materialReq = {this.materialReq}\r\n                        deleteMaterialReqIssues = {this.deleteMaterialReqIssues}\r\n                        deleteMaterial={this.removeMaterial}\r\n                        openingBalance={eachMaterial.openingBalance}\r\n                        closingBalance={eachMaterial.closingBalance}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </section>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStore.propTypes = {\r\n  material: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    storeData: state.storeReducer.storeData,\r\n    notifications: state.notifications,\r\n    success: state.storeReducer.getStoreSuccess,\r\n    loading: state.storeReducer.getStoreLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addMaterial,\r\n  getStore,\r\n  updateStore,\r\n  deleteMaterial,\r\n  addDeliveryDate\r\n})(Store);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  // withStyles,\r\n} from \"@material-ui/core\";\r\nimport { CheckCircleOutline, Edit as EditIcon, Send } from \"@material-ui/icons\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n//import CircleChecked from '@material-ui/icons/CheckCircleOutline';\r\n// import { green } from \"@material-ui/core/colors\";\r\nimport CreateIssue from \"./CreateIssue\";\r\nimport SendMaterialReq from \"./SendMaterialReq\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"5px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  materialCard: {\r\n    padding: \"10px !important\",\r\n  },\r\n}));\r\n// const ColorButton = withStyles(theme => ({\r\n//   root: {\r\n//     color: theme.palette.getContrastText(green[700]),\r\n//     backgroundColor: green[700],\r\n//     \"&:hover\": {\r\n//       backgroundColor: green[900]\r\n//     }\r\n//   }\r\n// }))(Button);\r\n\r\nexport default function Material({\r\n  materialName,\r\n  materialQuantity,\r\n  materialLimit,\r\n  editMaterial,\r\n  expectedDate,\r\n  openingBalance,\r\n  closingBalance,\r\n  issue,\r\n  deliveredDate,\r\n  issueMaterial,\r\n  materialReq,\r\n  index,\r\n  id,\r\n  isEditable,\r\n}) {\r\n  const [toShow, setToShow] = useState(false);\r\n  const [toShowReq, setToShowReq] = useState(false);\r\n\r\n  const createIssue = () => {\r\n    setToShow(true);\r\n  };\r\n  const createMaterialReq = () => {\r\n    setToShowReq(true);\r\n  };\r\n\r\n  var props = { border: \"3px solid green\" };\r\n  if (parseInt(materialLimit) >= parseInt(materialQuantity)) {\r\n    props = { border: \"3px solid red\" };\r\n  } else {\r\n    props = { border: \"3px solid green\" };\r\n  }\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        backgroundColor:\r\n          deliveredDate === undefined\r\n            ? \"white\"\r\n            : Date.parse(expectedDate) < Date.parse(deliveredDate)\r\n            ? \"rgba(255,0,0,0.9)\"\r\n            : \"rgba(0,255,0,0.9)\",\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h5\">\r\n          <strong>{materialName}</strong>\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Received quantity :</strong>{\" \"}\r\n          {materialQuantity || \"Not available\"}\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Opening Balance :</strong> {openingBalance || \"Not available\"}\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Closing Balance :</strong> {closingBalance || \"Not available\"}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* Dire Need to change this - will have to employ encryption */}\r\n      <CardActions style={{ marginLeft: \"5px\" }}>\r\n        <Grid container>\r\n          <Grid className=\"mr-4\" item>\r\n            {isEditable && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"m-2\"\r\n                onClick={() => editMaterial(materialName, index)}\r\n                startIcon={<EditIcon />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            )}\r\n            {isEditable && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"m-2\"\r\n                onClick={() => createIssue(index)}\r\n                startIcon={<AddCircleOutlineIcon />}\r\n              >\r\n                Issue Material\r\n              </Button>\r\n            )}\r\n            {isEditable && (\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"m-2\"\r\n                onClick={() => issueMaterial(materialName, index)}\r\n                startIcon={<HistoryIcon />}\r\n              >\r\n                Issue History\r\n              </Button>\r\n            )}\r\n            {isEditable && (\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"m-2\"\r\n                onClick={() => materialReq(materialName, index)}\r\n                startIcon={<CheckCircleOutline />}\r\n              >\r\n                Approve Issues\r\n              </Button>\r\n            )}\r\n\r\n            {!isEditable && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"m-2\"\r\n                onClick={() => createMaterialReq(index)}\r\n                startIcon={<AddCircleOutlineIcon />}\r\n              >\r\n                Send material requisition\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n      {toShow ? (\r\n        <CreateIssue\r\n          toShow={toShow}\r\n          setToShow={setToShow}\r\n          id={id}\r\n          closingBalance={closingBalance}\r\n        />\r\n      ) : null}\r\n\r\n      {toShowReq ? (\r\n        <SendMaterialReq\r\n          toShowReq={toShowReq}\r\n          setToShowReq={setToShowReq}\r\n          id={id}\r\n          closingBalance={closingBalance}\r\n        />\r\n      ) : null}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// import _ from \"lodash\";\r\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport axios from \"axios\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { addIssue } from \"../../Redux/storeRedux/storeAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CreateIssue = props => {\r\n  \r\n  const [state, setState] = useState({\r\n    projects: [],\r\n    projectNames: [],\r\n    totalProjects: []\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState(\"\");\r\n  const [sub, setSub] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = event => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (props.toShow === true) {\r\n      props.setToShow(false);\r\n    }\r\n  };\r\n\r\n  const handleProjects = (value, project) => {\r\n    if (!project || project == null) return;\r\n\r\n    setSub(project);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n      try {\r\n        var id = global.config.secureStorage.getItem(\"projectId\");\r\n        const response = await axios.get(\r\n          `${global.config.backendURL}/project/getAllSubProjectNames/${id}`\r\n        );\r\n        if (active) {\r\n          setState({\r\n            ...state,\r\n            projects: response.data,\r\n            projectNames: response.data.map(\r\n              project => project[\"subProjectName\"]\r\n            )\r\n          });\r\n        }\r\n      } catch (error) {\r\n        \r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    if (!data || !sub) {\r\n      setError(\"Please fill all the fields\");\r\n      return;\r\n    }\r\n    if (\r\n      !props.closingBalance ||\r\n      parseInt(props.closingBalance) < parseInt(data)\r\n    ) {\r\n      setError(\"Not enough quantity available in store\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    \r\n    props.addIssue(props.id, {\r\n      subProjectName: sub,\r\n      quantity: data,\r\n      date: new Date()\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2 mb-4\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"issueQuantity\"\r\n            variant=\"outlined\"\r\n            required\r\n            id=\"issueQuantity\"\r\n            label=\"Issue Quantity\"\r\n            type=\"number\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            fullWidth\r\n            onOpen={() => {\r\n              setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            id=\"autoComplete\"\r\n            onChange={(event, value) => handleProjects(event, value)}\r\n            options={state.projectNames}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label={\"Select Project\"}\r\n                variant=\"outlined\"\r\n                name=\"projectName\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ marginLeft: \"0.5em\", marginTop: \"0em\", marginBottom: \"0\" }}\r\n        >\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddCircleOutlineIcon />}\r\n            className=\"m-2\"\r\n            onClick={onSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<DeleteIcon />}\r\n            color=\"secondary\"\r\n            className=\"m-2\"\r\n            onClick={handleClick}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n  return {\r\n    loading: true\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addIssue })(CreateIssue);\r\n","import React, { useState, useEffect } from \"react\";\r\n// import _ from \"lodash\";\r\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport axios from \"axios\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { addMaterialReq } from \"../../Redux/storeRedux/storeAction\";\r\nimport { connect } from \"react-redux\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst SendMaterialReq = props => {\r\n  const [state, setState] = useState({\r\n    projects: [],\r\n    projectNames: [],\r\n    totalProjects: [],\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState(\"\");\r\n  const [sub, setSub] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = event => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (props.toShowReq === true) {\r\n      props.setToShowReq(false);\r\n    }\r\n  };\r\n\r\n  const handleProjects = (value, project) => {\r\n    if (!project || project == null) return;\r\n\r\n    setSub(project);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n      try {\r\n        var id = global.config.secureStorage.getItem(\"projectId\");\r\n        const response = await axios.get(\r\n          `${global.config.backendURL}/project/getAllSubProjectNames/${id}`\r\n        );\r\n        if (active) {\r\n          setState({\r\n            ...state,\r\n            projects: response.data,\r\n            projectNames: response.data.map(\r\n              project => project[\"subProjectName\"]\r\n            ),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\"error in sending\");\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    let quantity = data;\r\n    if (!data || !sub) {\r\n      setError(\"Please fill all the fields\");\r\n      return;\r\n    }\r\n    if (data < 0) {\r\n      quantity = data * -1;\r\n    }\r\n    if (\r\n      !props.closingBalance ||\r\n      parseInt(props.closingBalance) < parseInt(quantity)\r\n    ) {\r\n      setError(\"Not enough quantity available in store\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    props.addMaterialReq(props.id, {\r\n      subProjectName: sub,\r\n      quantity: quantity,\r\n      date: new Date(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2 mb-4\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"materialReqQuantity\"\r\n            variant=\"outlined\"\r\n            required\r\n            id=\"materialReqId\"\r\n            label=\"Quantity\"\r\n            type=\"number\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Autocomplete\r\n            fullWidth\r\n            onOpen={() => {\r\n              setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            id=\"autoComplete\"\r\n            onChange={(event, value) => handleProjects(event, value)}\r\n            options={state.projectNames}\r\n            renderInput={params => (\r\n              <TextField\r\n                {...params}\r\n                label={\"Select Project\"}\r\n                variant=\"outlined\"\r\n                name=\"projectName\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{ marginLeft: \"0.5em\", marginTop: \"0em\", marginBottom: \"0\" }}\r\n        >\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<SendIcon />}\r\n            className=\"m-2\"\r\n            onClick={onSubmit}\r\n          >\r\n            Send\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<DeleteIcon />}\r\n            color=\"secondary\"\r\n            className=\"m-2\"\r\n            onClick={handleClick}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: true,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addMaterialReq })(SendMaterialReq);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField, Grid, Typography } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Update, Cancel } from \"@material-ui/icons\";\r\n// import { getMaterial, updateStore } from \"../../Redux/storeRedux/storeAction\";\r\n\r\n// import { connect } from \"react-redux\";\r\nconst ModifyMaterial = props => {\r\n  return (\r\n    <>\r\n      <section className={Style.create__material}>\r\n        <form>\r\n          <Typography\r\n            style={{ fontSize: \"1rem\" }}\r\n            variant=\"overline\"\r\n            display=\"block\"\r\n          >\r\n            Edit Material - {props.materialName}\r\n          </Typography>\r\n          <hr />\r\n          <br />\r\n          <TextField\r\n            name=\"materialName\"\r\n            value={props.materialName}\r\n            variant=\"outlined\"\r\n            disabled={true}\r\n            required\r\n            fullWidth\r\n            id=\"materialName\"\r\n            label=\"Material Name\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialQuantity\"\r\n            value={props.materialQuantity}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            onChange={event => props.handleChange(event, props.index)}\r\n            id=\"materialQuantity\"\r\n            label=\"Quantity\"\r\n            type=\"number\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"openingBalance\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={props.openingBalance}\r\n            onChange={event => props.handleChange(event, props.index)}\r\n            id=\"openingBalance\"\r\n            label=\"Opening Balance\"\r\n            type=\"number\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"closingBalance\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={props.closingBalance}\r\n            onChange={event => props.handleChange(event, props.index)}\r\n            id=\"closingBalance\"\r\n            label=\"Closing Balance\"\r\n            type=\"number\"\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                startIcon={<Update />}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                onClick={e => props.updateStore(e, props.index)}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                startIcon={<Cancel />}\r\n                size=\"large\"\r\n                onClick={props.cancelButtonUtil}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default ModifyMaterial;\r\n","import React, { useEffect,useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Cancel } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIssues,addIssue} from \"../../Redux/storeRedux/storeAction\";\r\nimport Loading from \"../../Components/Loading\";\r\nconst IssueHistory = props => {\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    props.getIssues(props.id);\r\n  }, []);\r\n\r\n  if (props.loading) {\r\n    return <Loading loading={true}></Loading>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={Style.create__material}>\r\n        <Typography\r\n          style={{ fontSize: \"1rem\" }}\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n        >\r\n          {\" \"}\r\n          Issue History - {props.materialName}{\" \"}\r\n        </Typography>\r\n\r\n        <hr />\r\n\r\n        {props.issueHistory.map((item, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Typography>\r\n                <strong>Quantity :</strong> {item.quantity}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Subproject issued to :</strong> {item.subProjectName}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Issue date :</strong>{\" \"}\r\n                {new Date(item.date.toString()).toLocaleDateString()}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Issue time :</strong>{\" \"}\r\n                {new Date(item.date.toString()).toLocaleTimeString()}\r\n              </Typography>\r\n         \r\n              <hr />\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {props.issueHistory.length == 0 && (\r\n          <Typography\r\n            style={{ marginBottom: \"2em\", textAlign: \"center\" }}\r\n            variant=\"h5\"\r\n            display=\"block\"\r\n          >\r\n            No issue history available!\r\n          </Typography>\r\n        )}\r\n        <Grid justify=\"center\" container>\r\n          <Grid item>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              startIcon={<Cancel />}\r\n              size=\"large\"\r\n              onClick={props.toggleIssueMaterialComponent}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  // \r\n  return {\r\n    loading: state.storeReducer.issueLoading,\r\n    issueHistory: state.storeReducer.issueHistory\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { getIssues,addIssue })(IssueHistory);\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Cancel, Close } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMaterialReqIssues,\r\n  approveMaterialReq,\r\n  rejectMaterialReq,\r\n} from \"../../Redux/storeRedux/storeAction\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nconst ApproveIssue = props => {\r\n  //\r\n\r\n  useEffect(() => {\r\n    props.getMaterialReqIssues(props.id);\r\n  }, []);\r\n\r\n  if (props.loading) {\r\n    return <Loading loading={true}></Loading>;\r\n  }\r\n\r\n  const onSubmit = (quan, sub, id) => {\r\n    props.approveMaterialReq(props.id, {\r\n      subProjectName: sub,\r\n      quantity: quan,\r\n      date: new Date(),\r\n      id,\r\n    });\r\n    props.toggleMaterialReqComponent();\r\n  };\r\n\r\n  const onRejectSubmit = (quan, sub, id) => {\r\n    props.rejectMaterialReq(props.id, {\r\n      subProjectName: sub,\r\n      quantity: quan,\r\n      date: new Date(),\r\n      id,\r\n    });\r\n    props.toggleMaterialReqComponent();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={Style.create__material}>\r\n        <Typography\r\n          style={{ fontSize: \"1rem\" }}\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n        >\r\n          {\" \"}\r\n          Pending Approvals - {props.materialName}{\" \"}\r\n        </Typography>\r\n\r\n        <hr />\r\n\r\n        {props.materialReqIssues.map((item, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Typography>\r\n                <strong>Quantity :</strong> {item.quantity}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Subproject issued to :</strong> {item.subProjectName}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Issue date :</strong>{\" \"}\r\n                {new Date(item.date.toString()).toLocaleDateString()}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Issue time :</strong>{\" \"}\r\n                {new Date(item.date.toString()).toLocaleTimeString()}\r\n              </Typography>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<AddIcon />}\r\n                    className=\"m-2\"\r\n                    onClick={() =>\r\n                      onSubmit(item.quantity, item.subProjectName, item.id)\r\n                    }\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<Close />}\r\n                    className=\"m-2\"\r\n                    color=\"secondary\"\r\n                    onClick={() =>\r\n                      onRejectSubmit(\r\n                        item.quantity,\r\n                        item.subProjectName,\r\n                        item.id\r\n                      )\r\n                    }\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <hr />\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {props.materialReqIssues.length === 0 && (\r\n          <Typography\r\n            style={{ marginBottom: \"2em\", textAlign: \"center\" }}\r\n            variant=\"h5\"\r\n            display=\"block\"\r\n          >\r\n            No pending approvals!\r\n          </Typography>\r\n        )}\r\n        <Grid justify=\"center\" container>\r\n          <Grid item>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              startIcon={<Cancel />}\r\n              size=\"large\"\r\n              onClick={props.toggleMaterialReqComponent}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    loading: state.storeReducer.materialReqLoading,\r\n    materialReqIssues: state.storeReducer.materialReqIssues,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  getMaterialReqIssues,\r\n  approveMaterialReq,\r\n  rejectMaterialReq,\r\n})(ApproveIssue);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Style from \"./style.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport * as userAction from \"../../Redux/loginRedux/loginAction\";\r\nimport {\r\n  Add as AddIcon,\r\n  TransferWithinAStationSharp,\r\n} from \"@material-ui/icons\";\r\nimport * as action from \"../../Redux/checkListRedux/checklistAction\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  withStyles,\r\n  Divider,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { verifyValidity } from \"./checklistUtil\";\r\nimport ChecklistCard from \"./ChecklistCard\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Loading from \"../../Components/Loading\";\r\nconst axios = require(\"axios\");\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport class ActivityChecklist extends Component {\r\n  handleModalOpen = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        modalOpen: !prevState.modalOpen,\r\n      };\r\n    });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const checkRoles = [\r\n      \"senior_engineer\",\r\n      \"quality_engineer\",\r\n      \"safety_engineer\",\r\n      \"super_admin\",\r\n    ];\r\n    const isCheckVisible = checkRoles.find(item => item == role) ? true : false;\r\n\r\n    const approveVisible = [\r\n      \"project_manager\",\r\n      \"quality_engineer\",\r\n      \"safety_engineer\",\r\n      \"super_admin\",\r\n    ];\r\n    const isApproveVisible = approveVisible.find(item => item == role)\r\n      ? true\r\n      : false;\r\n\r\n    const addRoles = [\r\n      \"junior_engineer\",\r\n      \"senior_engineer\",\r\n      \"quality_engineer\",\r\n      \"safety_engineer\",\r\n      \"super_admin\",\r\n    ];\r\n\r\n    const filterValues = [\r\n      { value: \"all\", title: \"All\" },\r\n      { value: \"submitted\", title: \"Submitted\" },\r\n      { value: \"checked\", title: \"Checked\" },\r\n      { value: \"approved\", title: \"Approved\" },\r\n    ];\r\n    const isAddVisible = addRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      role: global.config.secureStorage.getItem(\"role\"),\r\n      isCheckVisible: isCheckVisible,\r\n      isApproveVisible: isApproveVisible,\r\n      isAddVisible: isAddVisible,\r\n      modalOpen: false,\r\n      filter: \"all\",\r\n      filterValues: filterValues,\r\n      approveImage: \"\",\r\n    };\r\n    //\r\n  }\r\n  componentWillMount() {\r\n    this.props.fetchData({\r\n      subprojectId: global.config.secureStorage.getItem(\"subprojectId\"),\r\n      subActivity: this.props.match.params.defaultChecklist,\r\n      type: this.props.match.params.type,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const type = this.props.match.params.type;\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    //\r\n    if (!verifyValidity(role, type)) {\r\n      //\r\n      // global.config.secureStorage.clear();\r\n      this.props.logout();\r\n      this.props.history.replace(\"/login\");\r\n    }\r\n  }\r\n  handelApproveImg = file => {\r\n    // console.log(file);\r\n    this.setState({\r\n      approveImage: file.toString(),\r\n    });\r\n  };\r\n  render() {\r\n    const path = this.props.match.params;\r\n\r\n    if (this.props.loading) {\r\n      return <Loading loading={this.props.loading} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n\r\n        {this.state.isAddVisible && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginTop: \"1.5em\",\r\n              marginRight: \"1em\",\r\n              marginBottom: \"1em\",\r\n            }}\r\n          >\r\n            <Link\r\n              to={`/checklist/${this.props.match.params.type}/${path.defaultChecklist}/addChecklist`}\r\n            >\r\n              <Button startIcon={<AddIcon />} size=\"large\">\r\n                Add Checklist\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <Grid style={{ margin: \"2em 1em 0.5em\" }}>\r\n          <Autocomplete\r\n            defaultValue={\"All\"}\r\n            fullWidth\r\n            id=\"autoComplete\"\r\n            onChange={(event, value) => {\r\n              this.setState({\r\n                filter: value.value,\r\n              });\r\n            }}\r\n            options={this.state.filterValues}\r\n            getOptionLabel={option => option.title}\r\n            renderInput={params => (\r\n              <TextField {...params} label={\"All\"} variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid style={{ padding: \"10px\" }}>\r\n          {(this.state.filter == \"all\" || this.state.filter == \"submitted\") && (\r\n            <>\r\n              <Accordion style={{ width: \"90%\", margin: \"20px auto\" }}>\r\n                <AccordionSummary\r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                  style={{\r\n                    paddingTop: 10,\r\n                    paddingBottom: 10,\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={0}\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\"\r\n                  >\r\n                    <Typography variant=\"h6\">Submitted Checklists</Typography>\r\n                  </Grid>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {this.props.tasks.filter(\r\n                    item => !item.approved && !item.checked\r\n                  ).length == 0 && (\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        No submitted checklist available\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    {this.props.tasks.map((item, index) => {\r\n                      if (item.approved || item.checked) {\r\n                        return;\r\n                      }\r\n\r\n                      return (\r\n                        <ChecklistCard\r\n                          // isAddVisible={this.state.isAddVisible}\r\n                          isApproveVisible={this.state.isApproveVisible}\r\n                          isCheckVisible={this.state.isCheckVisible}\r\n                          checkable={true}\r\n                          item={item}\r\n                          key={index}\r\n                          approveCheckList={this.props.approveCheckList}\r\n                          subActivity={this.props.match.params.defaultChecklist}\r\n                          approvable={true}\r\n                          type={this.props.match.params.type}\r\n                          approveImage={this.state.approveImage}\r\n                          handelApproveImg={this.handelApproveImg}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Divider />\r\n            </>\r\n          )}\r\n\r\n          {(this.state.filter == \"all\" || this.state.filter == \"checked\") && (\r\n            <>\r\n              <Accordion style={{ width: \"90%\", margin: \" 20px auto\" }}>\r\n                <AccordionSummary\r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                  style={{\r\n                    paddingTop: 10,\r\n                    paddingBottom: 10,\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={0}\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\"\r\n                  >\r\n                    <Typography variant=\"h6\">Checked Checklists</Typography>\r\n                  </Grid>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {this.props.tasks.filter(\r\n                    item => !item.approved && item.checked\r\n                  ).length == 0 && (\r\n                    <Grid item style={{ marginLeft: \"0.5em\" }}>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        No checked checklist available\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    {this.props.tasks.map((item, index) => {\r\n                      if (item.approved || !item.checked) {\r\n                        return;\r\n                      }\r\n\r\n                      return (\r\n                        <ChecklistCard\r\n                          isApproveVisible={this.state.isApproveVisible}\r\n                          isCheckVisible={this.state.isCheckVisible}\r\n                          checkable={false}\r\n                          item={item}\r\n                          key={index}\r\n                          approveCheckList={this.props.approveCheckList}\r\n                          subActivity={this.props.match.params.defaultChecklist}\r\n                          approvable={true}\r\n                          type={this.props.match.params.type}\r\n                          approveImage={this.state.approveImage}\r\n                          handelApproveImg={this.handelApproveImg}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Divider />\r\n            </>\r\n          )}\r\n\r\n          {(this.state.filter == \"all\" || this.state.filter == \"approved\") && (\r\n            <>\r\n              <Accordion style={{ width: \"90%\", margin: \" 20px auto\" }}>\r\n                <AccordionSummary\r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                  style={{\r\n                    paddingTop: 10,\r\n                    paddingBottom: 10,\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={0}\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\"\r\n                  >\r\n                    <Typography variant=\"h6\">Approved Checklists</Typography>\r\n                  </Grid>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {this.props.tasks.filter(item => item.approved).length ==\r\n                    0 && (\r\n                    <Grid item style={{ marginLeft: \"0.5em\" }}>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        No approved checklist available\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    {this.props.tasks.map((item, index) => {\r\n                      if (!item.approved) {\r\n                        return;\r\n                      }\r\n\r\n                      return (\r\n                        <ChecklistCard\r\n                          isApproveVisible={this.state.isApproveVisible}\r\n                          isCheckVisible={this.state.isCheckVisible}\r\n                          checkable={false}\r\n                          item={item}\r\n                          key={index}\r\n                          approveCheckList={this.props.approveCheckList}\r\n                          subActivity={this.props.match.params.defaultChecklist}\r\n                          approvable={false}\r\n                          type={this.props.match.params.type}\r\n                          approveImage={this.state.approveImage}\r\n                          handelApproveImg={this.handelApproveImg}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Divider />\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n    error: state.loginReducer.error,\r\n    notifications: state.notifications,\r\n    tasks: state.checkListReducer.tasks,\r\n    loading: state.checkListReducer.loading,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchData: payload => dispatch(action.fetchCheckList(payload)),\r\n    logout: () => dispatch(userAction.logout()),\r\n    approveCheckList: (\r\n      id,\r\n      subprojectId,\r\n      subActivity,\r\n      approveImage,\r\n      type,\r\n      forApproval\r\n    ) =>\r\n      dispatch(\r\n        action.approveCheckList(\r\n          id,\r\n          subprojectId,\r\n          subActivity,\r\n          approveImage,\r\n          type,\r\n          forApproval\r\n        )\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(ActivityChecklist));\r\n\r\n/*\r\n <Grid>\r\n          <Grid item>\r\n            <CardHeader title={this.props.match.params.defaultChecklist} />\r\n          </Grid>\r\n          {this.state.role === \"chief_engineer\" ? (\r\n            <></>\r\n          ) : (\r\n            <Grid item>\r\n              <Typography\r\n                style={{\r\n                  fontSize: \"1.25rem\",\r\n                  marginLeft: \"0.85em\"\r\n                }}\r\n                variant=\"h4\"\r\n              >\r\n                Pending Approvals\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          <Divider />\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            spacing={2}\r\n            style={{ margin: \"0.5em\" }}\r\n          >\r\n            {this.props.tasks.length !== 0 &&\r\n              this.props.tasks.map((ele, index) => {\r\n                if (ele.approved) {\r\n                  return null;\r\n                }\r\n                k1 += 1;\r\n                return (\r\n                  <Grid item key={index}>\r\n                    <ChecklistCard\r\n                      item={ele}\r\n                      approveCheckList={this.props.approveCheckList}\r\n                      subActivity={this.props.match.params.defaultChecklist}\r\n                      approvable={true}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            {k1 === 0 && (\r\n              <Grid item>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  No CheckLists available for approval\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                fontSize: \"1.25rem\",\r\n                marginLeft: \"0.85em\"\r\n              }}\r\n              variant=\"h4\"\r\n            >\r\n              Approved\r\n            </Typography>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            style={{ margin: \"0.5em \" }}\r\n            spacing={2}\r\n          >\r\n            {this.props.tasks !== [] && this.props.tasks.length !== 0 ? (\r\n              this.props.tasks.map((ele, index) => {\r\n                if (!ele.approved) {\r\n                  return null;\r\n                }\r\n                k2 += 1;\r\n                return (\r\n                  <ChecklistCard\r\n                    item={ele}\r\n                    key={index}\r\n                    approveCheckList={this.props.approveCheckList}\r\n                    subActivity={this.props.match.params.defaultChecklist}\r\n                    approvable={false}\r\n                    type={this.props.match.params.type}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {k2 === 0 && (\r\n              <Grid item>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  No approved checklists available\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n*/\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { green, red, cyan } from \"@material-ui/core/colors\";\r\nimport { Save, Close } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport _ from \"lodash\";\r\nimport { logout } from \"../../Redux/loginRedux/loginAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FileBase64 from \"react-file-base64\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n// import PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport {\r\n  addChecklist,\r\n  // getChecklistTasks,\r\n  fetchCheckList,\r\n  getDefaultChecklist,\r\n} from \"../../Redux/checkListRedux/checklistAction\";\r\nimport { verifyValidity } from \"./checklistUtil\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nclass AddChecklist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checklistTitle: \"\",\r\n      // numberOfChecklist: 1,\r\n      allCheckLists: [],\r\n      subChecklist: [],\r\n      projectName: \"\",\r\n      createdDate: new Date().toDateString(),\r\n      location: \"\",\r\n      submittedBy: global.config.secureStorage.getItem(\"username\"),\r\n      checkedBy: \"Senior Engineer\",\r\n      approvedBy: \"Project Manager\",\r\n      count: \"\",\r\n      checklistImage: \"\",\r\n    };\r\n    //\r\n    //\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const type = this.props.match.params.type;\r\n      const role = global.config.secureStorage.getItem(\"role\");\r\n      if (!verifyValidity(role, type)) {\r\n        // global.config.secureStorage.clear();\r\n        this.props.logout();\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n      const visibleRoles = [\r\n        \"junior_engineer\",\r\n        \"quality_engineer\",\r\n        \"senior_engineer\",\r\n        \"safety_engineer\",\r\n        \"super_admin\",\r\n      ];\r\n      if (!visibleRoles.find(item => item == role)) {\r\n        // global.config.secureStorage.clear();\r\n        this.props.logout();\r\n        this.props.history.replace(\"/login\");\r\n        return;\r\n      }\r\n      await this.props.getDefaultChecklist(this.props.match.params.type);\r\n      let defaultChecklist = this.props.defaultChecklist.data,\r\n        findChecklist = this.props.match.params.defaultChecklist;\r\n      let newContent = [];\r\n      if (this.props.defaultChecklist.length !== 0) {\r\n        for (let i = 0; i < defaultChecklist.length; i++) {\r\n          if (defaultChecklist[i].id === findChecklist) {\r\n            newContent = defaultChecklist[i].content;\r\n            break;\r\n          }\r\n        }\r\n        this.setState({\r\n          subChecklist: newContent,\r\n          count: newContent.length,\r\n        });\r\n      }\r\n    } catch (error) {}\r\n  }\r\n  saveCheckList = event => {\r\n    event.preventDefault();\r\n    const id = Date.now();\r\n    const finalChecklist = {\r\n      checklistTitle: this.state.checklistTitle,\r\n      checklistId: id,\r\n      subChecklist: this.state.subChecklist,\r\n      createdDate: this.state.createdDate,\r\n      projectName: this.state.projectName,\r\n      subProjectName: this.state.subProjectName,\r\n      location: this.state.location,\r\n      checkListImage: this.state.checklistImage,\r\n      submittedBy: this.state.submittedBy,\r\n      checkedBy: this.state.checkedBy,\r\n      approvedBy: this.state.approvedBy,\r\n      type: this.props.match.params.type,\r\n    };\r\n\r\n    let newChecklist = [...this.state.allCheckLists, finalChecklist];\r\n    this.setState({\r\n      allCheckLists: newChecklist,\r\n    });\r\n    finalChecklist[\"activityName\"] = this.props.match.params.defaultChecklist;\r\n\r\n    this.props.addChecklist(finalChecklist);\r\n    this.props.fetchCheckList({\r\n      subprojectId: global.config.secureStorage.getItem(\"subprojectId\"),\r\n      subActivity: this.props.match.params.defaultChecklist,\r\n      type: this.props.match.params.type,\r\n    });\r\n    this.props.history.goBack();\r\n  };\r\n  handleRadio = (e, i) => {\r\n    let newAllCheckLists = {\r\n      ...this.state.subChecklist,\r\n    };\r\n    let newChecklist = {\r\n      ...this.state.subChecklist[i],\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    newAllCheckLists[i] = newChecklist;\r\n    this.setState({\r\n      subChecklist: newAllCheckLists,\r\n    });\r\n  };\r\n  handleImage = img => {\r\n    this.setState({\r\n      checklistImage: img,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const GreenRadio = withStyles({\r\n      root: {\r\n        color: green[400],\r\n        \"&$checked\": {\r\n          color: green[600],\r\n        },\r\n      },\r\n      checked: {},\r\n    })(props => <Radio color=\"default\" {...props} />);\r\n    const BlueRadio = withStyles({\r\n      root: {\r\n        color: cyan[700],\r\n        \"&$checked\": {\r\n          color: cyan[700],\r\n        },\r\n      },\r\n      checked: {},\r\n    })(props => <Radio color=\"default\" {...props} />);\r\n    const RedRadio = withStyles({\r\n      root: {\r\n        color: red[400],\r\n        \"&$checked\": {\r\n          color: red[600],\r\n        },\r\n      },\r\n      checked: {},\r\n    })(props => <Radio color=\"default\" {...props} />);\r\n    return (\r\n      <>\r\n        {this.props.loading ? (\r\n          <Loading loading={true} />\r\n        ) : (\r\n          <div>\r\n            {this.props.notifications && (\r\n              <Notifications notifications={this.props.notifications} />\r\n            )}\r\n            <section className={Style.create__checklist}>\r\n              <form onSubmit={this.saveCheckList}>\r\n                <Typography\r\n                  style={{ fontSize: \"1.25rem\" }}\r\n                  variant=\"overline\"\r\n                  display=\"block\"\r\n                >\r\n                  Add New Checklist\r\n                </Typography>\r\n                <hr />\r\n                <TextField\r\n                  name=\"checklistTitle\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  value={this.state.checkListTitle}\r\n                  onChange={this.handleChange}\r\n                  id=\"checklistTitle\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                />\r\n                <br />\r\n                <br />\r\n                <div>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item>\r\n                      <TextField\r\n                        name=\"projectName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        value={this.state.projectName}\r\n                        onChange={this.handleChange}\r\n                        label=\"Project Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        name=\"location\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        value={this.state.location}\r\n                        onChange={this.handleChange}\r\n                        label=\"Location\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <FileBase64\r\n                        multiple={false}\r\n                        className=\"btn\"\r\n                        value={this.state.checklistImage}\r\n                        onDone={file => {\r\n                          // files.forEach(ele => ele.base64);\r\n                          // props.handlePanaroma(file.base64);\r\n                          this.handleImage(file.base64);\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{ fontSize: \"1rem\", marginLeft: \"0.5em\" }}\r\n                        variant=\"overline\"\r\n                        display=\"block\"\r\n                      >\r\n                        <strong>Date :</strong> {this.state.createdDate}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                  {_.times(this.state.count, index => (\r\n                    <div className=\"ml-3 mt-4 mb-4\" key={index}>\r\n                      <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">\r\n                          {index + 1} {\". \"}\r\n                          {this.state.subChecklist[index][\"description\"]}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                          row\r\n                          aria-label=\"gender\"\r\n                          className=\"ml-2\"\r\n                          name=\"type\"\r\n                          value={\r\n                            this.state.subChecklist[index]\r\n                              ? this.state.subChecklist[index][\"type\"]\r\n                                ? this.state.subChecklist[index][\"type\"]\r\n                                : \"\"\r\n                              : \"\"\r\n                          }\r\n                          // value={this.state.subChecklist[index][\"type\"]}\r\n                          onChange={e => this.handleRadio(e, index)}\r\n                        >\r\n                          <FormControlLabel\r\n                            value=\"Ok\"\r\n                            control={<GreenRadio />}\r\n                            label=\"Ok\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"Not Ok\"\r\n                            control={<RedRadio />}\r\n                            label=\"Not ok\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"N.A.\"\r\n                            control={<BlueRadio />}\r\n                            label=\"N.A\"\r\n                          />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <br></br>\r\n                <div className=\"ml-3 mt-2 mb-2\">\r\n                  <Grid container spacing={3}>\r\n                    <br></br>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{ fontSize: \"1rem\" }}\r\n                        variant=\"overline\"\r\n                        display=\"block\"\r\n                      >\r\n                        <strong>Submitted By :</strong> {this.state.submittedBy}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <br></br>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{ fontSize: \"1rem\" }}\r\n                        variant=\"overline\"\r\n                        display=\"block\"\r\n                      >\r\n                        <strong>To Be Checked By :</strong>{\" \"}\r\n                        {this.state.checkedBy}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{ fontSize: \"1rem\" }}\r\n                        variant=\"overline\"\r\n                        display=\"block\"\r\n                      >\r\n                        <strong>To Be Approved By :</strong>{\" \"}\r\n                        {this.state.approvedBy}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                  <Grid item>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      startIcon={<Save />}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        this.props.history.goBack();\r\n                      }}\r\n                      startIcon={<Close />}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </section>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    checklist: state.checkListReducer,\r\n    notifications: state.notifications,\r\n    defaultChecklist: state.checkListReducer.defaultChecklist,\r\n    loading: state.checkListReducer.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addChecklist,\r\n  // getChecklistTasks,\r\n  logout,\r\n  fetchCheckList,\r\n  getDefaultChecklist,\r\n})(AddChecklist);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  getBarChartData,\r\n  saveBarChart,\r\n} from \"../../Redux/BarCharts/barChartAction\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Item from \"./Item\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport editRoles from \"./planningEditRoles\";\r\n\r\nconst BarChart = props => {\r\n  const [data, setData] = useState([]);\r\n  const [csvFile, setCsvFile] = useState();\r\n  const [csvArray, setCsvArray] = useState([]);\r\n  const [sub, setsubmit] = useState(false);\r\n  const [isEditable, setEditable] = useState(() => {\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    return editRoles.find(item => item === role) ? true : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await props.getBarChartData();\r\n    }\r\n    fetchData();\r\n  }, []); //eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    let arr = props.defaultActivityNames;\r\n    for (var i = 0; i < props.defaultActivityNames.length; i++) {\r\n      if (arr[i][3] === -1 || arr[i][3] === \"\") {\r\n        arr[i][3] = 0;\r\n      }\r\n      if (arr[i][4] === -1 || arr[i][4] === \"\") {\r\n        arr[i][4] = 0;\r\n      }\r\n\r\n      arr[i] = [arr[i][0], arr[i][1], arr[i][2], arr[i][3], arr[i][4]];\r\n    }\r\n    setData([...arr]);\r\n  }, [props.defaultActivityNames]);\r\n\r\n  const handleStartDate = (index, date) => {\r\n    if (data.length === 0) {\r\n      setData(props.defaultActivityNames);\r\n    }\r\n    setData(prev => {\r\n      prev[index][1] = date;\r\n      return [...prev];\r\n    });\r\n  };\r\n\r\n  const handleEndDate = (index, date) => {\r\n    if (data.length === 0) {\r\n      setData(props.defaultActivityNames);\r\n    }\r\n    setData(prev => {\r\n      prev[index][2] = date;\r\n      return [...prev];\r\n    });\r\n  };\r\n\r\n  // const handleStartCost = (index, cost) => {\r\n  //   if (data.length === 0) {\r\n  //     setData(props.defaultActivityNames);\r\n  //   }\r\n  //   setData(prev => {\r\n  //     prev[index][3] = cost;\r\n  //     return [...prev];\r\n  //   });\r\n  // };\r\n\r\n  // const handleEndCost = (index, cost) => {\r\n  //   if (data.length === 0) {\r\n  //     setData(props.defaultActivityNames);\r\n  //   }\r\n  //   setData(prev => {\r\n  //     prev[index][4] = cost;\r\n  //     return [...prev];\r\n  //   });\r\n  // };\r\n\r\n  const processCSV = (str, delim = \",\") => {\r\n    console.log(\"string\");\r\n    console.log(str);\r\n    const headers = str.slice(0, str.indexOf(\"\\n\")).trim().split(delim);\r\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\r\n    const newArray = rows.map(row => {\r\n      const values = row.trim().split(delim);\r\n      const eachObject = headers.reduce((obj, header, i) => {\r\n        obj[header] = values[i];\r\n\r\n        return obj;\r\n      }, {});\r\n      return eachObject;\r\n    });\r\n    setCsvArray(newArray);\r\n\r\n    for (var i = 0; i < props.defaultActivityNames.length; i++) {\r\n      if (props.defaultActivityNames[i][0] === newArray[i].Activity) {\r\n        // handleStartCost(i, newArray[i][\"Starting Cost(in Rs)\"]);\r\n        // handleEndCost(i, newArray[i][\"Ending Cost(in Rs)\"]);\r\n        if (newArray[i][\"Start Date\"] !== \"\") {\r\n          var newdate = new Date(newArray[i][\"Start Date\"]);\r\n          var date2 = newdate.toISOString();\r\n          handleStartDate(i, date2);\r\n        }\r\n        if (newArray[i][\"End Date\"] !== \"\") {\r\n          var newdate2 = new Date(newArray[i][\"End Date\"]);\r\n          var date3 = newdate2.toISOString();\r\n          handleEndDate(i, date3);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    setsubmit(true);\r\n    const file = csvFile;\r\n    const reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      const text = e.target.result;\r\n      processCSV(text);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  if (props.loading) {\r\n    return <Loading loading={true}></Loading>;\r\n  }\r\n\r\n  if (props.isError) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100vw\",\r\n          height: \"80vh\",\r\n        }}\r\n      >\r\n        <h2 style={{ textAlign: \"center\" }}>Something Went Wrong!!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Notifications notifications={props.notifications} />\r\n      <Grid container alignItems=\"center\" justify=\"space-between\">\r\n        {/* <Grid item>\r\n          <CardHeader title=\"Bar Chart\" />\r\n        </Grid> */}\r\n        {isEditable && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              // border: \"2px solid red\",\r\n              textAlign: \"end\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                style={{ marginRight: \"12px\" }}\r\n                onClick={async () => {\r\n                  if (data.length === 0) {\r\n                    console.log(data);\r\n                    await props.saveBarChart(props.defaultActivityNames);\r\n                    return;\r\n                  }\r\n                  props.saveBarChart(data);\r\n                }}\r\n                endIcon={<Save />}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button>\r\n                <CSVLink\r\n                  data={[\r\n                    [\r\n                      \"Activity\",\r\n                      \"Start Date\",\r\n                      \"End Date\",\r\n                      // \"Starting Cost(in Rs)\",\r\n                      // \"Ending Cost(in Rs)\",\r\n                    ],\r\n                    ...data,\r\n                  ]}\r\n                  style={{ color: \"white\", textDecoration: \"none\" }}\r\n                  onClick={() => {\r\n                    console.log(data);\r\n                  }}\r\n                >\r\n                  Export\r\n                </CSVLink>\r\n                <GetAppIcon />\r\n              </Button>\r\n              <form id=\"csv-form\">\r\n                <div style={{ marginTop: \"12px\" }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    id=\"csvFile\"\r\n                    onChange={e => {\r\n                      setCsvFile(e.target.files[0]);\r\n                    }}\r\n                  ></input>\r\n                </div>\r\n                <Button\r\n                  onClick={e => {\r\n                    e.preventDefault();\r\n                    if (csvFile) {\r\n                      submit();\r\n                      alert(\"file uploaded successfully\");\r\n                    } else {\r\n                      alert(\"please upload file\");\r\n                    }\r\n                  }}\r\n                >\r\n                  UPLOAD\r\n                </Button>\r\n              </form>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n      {data.map((item, index) => {\r\n        console.log(item);\r\n        return (\r\n          <Item\r\n            isEditable={isEditable}\r\n            key={index}\r\n            name={item[0]}\r\n            startdate={item[1]}\r\n            enddate={item[2]}\r\n            startcost={item[3]}\r\n            endcost={item[4]}\r\n            // handleStartCost={handleStartCost}\r\n            // handleEndCost={handleEndCost}\r\n            handleStartDate={handleStartDate}\r\n            index={index}\r\n            handleEndDate={handleEndDate}\r\n            submit={sub}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultActivityNames: state.barChartReducer.defaultActivityNames,\r\n    loading: state.barChartReducer.loading,\r\n    isError: state.barChartReducer.isError,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBarChartData: () => dispatch(getBarChartData()),\r\n    saveBarChart: data => dispatch(saveBarChart(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst Item = props => {\r\n  const [start, setStart] = useState(false);\r\n  const [end, setEnd] = useState(false);\r\n  const [start2, setStart2] = useState(false);\r\n  const [end2, setEnd2] = useState(false);\r\n  const [startDate, setStartDate] = useState(() => {\r\n    if (props.startdate === null) {\r\n      return new Date();\r\n    }\r\n    return props.startdate;\r\n  });\r\n  const [endDate, setEndDate] = useState(() => {\r\n    if (props.enddate === null) {\r\n      return new Date();\r\n    }\r\n    return props.enddate;\r\n  });\r\n  const [endCost, setEndCost] = useState(() => {\r\n    if (props.endcost === null) {\r\n      return 0;\r\n    }\r\n    return props.endcost;\r\n  });\r\n  const [startCost, setStartCost] = useState(() => {\r\n    if (props.startcost === null) {\r\n      return 0;\r\n    }\r\n    return props.startcost;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      style={{ padding: 20, marginBottom: 15 }}\r\n      elevation={2}\r\n    >\r\n      {/* <CardContent style={{ marginBottom: 5 }}> */}\r\n      <Typography variant=\"h5\">\r\n        <strong>{props.name}</strong>\r\n      </Typography>\r\n      <Divider />\r\n      <Grid container spacing={2}>\r\n        {props.startdate === null && !start ? (\r\n          <Grid\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginTop: \"10px\",\r\n            }}\r\n            item\r\n          >\r\n            {props.isEditable ? (\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  props.handleStartDate(props.index, new Date());\r\n                  setStart(true);\r\n                }}\r\n              >\r\n                Add Start Date\r\n              </Button>\r\n            ) : (\r\n              <Typography>\r\n                <strong>Start Date :</strong> Not available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        ) : (\r\n          <Grid\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginTop: \"15px\",\r\n            }}\r\n            item\r\n          >\r\n            <Typography>\r\n              <strong>Start Date :</strong>\r\n            </Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disabled={!props.isEditable}\r\n                disableToolbar\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"none\"\r\n                id=\"date-picker-inline\"\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                value={props.startdate}\r\n                placeholder=\"Not available\"\r\n                onChange={date => {\r\n                  setStartDate(date);\r\n                  props.handleStartDate(props.index, date);\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        )}\r\n\r\n        {props.enddate === null && !end ? (\r\n          <Grid\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n            item\r\n          >\r\n            {props.isEditable ? (\r\n              <Button\r\n                style={{ marginTop: \"11px\" }}\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  props.handleEndDate(props.index, new Date());\r\n                  setEnd(true);\r\n                }}\r\n              >\r\n                Add End date\r\n              </Button>\r\n            ) : (\r\n              <Typography>\r\n                <strong>End Date :</strong> Not available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        ) : (\r\n          <Grid\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginTop: \"15px\",\r\n            }}\r\n            item\r\n          >\r\n            <Typography>\r\n              <strong>End Date :</strong>\r\n            </Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                disabled={!props.isEditable}\r\n                format=\"dd/MM/yyyy\"\r\n                minDate={startDate}\r\n                margin=\"none\"\r\n                id=\"date-picker-inline\"\r\n                value={props.enddate}\r\n                placeholder=\"Not available\"\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                onChange={date => {\r\n                  setEndDate(date);\r\n                  props.handleEndDate(props.index, date);\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      {/* cost */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport { CardHeader, Typography, Grid, Button } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport EditCompletion from \"./EditCompletion\";\r\nimport Activity from \"./Activity\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getActivities,\r\n  updateActivity,\r\n} from \"../../Redux/monitoringRedux/monitoringAction\";\r\nimport editRoles from \"../BarChart/planningEditRoles\";\r\nimport TableMonitoring from \"./TableMonitoring\";\r\nimport { CloudDownload } from \"@material-ui/icons\";\r\n\r\nclass Monitoring extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      activityName: \"\",\r\n      estimatedcompletion: \"\",\r\n      actualcompletion: \"\",\r\n      actualcompletion_by_cost: \"\",\r\n      estimatedcompletion_by_cost: \"\",\r\n      isEditCompletion: false,\r\n      loading: true,\r\n      index: -1,\r\n      activities: [],\r\n      isEditable: isEditable,\r\n      isOpenTable: false,\r\n      cost: \"\",\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.getActivities();\r\n    } catch (error) {}\r\n  }\r\n\r\n  editActivity = (name, index) => {\r\n    this.setState({\r\n      editActivityName: name,\r\n      index: index,\r\n      activities: this.props.monitoring,\r\n    });\r\n    const Activity = this.props.monitoring.find(Activity => {\r\n      return Activity.title === name;\r\n    });\r\n    this.setState({\r\n      isEditCompletion: !this.state.isEditCompletion,\r\n      activityName: Activity.title,\r\n      estimatedcompletion: Activity.estimatedcompletion,\r\n      actualcompletion: Activity.actualcompletion,\r\n      actualcompletion_by_cost: Activity.actualcompletion_by_cost,\r\n      estimatedcompletion_by_cost: Activity.estimatedcompletion_by_cost,\r\n    });\r\n  };\r\n  handleClick = () => {\r\n    this.setState({ isEditCompletion: !this.state.isEditCompletion });\r\n  };\r\n\r\n  handleSubmit = async index => {\r\n    if (this.state.activities.length == 0) {\r\n      await this.setState({\r\n        activities: this.props.monitoring,\r\n      });\r\n    }\r\n\r\n    var data = this.state.activities;\r\n    var prev = data[index];\r\n    prev = {\r\n      ...prev,\r\n      actualcompletion: this.state.actualcompletion,\r\n    };\r\n    data[index] = prev;\r\n    this.setState({\r\n      activities: data,\r\n      isEditCompletion: false,\r\n    });\r\n    this.props.updateActivity(data);\r\n  };\r\n\r\n  toggleOpenTable = () => {\r\n    this.setState({ isOpenTable: !this.state.isOpenTable });\r\n  };\r\n\r\n  toggleCloseTable = () => {\r\n    this.setState({ isOpenTable: false });\r\n  };\r\n  handleChange = event => {\r\n    if (this.state.activities.length == 0) {\r\n      this.setState({\r\n        activities: this.props.monitoring,\r\n      });\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  handleRemark = async (remark, index) => {\r\n    if (this.state.activities.length == 0) {\r\n      await this.setState({\r\n        activities: this.props.monitoring,\r\n      });\r\n    }\r\n    //\r\n    const newActivities = this.state.activities.map((activity, i) => {\r\n      if (i === index) {\r\n        const change = { ...activity, remark: remark };\r\n        return change;\r\n      }\r\n      return activity;\r\n    });\r\n    this.props.updateActivity(newActivities);\r\n\r\n    //\r\n    this.setState({\r\n      activities: newActivities,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isEditCompletion } = this.state;\r\n    if (isEditCompletion) {\r\n      return (\r\n        <EditCompletion\r\n          activityName={this.state.activityName}\r\n          estimatedcompletion={this.state.estimatedcompletion}\r\n          actualcompletion={this.state.actualcompletion}\r\n          actualcompletion_by_cost={this.state.actualcompletion_by_cost}\r\n          estimatedcompletion_by_cost={this.state.estimatedcompletion_by_cost}\r\n          handleClick={this.handleClick}\r\n          handleChange={this.handleChange}\r\n          index={this.state.index}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n      );\r\n    }\r\n    const { isOpenTable } = this.state;\r\n\r\n    if (isOpenTable) {\r\n      return (\r\n        <TableMonitoring\r\n          title=\"Monitoring\"\r\n          subtitle=\"Monitoring table\"\r\n          toggleCloseTable={this.toggleCloseTable}\r\n          monitoring={this.props.monitoring}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (!isOpenTable) {\r\n      return (\r\n        <div>\r\n          {this.props.notifications && (\r\n            <Notifications notifications={this.props.notifications} />\r\n          )}\r\n          {this.props.loading ? (\r\n            <Loading loading={true} />\r\n          ) : (\r\n            <>\r\n              <div>\r\n                {this.props.monitoring.length != 0 && (\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    style={{ margin: \"10px\" }}\r\n                    justify=\"flex-end\"\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        style={{\r\n                          marginRight: \"1em\",\r\n                          backgroundColor: \"#4a934a\",\r\n                        }}\r\n                        onClick={this.toggleOpenTable}\r\n                        size=\"large\"\r\n                        startIcon={<CloudDownload />}\r\n                      >\r\n                        Generate PDF\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                {this.props.monitoring.length === 0 && (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"100vw\",\r\n                      height: \"80vh\",\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      color=\"textSecondary\"\r\n                      style={{ marginLeft: \"0.5em\", textAlign: \"center\" }}\r\n                    >\r\n                      Bar chart not filled yet\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n\r\n                <section className={Style.all__activity}>\r\n                  <div>\r\n                    {this.props.monitoring.map((activity, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Activity\r\n                            isEditable={this.state.isEditable}\r\n                            editActivity={this.editActivity}\r\n                            activityName={activity.title}\r\n                            estimatedcompletion={activity.estimatedcompletion}\r\n                            actualcompletion={activity.actualcompletion}\r\n                            estimatedcompletion_by_cost={\r\n                              activity.estimatedcompletion_by_cost\r\n                            }\r\n                            actualcompletion_by_cost={\r\n                              activity.actualcompletion_by_cost\r\n                            }\r\n                            index={index}\r\n                            activityRemark={activity.remark}\r\n                            addRemark={this.handleRemark}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </section>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    loading: state.monitoringReducer.loading,\r\n    monitoring: state.monitoringReducer.monitoring,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getActivities, updateActivity })(\r\n  Monitoring\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField, Grid, Typography } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Update, Cancel } from \"@material-ui/icons\";\r\n\r\nconst EditCompletion = ({\r\n  activityName,\r\n  estimatedcompletion,\r\n  actualcompletion,\r\n  handleClick,\r\n  handleChange,\r\n  handleSubmit,\r\n  index\r\n}) => {\r\n  return (\r\n    <>\r\n      <section className={Style.create__activity}>\r\n        <form>\r\n          <Typography\r\n            style={{ fontSize: \"1rem\" }}\r\n            variant=\"overline\"\r\n            display=\"block\"\r\n          >\r\n            Edit Completion - {activityName}\r\n          </Typography>\r\n          <hr />\r\n          <br />\r\n          <TextField\r\n            name=\"activityName\"\r\n            value={activityName}\r\n            variant=\"outlined\"\r\n            disabled={true}\r\n            required\r\n            fullWidth\r\n            id=\"activity\"\r\n            label=\"Activity\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"estimatedcompletion\"\r\n            value={estimatedcompletion}\r\n            variant=\"outlined\"\r\n            disabled={true}\r\n            required\r\n            fullWidth\r\n            id=\"estimatedCompletion\"\r\n            label=\"Estimated Completion\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"actualcompletion\"\r\n            value={actualcompletion}\r\n            onChange={handleChange}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"actualCompletion\"\r\n            label=\"Actual Completion\"\r\n            type=\"number\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                startIcon={<Update />}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                onClick={e => handleSubmit(index)}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                startIcon={<Cancel />}\r\n                size=\"large\"\r\n                onClick={handleClick}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default EditCompletion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Typography, Snackbar, Slide } from \"@material-ui/core\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst TableMonitoring = ({ monitoring, toggleCloseTable }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  const columns = [\r\n    {\r\n      name: \"activityName\",\r\n      label: \"Activity Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"estimatedcompletion\",\r\n      label: \"Estimated Completion\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"actualcompletion\",\r\n      label: \"Actual Completion\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name:\"actualcompletion_by_cost\",\r\n      label:\"Actual Completion by Cost\",\r\n      options:{\r\n        filter:true,\r\n        sort:true,\r\n      },\r\n    },\r\n    {\r\n      name:\"estimatedcompletion_by_cost\",\r\n      label:\"Estimated Completion by Cost\",\r\n      options:{\r\n        filter:true,\r\n        sort:true,\r\n\r\n    },\r\n  },\r\n    {\r\n      name: \"remarks\",\r\n      label: \"Remarks\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    const tempData = [];\r\n    {\r\n      monitoring.map(elem => {\r\n        let remark = \"-\";\r\n        if (elem.remark) {\r\n          remark = elem.remark;\r\n        }\r\n        tempData.push({\r\n          activityName: elem.title,\r\n          estimatedcompletion: elem.estimatedcompletion,\r\n          actualcompletion: elem.actualcompletion,\r\n          remarks: remark,\r\n          actualcompletion_by_cost: elem.actualcompletion_by_cost,\r\n          estimatedcompletion_by_cost: elem.estimatedcompletion_by_cost,\r\n          \r\n        });\r\n      });\r\n    }\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    axios\r\n      .get(`${global.config.backendURL}/project/getProjectInfo/${projectId}`)\r\n      .then(res => setProjectName(res.data.projectName))\r\n      .catch(e => console.log(e));\r\n\r\n    setData(tempData);\r\n    setLoading(false);\r\n  }, []);\r\n  const subprojectName = global.config.secureStorage.getItem(\"subProjectName\");\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <>\r\n          <Grid item container justify=\"center\" className=\"mt-4\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<KeyboardBackspaceIcon />}\r\n              onClick={toggleCloseTable}\r\n            >\r\n              Go back\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid container justify=\"center\">\r\n            <Grid item lg={6}>\r\n              <center style={{ marginTop: \"1.5em\" }}>\r\n                <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n                  <strong>Project: </strong>\r\n                  {projectName}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n                  <strong>Sub Project: </strong>\r\n                  {subprojectName}\r\n                </Typography>\r\n              </center>\r\n              <center>\r\n                <button\r\n                  className=\"btn-warning btn mt-3 mb-3 generatePDF\"\r\n                  onClick={() => {\r\n                    window.print();\r\n                  }}\r\n                >\r\n                  Download PDF\r\n                </button>\r\n              </center>\r\n              <div style={{ margin: \"0 20px\" }} className=\"mt-4 mb-4\">\r\n                <MUIDataTable\r\n                  title={`Montioring Table`}\r\n                  columns={columns}\r\n                  data={data}\r\n                  options={{\r\n                    selectableRows: false,\r\n                    responsive: \"simple\",\r\n                    pagination: false,\r\n                    download: false,\r\n                    viewColumns: false,\r\n                    filter: false,\r\n                    print: false,\r\n                    search: false,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(TableMonitoring);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getUsers } from \"../../Redux/projectRedux/projectAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport userRoleOptions from \"../NewProject/userRoles\";\r\nimport { editUserNotificationUtil } from \"../../Redux/projectRedux/projectAction\";\r\n\r\nimport _ from \"lodash\";\r\nimport {\r\n  Button,\r\n  //   Typography,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nimport axios from \"axios\";\r\n// import Loading from \"../../Components/Loading\";\r\nimport {\r\n  AddCircleOutline,\r\n  DeleteOutlined,\r\n  Add,\r\n  Save,\r\n} from \"@material-ui/icons\";\r\n\r\nfunction EditUser(props) {\r\n  const [state, setState] = useState({\r\n    userNumber: 1,\r\n    totalUsers: [],\r\n    users: [],\r\n    value: \"\",\r\n    loadingRoles: true,\r\n  });\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [tempUserRoles, setTempUserRoles] = useState([]);\r\n  const [tempUsers, setTempUsers] = useState([]);\r\n  const loading = open && state.users.length === 0;\r\n  const [update, setUpdate] = useState(true);\r\n  const [mainLoading, setMainLoading] = useState(true);\r\n  const [refreshPage, setRefreshPage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${global.config.backendURL}/users/getUsers`\r\n        );\r\n        if (active) {\r\n          setState(prev => ({ ...prev, users: response.data }));\r\n        }\r\n      } catch (error) {}\r\n    })();\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setState(prev => ({ ...prev, users: [] }));\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const loadUser = async (notify = false) => {\r\n    try {\r\n      // fetching directly from backend\r\n      const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n      const responseUsers = await axios.get(\r\n        `${global.config.backendURL}/users/getUsers`\r\n      );\r\n\r\n      setState(prev => ({ ...prev, users: responseUsers.data }));\r\n      const res = await axios.get(\r\n        `${global.config.backendURL}/project/getUserRolesByProjectId/${projectId}`\r\n      );\r\n      const temp = res.data.totalUsers;\r\n      var users = temp.map(item => {\r\n        return responseUsers.data.find(newItem => newItem._id === item.user);\r\n      });\r\n      setTempUsers(users);\r\n      //\r\n      var roles = temp.map(item => {\r\n        return userRoleOptions.find(newItem => item.role === newItem.key);\r\n      });\r\n      setTempUserRoles(roles);\r\n      setState(prev => ({\r\n        ...prev,\r\n        totalUsers: res.data.totalUsers,\r\n        userNumber: res.data.userNumber,\r\n      }));\r\n      setMainLoading(false);\r\n      if (notify) {\r\n        props.editUserNotificationUtil(true);\r\n      }\r\n    } catch (err) {\r\n      //\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const userList = {\r\n      userNumber: state.userNumber,\r\n      totalUsers: state.totalUsers,\r\n    };\r\n    try {\r\n      //\r\n      const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n      //\r\n      setMainLoading(true);\r\n      await axios.post(\r\n        `${global.config.backendURL}/project/editUsers/${projectId}`,\r\n        userList\r\n      );\r\n      loadUser(true);\r\n    } catch (error) {\r\n      props.editUserNotificationUtil(false);\r\n    }\r\n  };\r\n\r\n  const handleUsers = (event, value, index) => {\r\n    if (!value) return;\r\n    let tem = [...tempUsers];\r\n    tem[index] = value;\r\n    setTempUsers(tem);\r\n    let tempReference = [...state.totalUsers];\r\n    let tempData = {};\r\n    tempData = {\r\n      ...state.totalUsers[index],\r\n      user: value ? value._id : \"\",\r\n      name: value.firstName + \" \" + value.lastName,\r\n      username: value.username,\r\n    };\r\n    tempReference[index] = tempData;\r\n\r\n    setState({\r\n      ...state,\r\n      totalUsers: tempReference,\r\n    });\r\n  };\r\n  const handleUserRoles = (event, value, index) => {\r\n    var temp = tempUserRoles;\r\n\r\n    temp[index] = value;\r\n    setTempUserRoles(temp);\r\n    let tempReference = [...state.totalUsers];\r\n    let tempData = {};\r\n    tempData = {\r\n      ...state.totalUsers[index],\r\n      role: value.key,\r\n    };\r\n    tempReference[index] = tempData;\r\n\r\n    setState({\r\n      ...state,\r\n      totalUsers: tempReference,\r\n    });\r\n  };\r\n\r\n  if (mainLoading) {\r\n    return <Loading loading={mainLoading} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-2\">\r\n      {props.notifications && (\r\n        <Notifications notifications={props.notifications} />\r\n      )}\r\n\r\n      {!mainLoading ? (\r\n        <Grid container>\r\n          {_.times(state.userNumber, index => {\r\n            let tempIndex = index + 1;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  className=\"mt-2 mb-1\"\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={5}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Autocomplete\r\n                      value={tempUsers[index] ? tempUsers[index] : null}\r\n                      fullWidth\r\n                      onOpen={() => {\r\n                        setOpen(true);\r\n                      }}\r\n                      onClose={() => {\r\n                        setOpen(false);\r\n                      }}\r\n                      id=\"autoComplete\"\r\n                      onChange={(event, value) =>\r\n                        handleUsers(event, value, index)\r\n                      }\r\n                      options={state.users}\r\n                      getOptionLabel={option =>\r\n                        option.firstName + \" \" + option.lastName\r\n                      }\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          label={\"Select User \" + tempIndex}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5}>\r\n                    <Autocomplete\r\n                      value={tempUserRoles[index] ? tempUserRoles[index] : null}\r\n                      fullWidth\r\n                      name={\"userRole\" + index}\r\n                      onOpen={() => {\r\n                        setOpen(true);\r\n                      }}\r\n                      onClose={() => {\r\n                        setOpen(false);\r\n                      }}\r\n                      id=\"autoUser\"\r\n                      onChange={(event, value) => {\r\n                        // //\r\n                        handleUserRoles(event, value, index);\r\n                      }}\r\n                      onInputChange={(event, value) => {\r\n                        // //\r\n                      }}\r\n                      options={userRoleOptions}\r\n                      getOptionLabel={option => option.value}\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          {...params}\r\n                          value={\r\n                            tempUserRoles[index]\r\n                              ? tempUserRoles[index].value\r\n                              : undefined\r\n                          }\r\n                          label={\"Role of User \" + tempIndex}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      className=\"mt-3 mb-2\"\r\n                      style={{\r\n                        color: \"red\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        if (state.userNumber === 1) {\r\n                          return;\r\n                        }\r\n                        var temp2 = tempUserRoles;\r\n                        temp2.splice(index, 1);\r\n                        setTempUserRoles(temp2);\r\n                        temp2 = tempUsers;\r\n                        temp2.splice(index, 1);\r\n                        setTempUsers(temp2);\r\n                        var temp = state.totalUsers;\r\n                        if (state.totalUsers[index]) {\r\n                          temp.splice(index, 1);\r\n                        }\r\n                        setState(state => {\r\n                          return {\r\n                            ...state,\r\n                            totalUsers: temp,\r\n                            userNumber: state.userNumber - 1,\r\n                          };\r\n                        });\r\n                        console.table(state.totalUsers);\r\n                        setRefreshPage(prev => !prev);\r\n                      }}\r\n                    >\r\n                      <DeleteOutlined />\r\n                      <span>Delete User</span>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container>\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#D0D0D0\",\r\n                        height: \"0.1px\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    ></div>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n          {/* Adding new User */}\r\n          <Grid container direction=\"column\" className=\"mt-3 mb-4\">\r\n            <Grid item>\r\n              <Button\r\n                onClick={() => {\r\n                  setState(state => {\r\n                    return {\r\n                      ...state,\r\n                      userNumber: state.userNumber + 1,\r\n                    };\r\n                  });\r\n                }}\r\n                variant=\"outlined\"\r\n                startIcon={<AddCircleOutline />}\r\n              >\r\n                Add new User\r\n              </Button>\r\n            </Grid>\r\n            <center>\r\n              <Grid className=\"mt-4\" item>\r\n                <Button onClick={() => onSubmit()} startIcon={<Save />}>\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </center>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Loading loading={props.loading} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    notifications: state.notifications,\r\n    userRolesLoading: state.projectReducer.userRolesLoading,\r\n    userRoles: state.projectReducer.userRoles,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUsers,\r\n  editUserNotificationUtil,\r\n})(EditUser);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useForm, Form } from \"./Form\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Input from \"./Input\";\r\nimport FormButton from \"./FormButton\";\r\nimport { setTimeout } from \"timers\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nconst initialFValues = {\r\n  id: 0,\r\n  fullname: \"\",\r\n  email: \"\",\r\n  mobile: \"\",\r\n};\r\n\r\nexport default function Visitor({ waitBeforeShow = 3000 }) {\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const addorEdit = (user, resetForm) => {\r\n    resetForm();\r\n    setRecordForEdit(null);\r\n  };\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"fullname\" in fieldValues)\r\n      temp.fullname = fieldValues.fullname ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      (temp.email = /$^|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\") ||\r\n        (temp.email = fieldValues.email ? \"\" : \"This field is required.\");\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile =\r\n        fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 digits required.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\r\n  };\r\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\r\n    useForm(initialFValues, true, validate);\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShow(true);\r\n    }, waitBeforeShow);\r\n  }, [waitBeforeShow]);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      addorEdit(values, resetForm);\r\n      setShow(false);\r\n      const data = {\r\n        fullname: values.fullname,\r\n        email: values.email,\r\n        mobile: values.mobile,\r\n      };\r\n      axios.post(`${global.config.backendURL}/visitors`, data);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (recordForEdit != null)\r\n      setValues({\r\n        ...recordForEdit,\r\n      });\r\n  }, [recordForEdit]);\r\n  return (\r\n    <>\r\n      <Modal style={{ marginTop: 200 }} show={show} id=\"modal\">\r\n        <Modal.Header>\r\n          <Modal.Title style={{ fontFamily: \"Averia Serif Libre\" }}>\r\n            <strong> Enbuild </strong>\r\n          </Modal.Title>\r\n          <IconButton style={{ outline: \"none\" }} onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Grid align=\"center\">\r\n              <Grid align=\"center\" item xs={10}>\r\n                <Input\r\n                  name=\"fullname\"\r\n                  label=\"Full Name*\"\r\n                  value={values.fullname}\r\n                  onChange={handleInputChange}\r\n                  error={errors.fullname}\r\n                />\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email*\"\r\n                  value={values.email}\r\n                  onChange={handleInputChange}\r\n                  error={errors.email}\r\n                />\r\n                <Input\r\n                  name=\"mobile\"\r\n                  label=\"Mobile Number*\"\r\n                  value={values.mobile}\r\n                  onChange={handleInputChange}\r\n                  error={errors.mobile}\r\n                />\r\n                <div>\r\n                  <Button type=\"submit\" style={{ margin: \"10px\" }} size=\"large\">\r\n                    <strong>Submit</strong>\r\n                  </Button>\r\n                  <Button\r\n                    color=\"default\"\r\n                    onClick={resetForm}\r\n                    style={{ margin: \"10px\" }}\r\n                    size=\"large\"\r\n                  >\r\n                    <strong>Reset</strong>\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  withStyles,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Snackbar,\r\n  Slide,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CachedOutlined,\r\n  ThumbDown,\r\n  ThumbUp,\r\n  Visibility,\r\n} from \"@material-ui/icons\";\r\nimport { Alert, Autocomplete } from \"@material-ui/lab\";\r\n\r\nfunction AdminDashboard(props) {\r\n  const [users, setUsers] = useState([]);\r\n  const [updatedusers, setUpdatedUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openApproveSuccess, setOpenApproveSuccess] = useState(false);\r\n  const [openRejectSuccess, setOpenRejectSuccess] = useState(false);\r\n  const [openApproveFailure, setOpenApproveFailure] = useState(false);\r\n  const [openRejectFailure, setOpenRejectFailure] = useState(false);\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [value, setValue] = useState(null);\r\n  const username = global.config.secureStorage.getItem(\"username\");\r\n  let tempusers = [];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleApprove = (approved, id, organization) => {\r\n    axios\r\n      .put(`${global.config.backendURL}/users/approveAdmin`, {\r\n        id: id,\r\n        approved: approved,\r\n      })\r\n      .then(() => {\r\n        let updatedusers = users;\r\n        let userindex = updatedusers.findIndex(ele => ele.id == id);\r\n        updatedusers.splice(userindex, 1);\r\n        setUsers(updatedusers);\r\n        updatedusers = updatedusers.filter(\r\n          user => user.organization === value.title\r\n        );\r\n        setUpdatedUsers(updatedusers);\r\n        if (updatedusers.length == 0) {\r\n          setUpdatedUsers(users);\r\n          setValue(null);\r\n          let temporganizations = organizations;\r\n          temporganizations = temporganizations.filter(\r\n            org => org.title != organization\r\n          );\r\n          setOrganizations(temporganizations);\r\n        }\r\n        if (approved) {\r\n          setOpenApproveSuccess(true);\r\n        } else {\r\n          setOpenRejectSuccess(true);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        if (approved) {\r\n          setOpenApproveFailure(true);\r\n        } else {\r\n          setOpenRejectFailure(true);\r\n        }\r\n      });\r\n  };\r\n  const handleRequests = () => {\r\n    if (value == null) {\r\n      setUpdatedUsers(users);\r\n      return;\r\n    } else {\r\n      let temp = users;\r\n      temp = temp.filter(user => user.organization === value.title);\r\n      setUpdatedUsers(temp);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = () => {\r\n    let isMainAdmin = global.config.secureStorage.getItem(\"main_admin\");\r\n    if (isMainAdmin === false) {\r\n      props.history.push(\"/\");\r\n    }\r\n    axios\r\n      .get(`${global.config.backendURL}/users/getUsers`)\r\n      .then(res => {\r\n        res.data.map(user => {\r\n          if (user.requestAdmin === true) {\r\n            const newuser = {\r\n              id: user._id,\r\n              firstName: user.firstName,\r\n              lastName: user.lastName,\r\n              organization: user.organization,\r\n            };\r\n            tempusers.push(newuser);\r\n          }\r\n        });\r\n        setUsers(tempusers);\r\n        setUpdatedUsers(tempusers);\r\n      })\r\n      .catch(e => console.log(e));\r\n    axios\r\n      .get(`${global.config.backendURL}/users/getOrganizations`)\r\n      .then(res => {\r\n        setOrganizations(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  function TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n  const CssTextField = withStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root.Mui-disabled\": {\r\n        \"& fieldset\": {\r\n          borderColor: \"#2e86ab\",\r\n        },\r\n      },\r\n      \"& .MuiInputBase-root.Mui-disabled\": {\r\n        color: \"rgba(0, 0, 0, 0.8)\",\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\n  if (loading) {\r\n    return <Loading loading={loading} />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Typography\r\n        className=\"mt-5 d-flex justify-content-center align-items-center\"\r\n        variant=\"overline\"\r\n        color=\"textSecondary\"\r\n        style={{ textAlign: \"center\", fontSize: \"1.5em\" }}\r\n      >\r\n        <strong>Admin Status Approval</strong>\r\n      </Typography>\r\n      <Snackbar\r\n        open={openApproveSuccess}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenApproveSuccess(false)}\r\n      >\r\n        <Alert\r\n          severity=\"success\"\r\n          onClose={() => setOpenApproveSuccess(false)}\r\n          style={{ borderTop: \"5px solid green\" }}\r\n        >\r\n          <div style={{ color: \"green\" }}>\r\n            <strong>Success</strong>\r\n          </div>\r\n          Approval successful!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={openRejectSuccess}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenRejectSuccess(false)}\r\n      >\r\n        <Alert\r\n          severity=\"success\"\r\n          onClose={() => setOpenRejectSuccess(false)}\r\n          style={{ borderTop: \"5px solid green\" }}\r\n        >\r\n          <div style={{ color: \"green\" }}>\r\n            <strong>Success</strong>\r\n          </div>\r\n          Rejection successful!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={openApproveFailure}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenApproveFailure(false)}\r\n      >\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => setOpenApproveFailure(false)}\r\n          style={{ borderTop: \"5px solid red\" }}\r\n        >\r\n          <div style={{ color: \"red\" }}>\r\n            <strong>Error</strong>\r\n          </div>\r\n          Error in approval!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={openRejectFailure}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenRejectFailure(false)}\r\n      >\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => setOpenRejectFailure(false)}\r\n          style={{ borderTop: \"5px solid red\" }}\r\n        >\r\n          <div style={{ color: \"red\" }}>\r\n            <strong>Error</strong>\r\n          </div>\r\n          Error in rejection!\r\n        </Alert>\r\n      </Snackbar>\r\n      {users.length === 0 ? (\r\n        <Typography\r\n          className=\"mt-5 d-flex justify-content-center align-items-center\"\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n          style={{ textAlign: \"center\", fontSize: \"1.5em\" }}\r\n        >\r\n          No Pending Requests!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Autocomplete\r\n                value={value}\r\n                onChange={(event, newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n                options={organizations}\r\n                getOptionLabel={option => option.title}\r\n                style={{\r\n                  width: \"220px\",\r\n                  marginTop: \"1em\",\r\n                  marginBottom: \"1em\",\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Organizations\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Load Requests\">\r\n                <IconButton\r\n                  onClick={() => handleRequests()}\r\n                  color=\"primary\"\r\n                  style={{\r\n                    margin: \"1em\",\r\n                    marginTop: \"0.75em\",\r\n                  }}\r\n                >\r\n                  <CachedOutlined />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n          <div\r\n            style={{\r\n              maxHeight: \"350px\",\r\n              overflowY: \"scroll\",\r\n              overflowX: \"hidden\",\r\n            }}\r\n          >\r\n            {updatedusers.map((user, index) => (\r\n              <React.Fragment key={index}>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  justify=\"center\"\r\n                  style={{\r\n                    marginTop: \"2em\",\r\n                  }}\r\n                >\r\n                  <Grid item lg={3} xs={4}>\r\n                    <CssTextField\r\n                      label=\"Name\"\r\n                      defaultValue={`${user.firstName} ${user.lastName}`}\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3} xs={4}>\r\n                    <CssTextField\r\n                      label=\"Organization\"\r\n                      defaultValue={user.organization}\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={2}>\r\n                    <Tooltip title=\"Approve\">\r\n                      <IconButton\r\n                        style={{ color: \"#4a934a\" }}\r\n                        onClick={() =>\r\n                          handleApprove(true, user.id, user.organization)\r\n                        }\r\n                      >\r\n                        <ThumbUp />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={2}>\r\n                    <Tooltip title=\"Reject\">\r\n                      <IconButton\r\n                        color=\"secondary\"\r\n                        onClick={() =>\r\n                          handleApprove(false, user.id, user.organization)\r\n                        }\r\n                      >\r\n                        <ThumbDown />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        style={{ marginTop: \"50px\", marginBottom: \"25px\" }}\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname: \"/projectList\",\r\n            state: username,\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            startIcon={<Visibility />}\r\n          >\r\n            <strong>View Projects</strong>\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminDashboard);\r\n","import {\r\n  ADD_LOADING,\r\n  MATERIAL_SUCCESS,\r\n  MATERIAL_FAILURE,\r\n  GET_MATERIAL,\r\n  GET_STORE_FAILURE,\r\n  GET_STORE_SUCCESS,\r\n  ADD_ISSUE_HISTORY_LOADING,\r\n  ISSUE_HISTORY_ERROR,\r\n  ISSUE_HISTORY_SUCCESS,\r\n  ADD_ISSUE,\r\n  MATERIALS_LIST_LOADING,\r\n  MATERIALS_LIST_FAILURE,\r\n  MATERIALS_LIST_SUCCESS,\r\n  ADD_MATERIAL_REQ,\r\n  MATERIAL_REQ_LOADING,\r\n  MATERIAL_REQ_SUCCESS,\r\n  MATERIAL_REQ_ERROR,\r\n  REJECT_MATERIAL_REQ,\r\n} from \"./storeActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Material added successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successNotificationIssue = {\r\n  title: \"Success\",\r\n  message: \"Material issued successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successMaterialReq = {\r\n  title: \"Success\",\r\n  message: \"Material successfully sent for approval!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successMaterialReqApproval = {\r\n  title: \"Success\",\r\n  message: \"Material issued succesfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst successMaterialReqRejection = {\r\n  title: \"Success\",\r\n  message: \"Material requisition rejected succesfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nexport const getStore = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/stores/getStore/${id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_STORE_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_STORE_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const getMaterial = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/material/getMaterial/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_MATERIAL,\r\n      payload: response.data,\r\n    });\r\n    dispatch({\r\n      type: MATERIAL_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addMaterial = material => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  material[\"projectId\"] = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    await axios.post(\r\n      `${global.config.backendURL}/material/addMaterial`,\r\n      material\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_SUCCESS,\r\n    });\r\n    dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const updateMaterial = (materialID, material) => async dispatch => {\r\n  material[\"projectId\"] = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.put(\r\n      `${global.config.backendURL}/material/updateMaterial/${materialID}`,\r\n      material\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const updateStore = data => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/stores/updateStore`, {\r\n      id: data._id,\r\n      data,\r\n    });\r\n    dispatch(getStore());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_STORE_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const addDeliveryDate = (materialID, material) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.patch(\r\n      `${global.config.backendURL}/material/addDeliveryDate/${materialID}/${projectId}`,\r\n      { material }\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = id => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.delete(\r\n      `${global.config.backendURL}/material/deleteMaterial/${id}`\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addIssue = (id, data) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/stores/issueHistory`, {\r\n      projectId,\r\n      id,\r\n      data,\r\n    });\r\n    dispatch({\r\n      type: ADD_ISSUE,\r\n    });\r\n    dispatch(getStore());\r\n    dispatch(Notifications.success(successNotificationIssue));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ADD_ISSUE,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const getIssues = id => async dispatch => {\r\n  dispatch({\r\n    type: ADD_ISSUE_HISTORY_LOADING,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `${global.config.backendURL}/stores/issueHistory/${id}`\r\n    );\r\n    dispatch({\r\n      type: ISSUE_HISTORY_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ISSUE_HISTORY_ERROR,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const getMaterialReqIssues = id => async dispatch => {\r\n  dispatch({\r\n    type: MATERIAL_REQ_LOADING,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `${global.config.backendURL}/stores/materialReqIssues/${id}`\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_REQ_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: MATERIAL_REQ_ERROR,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addMaterialReq = (id, data) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/stores/materialReqIssues`, {\r\n      projectId,\r\n      id,\r\n      data,\r\n    });\r\n    dispatch({\r\n      type: ADD_MATERIAL_REQ,\r\n    });\r\n    dispatch(getStore());\r\n    dispatch(Notifications.success(successMaterialReq));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ADD_MATERIAL_REQ,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const approveMaterialReq = (id, data) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/stores/approveRequisition`, {\r\n      projectId,\r\n      id,\r\n      data,\r\n    });\r\n    dispatch({\r\n      type: ADD_MATERIAL_REQ,\r\n    });\r\n    dispatch(getStore());\r\n    dispatch(Notifications.success(successMaterialReqApproval));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ADD_MATERIAL_REQ,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const rejectMaterialReq = (id, data) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.post(`${global.config.backendURL}/stores/rejectRequisition`, {\r\n      projectId,\r\n      id,\r\n      data,\r\n    });\r\n    dispatch({\r\n      type: REJECT_MATERIAL_REQ,\r\n    });\r\n    dispatch(getStore());\r\n    dispatch(Notifications.success(successMaterialReqRejection));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REJECT_MATERIAL_REQ,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\n/*export const deleteMaterialReq = id => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING\r\n  });\r\n  try {\r\n    const response = await axios.delete(\r\n      `${global.config.backendURL}/stores/materialReqIssues/${id}`\r\n    );\r\n    dispatch({\r\n      type: MATERIAL_REQ_SUCCESS,\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_REQ_ERROR,\r\n      payload: error.message\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};*/\r\n\r\nexport const addMaterialList = materials => async dispatch => {\r\n  //\r\n  dispatch({ type: MATERIALS_LIST_LOADING });\r\n  await axios\r\n    .post(`${global.config.backendURL}/project/addmaterials`, {\r\n      payload: materials,\r\n      projectId: global.config.secureStorage.getItem(\"projectId\"),\r\n    })\r\n    .then(res => {\r\n      dispatch({\r\n        type: MATERIALS_LIST_SUCCESS,\r\n        payload: res.data,\r\n        success: true,\r\n      });\r\n      dispatch(getStore());\r\n      dispatch(\r\n        Notifications.success({\r\n          title: \"Success\",\r\n          message: \"Materials Added\",\r\n          position: \"tr\",\r\n          autoDismiss: 3,\r\n        })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: MATERIALS_LIST_FAILURE,\r\n        payload: error.message,\r\n        success: false,\r\n      });\r\n      dispatch(\r\n        Notifications.error({\r\n          title: \"Error\",\r\n          message: \"Something Went Wrong!!\",\r\n          position: \"tr\",\r\n          autoDismiss: 3,\r\n        })\r\n      );\r\n    });\r\n};\r\n","import {\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  useMediaQuery,\r\n  useTheme,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n  Snackbar,\r\n  Slide,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { Add as AddIcon, AddCircleOutline, Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ProgressCard from \"./ProgressCard\";\r\nimport DailyProgressCards from \"./DailyProgressCards\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMaterial,\r\n  getStore,\r\n} from \"../../Redux/materialRedux/materialAction\";\r\n//import OutlinedInput from '@material-ui/core';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst DailyProgressReport = props => {\r\n  const [dpr, setDpr] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addClicked, setAddClicked] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [qty, setQty] = useState(\"\");\r\n  const [labor, setLabor] = useState([]);\r\n  const [numberOfLabor, setNumberOfLabor] = useState(1);\r\n  const [clicked, setClicked] = useState(null);\r\n  const [openAddSuccess, setOpenAddSuccess] = useState(false);\r\n  const [openAddFailure, setOpenAddFailure] = useState(false);\r\n\r\n  //Material\r\n  const [material, setMaterial] = useState([]);\r\n  const [numberOfMaterial, setNumberOfMaterial] = useState(1);\r\n\r\n  const [materialData, setmaterialData] = useState([]);\r\n  const [labourData, setLabourData] = useState([]);\r\n  const [equipmentData, setEquipmentData] = useState([]);\r\n\r\n  //Cost\r\n  const [cost, setCost] = useState(\"\");\r\n\r\n  //Sub-Activity\r\n  const [subActivity, setsubActivity] = useState(\"\");\r\n\r\n  //Get activity names\r\n  const [activityData, setactivityData] = useState([]);\r\n\r\n  //Miscellaneous\r\n  const [miscellaneous, setMiscellaneous] = useState([]);\r\n  const [numberOfMiscellaneous, setNumberOfMiscellaneous] = useState(1);\r\n\r\n  //Equipments\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [numberOfEquipment, setNumberOfEquipment] = useState(1);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDprData();\r\n    libraryData();\r\n    activityNames();\r\n  }, []);\r\n\r\n  // function getStyles(name, personName, theme) {\r\n  //   return {\r\n  //     fontWeight:\r\n  //       personName.indexOf(name) === -1\r\n  //         ? theme.typography.fontWeightRegular\r\n  //         : theme.typography.fontWeightMedium,\r\n  //   };\r\n  // }\r\n\r\n  async function getDprData() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/dpr/getAllDpr`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      let datesArr = Object.keys(res.data);\r\n      setDates(datesArr);\r\n      setDpr(res.data);\r\n      setLoading(false);\r\n      setDate(new Date());\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function libraryData() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    // const respo2 = await axios.get(\r\n    //   `${global.config.backendURL}/material/getMaterial/${projectId}`)\r\n    //   console.log(respo2)\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/labour/getLabour`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      setLabourData(res.data);\r\n\r\n      const res1 = await axios.post(\r\n        `${global.config.backendURL}/equipment/getEquipment`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      setEquipmentData(res1.data);\r\n\r\n      const res2 = await axios.post(\r\n        `${global.config.backendURL}/library/getLibrary`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      setmaterialData(res2.data);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  async function activityNames() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    setLoading(true);\r\n\r\n    const response2 = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    setactivityData(response2.data.data);\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setAddClicked(true);\r\n  };\r\n\r\n  const addButtonHandler = async () => {\r\n    if (\r\n      description.trim() === \"\" ||\r\n      !qty||\r\n      !activity\r\n    ) {\r\n      alert(\"Please fill all fields\");\r\n      return;\r\n    }\r\n\r\n    labor.forEach(labour=>{\r\n      labour.labor= labour.labor.split(';')[0];\r\n    })\r\n    material.forEach(mtr=>{\r\n      mtr.material= mtr.material.split(';')[0];\r\n    })\r\n    equipment.forEach(eq=>{\r\n      eq.equipment= eq.equipment.split(';')[0];\r\n    })\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    console.log(\"Here is the\", projectId);\r\n    const reqBody = {\r\n      date,\r\n      activity,\r\n      material, //Change\r\n      work_desc: description,\r\n      quantity_work: qty,\r\n      labor,\r\n      projectId,\r\n      equipment,\r\n      miscellaneous,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(`${global.config.backendURL}/dpr/addDpr`, {\r\n        ...reqBody,\r\n      });\r\n      setActivity(\"\");\r\n      setDescription(\"\");\r\n      setQty(\"\");\r\n      setLabor([]);\r\n      setMaterial([]);\r\n      setNumberOfLabor(1);\r\n      setNumberOfMaterial(1);\r\n      setMiscellaneous([]);\r\n      setNumberOfMiscellaneous(1);\r\n      setEquipment([]);\r\n      setNumberOfEquipment(1);\r\n      setDate(new Date());\r\n      let tempDates = dates;\r\n      let tempDpr = dpr;\r\n      const dateFound = tempDates.includes(res.data.date);\r\n      if (!dateFound) {\r\n        tempDates.unshift(res.data.date);\r\n      }\r\n      tempDpr[res.data.date]\r\n        ? tempDpr[res.data.date].unshift(res.data.dpr)\r\n        : (tempDpr[res.data.date] = [res.data.dpr]);\r\n      setDates(tempDates);\r\n      setDpr(tempDpr);\r\n      setAddClicked(false);\r\n      setOpenAddSuccess(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setOpenAddFailure(true);\r\n    }\r\n  };\r\n\r\n  function TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n\r\n  const handleCardClick = date => setClicked(date);\r\n\r\n  const handleBackButtonClick = () => setClicked(null);\r\n\r\n  const handleClose = () => setAddClicked(false);\r\n\r\n  const handleDelete = ids => {\r\n    let temp_dates = dates;\r\n    let temp_dpr = dpr;\r\n    ids.forEach(id => {\r\n      const index = temp_dpr[clicked].findIndex(elem => elem._id === id);\r\n      if (index >= 0) {\r\n        if (temp_dpr[clicked].length === 1) {\r\n          delete temp_dpr[clicked];\r\n          let date_index = temp_dates.findIndex(elem => elem === clicked);\r\n          temp_dates.splice(date_index, 1);\r\n        } else {\r\n          temp_dpr[clicked].splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n    setDate(temp_dates);\r\n    setDpr(temp_dpr);\r\n  };\r\n\r\n  const handleLaborAddCount = () => {\r\n    setNumberOfLabor(numberOfLabor + 1);\r\n  };\r\n\r\n  const handleMaterialAddCount = () => {\r\n    setNumberOfMaterial(numberOfMaterial + 1);\r\n  };\r\n\r\n  const handleEquipmentAddCount = () => {\r\n    setNumberOfEquipment(numberOfEquipment + 1);\r\n  };\r\n\r\n  const handleMiscellaneousAddCount = () => {\r\n    setNumberOfMiscellaneous(numberOfMiscellaneous + 1);\r\n  };\r\n\r\n  const handleLaborDeleteCount = index => {\r\n    if (numberOfLabor === 1) return;\r\n    let temp = labor;\r\n    temp.splice(index, 1);\r\n    setLabor(temp);\r\n    setNumberOfLabor(numberOfLabor - 1);\r\n  };\r\n\r\n  const handleMaterialDeleteCount = index => {\r\n    if (numberOfMaterial === 1) return;\r\n    let temp = material;\r\n    temp.splice(index, 1);\r\n    setMaterial(temp);\r\n    setNumberOfMaterial(numberOfMaterial - 1);\r\n  };\r\n\r\n  const handleMiscellaneousDeleteCount = index => {\r\n    if (numberOfMiscellaneous === 1) return;\r\n    let temp = miscellaneous;\r\n    temp.splice(index, 1);\r\n    setMiscellaneous(temp);\r\n    setNumberOfMiscellaneous(numberOfMiscellaneous - 1);\r\n  };\r\n\r\n  const handleEquipmentDeleteCount = index => {\r\n    if (numberOfEquipment === 1) return;\r\n    let temp = equipment;\r\n    temp.splice(index, 1);\r\n    setEquipment(temp);\r\n    setNumberOfEquipment(numberOfEquipment - 1);\r\n  };\r\n\r\n  const [selected,setSelected] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={openAddSuccess}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenAddSuccess(false)}\r\n      >\r\n        <Alert\r\n          severity=\"success\"\r\n          onClose={() => setOpenAddSuccess(false)}\r\n          style={{ borderTop: \"5px solid green\" }}\r\n        >\r\n          <div style={{ color: \"green\" }}>\r\n            <strong>Success</strong>\r\n          </div>\r\n          DPR added successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={openAddFailure}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenAddFailure(false)}\r\n      >\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => setOpenAddFailure(false)}\r\n          style={{ borderTop: \"5px solid red\" }}\r\n        >\r\n          <div style={{ color: \"red\" }}>\r\n            <strong>Error</strong>\r\n          </div>\r\n          Error while adding DPR!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={addClicked}\r\n        onClose={handleClose}\r\n        className=\"mt-5\"\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        fullScreen={fullScreen}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle className=\"mt-2\" id=\"form-dialog-title\">\r\n          New Daily Progress Report\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Provide details of DPR</DialogContentText>\r\n          <form onSubmit={addButtonHandler}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"activity\" required>\r\n                Activity\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"activity\"\r\n                id=\"activity\"\r\n                value={activity}\r\n                label=\"activity\"\r\n                onChange={event => {\r\n                  setActivity(event.target.value);\r\n                }}\r\n              >\r\n                {activityData.map(item => (\r\n                  <MenuItem value={item.title}>{item.title}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className=\"mt-4\"\r\n                fullWidth\r\n                disableToolbar\r\n                label=\"Date\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"none\"\r\n                id=\"date-picker-inline\"\r\n                value={date}\r\n                placeholder=\"Not available\"\r\n                onChange={date => {\r\n                  setDate(date);\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            <TextField\r\n              value={description}\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              label=\"Work Description\"\r\n              fullWidth\r\n              onChange={e => setDescription(e.target.value)}\r\n              required\r\n            />\r\n            <TextField\r\n              value={qty}\r\n              margin=\"dense\"\r\n              variant=\"standard\"\r\n              label=\"Quantity of Work\"\r\n              fullWidth\r\n              onChange={e => setQty(e.target.value)}\r\n              required\r\n            />\r\n\r\n            {_.times(numberOfLabor, index => {\r\n              let indexValue = index + 1;\r\n              return (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={4}>\r\n                    <FormControl className=\"mt-1\" fullWidth>\r\n                      <InputLabel id=\"labor-label\">Labor</InputLabel>\r\n                      <Select\r\n                        labelId=\"labor-label\"\r\n                        value={\r\n                          typeof labor[index] === \"object\" &&\r\n                          labor[index] !== null\r\n                            ? labor[index].labor\r\n                            : \"\"\r\n                        }\r\n                        onChange={e => {\r\n                          const unit = e.target.value.split(';')[1];\r\n                          let tempArr = [...labor];\r\n                          if (tempArr[index] && \"number\" in tempArr[index]) {\r\n                            tempArr[index] = {\r\n                              labor: e.target.value,\r\n                              number: tempArr[index].number,\r\n                              unit: unit\r\n                            };\r\n                          } else {\r\n                            tempArr[index] = {\r\n                              labor: e.target.value,\r\n                              number: \"\",\r\n                              unit :unit\r\n                            };\r\n                          }\r\n                          setLabor(tempArr);\r\n                        }}\r\n                        id=\"labor\"\r\n                      >\r\n                        {labourData.map((Labour, index) => (\r\n                          <MenuItem value={Labour.labourName + \";\" + Labour.unit}>\r\n                            {Labour.labourName}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      value={\r\n                        typeof labor[index] === \"object\" &&\r\n                        labor[index] !== null\r\n                          ? labor[index].number\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"number\"\r\n                      variant=\"standard\"\r\n                      label=\"Number of Laborers\"\r\n                      fullWidth\r\n                      onChange={e => {\r\n                        let tempArr = [...labor];\r\n                        if (tempArr[index] && \"labor\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            labor: tempArr[index].labor,\r\n                            unit: tempArr[index].unit\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            labor: \"\",\r\n                            unit:\"\"\r\n                          };\r\n                        }\r\n                        setLabor(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      value={\r\n                        typeof labor[index] === \"object\" &&\r\n                        labor[index] !== null\r\n                          ? labor[index].unit\r\n                          : \"\"\r\n                      }                      \r\n                      margin=\"dense\"\r\n                      type=\"text\"\r\n                      variant=\"standard\"\r\n                      label=\"Units\"\r\n                      fullWidth\r\n                      disabled\r\n                      onChange={e => {\r\n                        let tempArr = [...labor];\r\n                        if (tempArr[index] && \"labor\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            number: tempArr[index].number,\r\n                            labor: tempArr[index].labor,\r\n                            unit: e.target.value\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            number: \"\",\r\n                            labor: \"\",\r\n                            unit:e.target.value\r\n                          };\r\n                        }\r\n                        setLabor(tempArr);\r\n                      }}                      \r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={1}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleLaborDeleteCount(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                  {\r\n                    numberOfLabor-1 === index ?\r\n                    <Grid item xs={1}>\r\n                      <IconButton\r\n                      color=\"primary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleLaborAddCount(index)}\r\n                    >\r\n                      <AddCircleOutline />\r\n                    </IconButton>\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={1}>\r\n                    </Grid>\r\n                  }\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {_.times(numberOfMaterial, index => {\r\n              let indexValue = index + 1;\r\n              return (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={4}>\r\n                    <FormControl className=\"mt-1\" fullWidth>\r\n                      <InputLabel id=\"material-label\">Material</InputLabel>\r\n                      <Select\r\n                        labelId=\"material-label\"\r\n                        value={\r\n                          typeof material[index] === \"object\" &&\r\n                          material[index] !== null\r\n                            ? material[index].material\r\n                            : \"\"\r\n                        }\r\n                        onChange={e => {\r\n                          const unit = e.target.value.split(';')[1];\r\n                          let tempArr = [...material];\r\n                          if (tempArr[index] && \"number\" in tempArr[index]) {\r\n                            tempArr[index] = {\r\n                              material: e.target.value,\r\n                              number: tempArr[index].number,\r\n                              unit:unit\r\n                            };\r\n                          } else {\r\n                            tempArr[index] = {\r\n                              material: e.target.value,\r\n                              number: \"\",\r\n                              unit:unit\r\n                            };\r\n                          }\r\n                          setMaterial(tempArr);\r\n                        }}\r\n                        id=\"material\"\r\n                      >\r\n                        {materialData.map((material, index) => (\r\n                          <MenuItem value={material.materialName +\";\"+material.materialUnit}>\r\n                            {material.materialName}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      value={\r\n                        typeof material[index] === \"object\" &&\r\n                        material[index] !== null\r\n                          ? material[index].number\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"number\"\r\n                      variant=\"standard\"\r\n                      label=\"Material Units\"\r\n                      fullWidth\r\n                      onChange={e => {\r\n                        let tempArr = [...material];\r\n                        if (tempArr[index] && \"material\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            material: tempArr[index].material,\r\n                            unit:tempArr[index].unit\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            material: \"\",\r\n                            unit: \"\"\r\n                          };\r\n                        }\r\n                        setMaterial(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      value={\r\n                        typeof material[index] === \"object\" &&\r\n                        material[index] !== null\r\n                          ? material[index].unit\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"text\"\r\n                      variant=\"standard\"\r\n                      label=\"Units\"\r\n                      fullWidth\r\n                      disabled\r\n                      onChange={e => {\r\n                        let tempArr = [...material];\r\n                        if (tempArr[index] && \"material\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            unit: e.target.value,\r\n                            material: tempArr[index].material,\r\n                            number:tempArr[index].number\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            number: \"\",\r\n                            material: \"\",\r\n                            unit: e.target.value\r\n                          };\r\n                        }\r\n                        setMaterial(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={1}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleMaterialDeleteCount(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                  {\r\n                    numberOfMaterial -1 === index ?\r\n                    <Grid item xs={1}>\r\n                      <IconButton\r\n                      color=\"primary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleMaterialAddCount(index)}\r\n                    >\r\n                      <AddCircleOutline />\r\n                    </IconButton>\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={1}>\r\n                    </Grid>\r\n                  }\r\n                </Grid>\r\n              );\r\n            })}\r\n            {_.times(numberOfEquipment, index => {\r\n              let indexValue = index + 1;\r\n              return (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={4}>\r\n                  <FormControl className=\"mt-1\" fullWidth>\r\n                    <InputLabel id=\"equipment-label\">Equipment</InputLabel>\r\n                    <Select\r\n                      labelId=\"equipment-label\"\r\n                      value={\r\n                        typeof equipment[index] === \"object\" &&\r\n                        equipment[index] !== null\r\n                          ? equipment[index].equipment\r\n                          : \"\"\r\n                      }\r\n                      onChange={e => {\r\n                        const unit = e.target.value.split(';')[1];\r\n                        let tempArr = [...equipment];\r\n                        if (tempArr[index] && \"number\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            equipment: e.target.value,\r\n                            number: tempArr[index].number,\r\n                            unit: unit,\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            equipment: e.target.value,\r\n                            number: \"\",\r\n                            unit:unit\r\n                          };\r\n                        }\r\n                        setEquipment(tempArr);\r\n                      }}\r\n                      id=\"equipment\"\r\n                    >\r\n                       {equipmentData.map((equipment, index) => (\r\n                          <MenuItem value={equipment.equipmentName +\";\"+ equipment.unit}>\r\n                            {equipment.equipmentName}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      value={\r\n                        typeof equipment[index] === \"object\" &&\r\n                        equipment[index] !== null\r\n                          ? equipment[index].number\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"number\"\r\n                      variant=\"standard\"\r\n                      label=\"No. of Equipment\"\r\n                      fullWidth\r\n                      onChange={e => {\r\n                        let tempArr = [...equipment];\r\n                        if (tempArr[index] && \"equipment\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            equipment: tempArr[index].equipment,\r\n                            unit: tempArr[index].unit,\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            number: e.target.value,\r\n                            equipment: \"\",\r\n                            unit:\"\"\r\n                          };\r\n                        }\r\n                        setEquipment(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      value={\r\n                        typeof equipment[index] === \"object\" &&\r\n                        equipment[index] !== null\r\n                          ? equipment[index].unit\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"text\"\r\n                      variant=\"standard\"\r\n                      label=\"Units\"\r\n                      fullWidth\r\n                      disabled\r\n                      onChange={e => {\r\n                        let tempArr = [...equipment];\r\n                        if (tempArr[index] && \"equipment\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            unit: e.target.value,\r\n                            equipment: tempArr[index].equipment,\r\n                            number: tempArr[index].number,\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            unit: e.target.value,\r\n                            equipment: \"\",\r\n                            number:\"\"\r\n                          };\r\n                        }\r\n                        setEquipment(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={1}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleEquipmentDeleteCount(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                  {\r\n                    numberOfEquipment -1 === index ?\r\n                    <Grid item xs={1}>\r\n                      <IconButton\r\n                      color=\"primary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleEquipmentAddCount(index)}\r\n                    >\r\n                      <AddCircleOutline />\r\n                    </IconButton>\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={1}>\r\n                    </Grid>\r\n                  }\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {_.times(numberOfMiscellaneous, index => {\r\n              let indexValue = index + 1;\r\n              return (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      labelId=\"miscellaneous-label\"\r\n                      value={\r\n                        typeof miscellaneous[index] === \"object\" &&\r\n                        miscellaneous[index] !== null\r\n                          ? miscellaneous[index].miscellaneous\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"number\"\r\n                      variant=\"standard\"\r\n                      label=\"Miscellaneous Cost\"\r\n                      fullWidth\r\n                      onChange={e => {\r\n                        let tempArr = [...miscellaneous];\r\n                        if (tempArr[index] && \"reason\" in tempArr[index]) {\r\n                          tempArr[index] = {\r\n                            miscellaneous: e.target.value,\r\n                            reason: tempArr[index].reason,\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            miscellaneous: e.target.value,\r\n                            reason: \"\",\r\n                          };\r\n                        }\r\n                        setMiscellaneous(tempArr);\r\n                      }}\r\n                      id=\"miscellaneous\"\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      value={\r\n                        typeof miscellaneous[index] === \"object\" &&\r\n                        miscellaneous[index] !== null\r\n                          ? miscellaneous[index].reason\r\n                          : \"\"\r\n                      }\r\n                      margin=\"dense\"\r\n                      type=\"text\"\r\n                      variant=\"standard\"\r\n                      label=\"Reason\"\r\n                      fullWidth\r\n                      onChange={e => {\r\n                        let tempArr = [...miscellaneous];\r\n                        if (\r\n                          tempArr[index] &&\r\n                          \"miscellaneous\" in tempArr[index]\r\n                        ) {\r\n                          tempArr[index] = {\r\n                            reason: e.target.value,\r\n                            miscellaneous: tempArr[index].miscellaneous,\r\n                          };\r\n                        } else {\r\n                          tempArr[index] = {\r\n                            reason: e.target.value,\r\n                            miscellaneous: \"\",\r\n                          };\r\n                        }\r\n                        setMiscellaneous(tempArr);\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={1}>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleMiscellaneousDeleteCount(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                  {\r\n                    numberOfMiscellaneous -1 === index ?\r\n                    <Grid item xs={1}>\r\n                      <IconButton\r\n                      color=\"primary\"\r\n                      className=\"mt-4\"\r\n                      onClick={() => handleMiscellaneousAddCount(index)}\r\n                    >\r\n                      <AddCircleOutline />\r\n                    </IconButton>\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={1}>\r\n                    </Grid>\r\n                  }\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions style={{ marginBottom: \"1.5em\", marginRight: \"1em\" }}>\r\n          <Button onClick={() => setAddClicked(false)} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={addButtonHandler}>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {!loading && (\r\n        <>\r\n          {clicked === null ? (\r\n            <div className={classes.root}>\r\n              {Object.keys(dpr).length === 0 ? (\r\n                <>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    justify=\"flex-end\"\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={12}\r\n                    lg={12}\r\n                  >\r\n                    <Button\r\n                      style={{ margin: \"1rem 1rem\" }}\r\n                      onClick={handleClick}\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Add DPR\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Typography\r\n                    className=\"mt-5 d-flex justify-content-center align-items-center\"\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    No DPRs Available!\r\n                  </Typography>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    justify=\"flex-end\"\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={12}\r\n                    lg={12}\r\n                  >\r\n                    <Button\r\n                      style={{ margin: \"1rem 1rem\" }}\r\n                      onClick={handleClick}\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Add DPR\r\n                    </Button>\r\n                  </Grid>\r\n                  {dates.map((elem, key) => (\r\n                    <Grid container justify=\"center\" key={key}>\r\n                      <Grid item xs={11} sm={11} md={6} lg={6}>\r\n                        <ProgressCard\r\n                          heading={elem}\r\n                          handleCardClick={handleCardClick}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <DailyProgressCards\r\n              dprs={dpr[clicked]}\r\n              clicked={clicked}\r\n              handleBackButtonClick={handleBackButtonClick}\r\n              handleDelete={handleDelete}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n;\r\n\r\nexport default DailyProgressReport;\r\n","import React from \"react\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 800,\r\n    height: 50,\r\n    marginBottom: 10,\r\n    display: \"grid\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst ProgressCard = props => {\r\n  const styles = useStyles();\r\n  return (\r\n    <>\r\n      <Paper className={styles.card}>\r\n        <button\r\n          style={{\r\n            background: \"none\",\r\n            color: \"inherit\",\r\n            border: \"none\",\r\n            padding: 0,\r\n            font: \"inherit\",\r\n            cursor: \"pointer\",\r\n            outline: \"inherit\",\r\n          }}\r\n          onClick={() => props.handleCardClick(props.heading)}\r\n        >\r\n          <Typography style={{ paddingLeft: 10 }}>{props.heading}</Typography>\r\n        </button>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Snackbar,\r\n  Slide,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst DailyProgressCards = props => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openDeleteFailure, setOpenDeleteFailure] = useState(false);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  function TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Activity\",\r\n      label: \"Activity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"Work Description\",\r\n      label: \"Work Description\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"Quantity of Work\",\r\n      label: \"Quantity of Work\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Labor, Material & Equipment\",\r\n      label: \"Labor, Material & Equipment\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const tempData = [];\r\n    props.dprs.forEach((elem, id) => {\r\n      let row = [];\r\n      row.push(\r\n        elem.activity,\r\n        elem.work_desc,\r\n        elem.quantity_work,\r\n        <Accordion\r\n          style={{ backgroundColor: \"#f5f5f5\" }}\r\n          key={id}\r\n          defaultExpanded={true}\r\n        >\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>Workers</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <TableContainer>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Labor</TableCell>\r\n                    <TableCell>Number of Laborers</TableCell>\r\n                    <TableCell>Labor unit</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {elem.labor.map((lab, id) => (\r\n                    <TableRow key={id}>\r\n                      <TableCell>{lab.labor}</TableCell>\r\n                      <TableCell>{lab.number}</TableCell>\r\n                      <TableCell>{lab.unit}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </AccordionDetails>\r\n\r\n          {elem.material ? (\r\n            <>\r\n              <AccordionSummary>\r\n                <Typography>Materials</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <TableContainer>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Material</TableCell>\r\n                        <TableCell>Material Consumption Units</TableCell>\r\n                        <TableCell>Material Units</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {elem.material.map((mat, id) => (\r\n                        <TableRow key={id}>\r\n                          <TableCell>{mat.material}</TableCell>\r\n                          <TableCell>{mat.number}</TableCell>\r\n                          <TableCell>{mat.unit}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </AccordionDetails>\r\n            </>            \r\n          ) : null}\r\n\r\n          {elem.equipment ? (\r\n            <>\r\n              <AccordionSummary>\r\n                <Typography>Equipment</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <TableContainer>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Equipment</TableCell>\r\n                        <TableCell>Number of equipments</TableCell>\r\n                        <TableCell>Equipment Unit</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {elem.equipment.map((eq, id) => (\r\n                        <TableRow key={id}>\r\n                          <TableCell>{eq.equipment}</TableCell>\r\n                          <TableCell>{eq.number}</TableCell>\r\n                          <TableCell>{eq.unit}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </AccordionDetails>\r\n            </>            \r\n          ) : null}\r\n          \r\n        </Accordion>\r\n      );\r\n      tempData.push(row);\r\n    });\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n    axios\r\n      .get(`${global.config.backendURL}/project/getProjectInfo/${projectId}`)\r\n      .then(res => setProjectName(res.data.projectName))\r\n      .catch(e => console.log(e));\r\n    setData(tempData);\r\n    setLoading(false);\r\n  }, []); //eslint-disable-line\r\n  const subprojectName = global.config.secureStorage.getItem(\"subProjectName\");\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={openDeleteFailure}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={() => setOpenDeleteFailure(false)}\r\n      >\r\n        <Alert\r\n          severity=\"error\"\r\n          onClose={() => setOpenDeleteFailure(false)}\r\n          style={{ borderTop: \"5px solid red\" }}\r\n        >\r\n          <div style={{ color: \"red\" }}>\r\n            <strong>Error</strong>\r\n          </div>\r\n          Error while deleting DPR!\r\n        </Alert>\r\n      </Snackbar>\r\n      {!loading && (\r\n        <>\r\n          <Grid item container justify=\"center\" className=\"mt-4\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<KeyboardBackspaceIcon />}\r\n              onClick={props.handleBackButtonClick}\r\n            >\r\n              Go back\r\n            </Button>\r\n          </Grid>\r\n          <center style={{ marginTop: \"1.5em\" }}>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n              <strong>Project: </strong>\r\n              {projectName}\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.45em\" }}>\r\n              <strong>Sub Project: </strong>\r\n              {subprojectName}\r\n            </Typography>\r\n          </center>\r\n          <Grid item container justify=\"center\" className=\"mt-4\">\r\n            <Typography\r\n              variant=\"overline\"\r\n              component=\"h1\"\r\n              gutterBottom\r\n              style={{ fontSize: 20 }}\r\n            >\r\n              {props.clicked}\r\n            </Typography>\r\n          </Grid>\r\n          <center>\r\n            <button\r\n              className=\"btn-warning btn mt-3 mb-3 generatePDF\"\r\n              onClick={() => {\r\n                window.print();\r\n              }}\r\n            >\r\n              Download PDF\r\n            </button>\r\n          </center>\r\n          <Grid container justify=\"center\">\r\n            <Grid item lg={6}>\r\n              <div style={{ margin: \"0 20px\" }} className=\"mt-4 mb-4\">\r\n                <MUIDataTable\r\n                  title={`Daily Progress Report for ${props.clicked}`}\r\n                  data={data}\r\n                  columns={columns}\r\n                  options={{\r\n                    selectableRows: \"single\",\r\n                    responsive: \"simple\",\r\n                    pagination: false,\r\n                    download: false,\r\n                    viewColumns: false,\r\n                    filter: false,\r\n                    print: false,\r\n                    onRowsDelete: row_data => {\r\n                      let tempData = data;\r\n                      const ids = row_data.data.map(elem => {\r\n                        tempData.splice(elem.index, 1);\r\n                        return props.dprs[elem.index]._id;\r\n                      });\r\n                      setData(tempData);\r\n                      props.handleDelete(ids);\r\n                      ids.forEach(id => {\r\n                        axios\r\n                          .post(`${global.config.backendURL}/dpr/deleteDpr`, {\r\n                            id: id,\r\n                          })\r\n                          .catch(err => {\r\n                            console.log(err);\r\n                            setOpenDeleteFailure(true);\r\n                          });\r\n                      });\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(DailyProgressCards);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\n\r\nimport EditMaterial from \"./EditMaterial\";\r\nimport AddMaterial from \"./AddMaterial\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addMaterial,\r\n  getMaterial,\r\n  updateMaterial,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  getStore,\r\n} from \"../../Redux/materialRedux/materialAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport axios from \"axios\";\r\n// import Typography from \"material-ui/styles/typography\";\r\n// import { each } from \"lodash\";\r\n\r\nclass Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\"purchase_manager\", \"project_manager\", \"super_admin\"];\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      materialName: \"\",\r\n      materialLimit: \"\",\r\n      materialQuantity: \"\",\r\n      materialRate: \"\",\r\n      materialUnit: \"\",\r\n      materialAmount: \"\",\r\n      editMaterialId: \"\",\r\n      activity: \"\",\r\n      allMaterials: [],\r\n      storeData: [],\r\n      isCreateNewMaterial: false,\r\n      isModifyMaterial: false,\r\n      isEditable: isEditable,\r\n      libraryData: [],\r\n      isEditMaterial: false,\r\n      editId: \"\",\r\n    };\r\n  }\r\n  columns = [\r\n    {\r\n      name: \"materialName\",\r\n      label: \"Material\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"activity\",\r\n      label: \"Activity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"materialQuantity\",\r\n      label: \"Quantity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"materialUnit\",\r\n      label: \"Unit\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"materialRate\",\r\n      label: \"Rate\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"materialAmount\",\r\n      label: \"Amount\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Edit\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                this.toggleEditMaterial(tableMeta);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button onClick={() => this.deleteMaterial(tableMeta.rowIndex)}>\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  async getLibraryData() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/library/getLibrary`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      this.setState({ libraryData: res.data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.getLibraryData();\r\n    console.log(this.state.libraryData);\r\n    await this.props.getMaterial();\r\n    await this.props.getStore();\r\n    if (!this.props.loading) {\r\n      this.setState({\r\n        allMaterials: this.props.material.data,\r\n        storeData: this.props.material.storeData,\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteMaterial = async id => {\r\n    let singleMaterial = [...this.state.libraryData];\r\n    singleMaterial = singleMaterial[id];\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/library/deleteMaterial/${singleMaterial._id}`\r\n      );\r\n      let tempData = this.state.libraryData;\r\n      tempData.splice(id, 1);\r\n      console.log(tempData);\r\n      this.setState({\r\n        materialName: \"\",\r\n        materialQuantity: \"\",\r\n        materialRate: \"\",\r\n        materialUnit: \"\",\r\n        materialAmount: \"\",\r\n        activity: \"\",\r\n        libraryData: tempData,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  toggleEditMaterial = tableMeta => {\r\n    let singleMaterial = [...this.state.libraryData];\r\n    singleMaterial = singleMaterial[tableMeta.rowIndex];\r\n    console.log(\"rowIndex\" + tableMeta.rowIndex);\r\n    console.log(singleMaterial);\r\n\r\n    if (!this.state.isEditMaterial) {\r\n      this.setState({\r\n        editId: singleMaterial._id,\r\n        materialName: singleMaterial.materialName,\r\n        materialQuantity: singleMaterial.materialQuantity,\r\n        materialRate: singleMaterial.materialRate,\r\n        materialAmount:\r\n          singleMaterial.materialRate * singleMaterial.materialQuantity,\r\n        materialUnit: singleMaterial.materialUnit,\r\n        activity: singleMaterial.activity,\r\n        isEditMaterial: !this.state.isEditMaterial,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event, value = null) => {\r\n    if (value === null) {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        materialName: value,\r\n      });\r\n    }\r\n  };\r\n  handleActivity = event => {\r\n    this.setState({ activity: event.target.value });\r\n  };\r\n  // handleMainActivity = event => {\r\n  //   console.log(event)\r\n  //   this.setState({ mainActivity: event.target.value});\r\n  // };\r\n  toggleCreateNewMaterial = () => {\r\n    this.setState({\r\n      materialName: \"\",\r\n      materialQuantity: \"\",\r\n      materialRate: \"\",\r\n      materialAmount: \"\",\r\n      materialUnit: \"\",\r\n      activity: \"\",\r\n      isCreateNewMaterial: !this.state.isCreateNewMaterial,\r\n    });\r\n  };\r\n\r\n  updateMaterial = async event => {\r\n    event.preventDefault();\r\n\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const finalEquipment = {\r\n      projectId,\r\n      materialName: this.state.materialName,\r\n      materialQuantity: this.state.materialQuantity,\r\n      materialRate: this.state.materialRate,\r\n      materialAmount: this.state.materialRate * this.state.materialQuantity,\r\n      materialUnit: this.state.materialUnit,\r\n      activity: this.state.activity,\r\n      _id: this.state.editId,\r\n    };\r\n\r\n    // const num = Number(this.state.libraryData);\r\n    let tempData = [...this.state.libraryData];\r\n    if (this.state.editId != undefined) {\r\n      try {\r\n        const res = await axios.post(\r\n          `${global.config.backendURL}/library/editLibrary/${this.state.editId}`,\r\n          {\r\n            ...finalEquipment,\r\n          }\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      let objIndex = tempData.findIndex(obj => obj._id == this.state.editId);\r\n      tempData[objIndex] = finalEquipment;\r\n\r\n      this.setState({\r\n        editId: \"\",\r\n        materialName: \"\",\r\n        materialQuantity: \"\",\r\n        materialRate: \"\",\r\n        materialUnit: \"\",\r\n        materialAmount: \"\",\r\n        activity: \"\",\r\n        isEditMaterial: !this.state.isEditMaterial,\r\n        libraryData: tempData,\r\n      });\r\n    }\r\n  };\r\n\r\n  saveMaterial = async event => {\r\n    event.preventDefault();\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const finalMaterial = {\r\n      projectId,\r\n      materialName: this.state.materialName,\r\n      materialQuantity: this.state.materialQuantity,\r\n      materialRate: this.state.materialRate,\r\n      materialAmount: this.state.materialRate * this.state.materialQuantity,\r\n      materialUnit: this.state.materialUnit,\r\n      activity: this.state.activity,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/library/addToLibrary`,\r\n        {\r\n          ...finalMaterial,\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    let tempData = [...this.state.libraryData, finalMaterial];\r\n    console.log(tempData);\r\n    this.setState({\r\n      materialName: \"\",\r\n      materialQuantity: \"\",\r\n      materialRate: \"\",\r\n      materialUnit: \"\",\r\n      materialAmount: \"\",\r\n      activity: \"\",\r\n      isCreateNewMaterial: !this.state.isCreateNewMaterial,\r\n      libraryData: tempData,\r\n    });\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const { isCreateNewMaterial, isEditMaterial } = this.state;\r\n    if (isCreateNewMaterial) {\r\n      return (\r\n        <AddMaterial\r\n          storeData={this.props.storeData}\r\n          handleChange={this.handleChange}\r\n          materialName={this.state.materialName}\r\n          materialQuantity={this.state.materialQuantity}\r\n          materialRate={this.state.materialRate}\r\n          materialUnit={this.state.materialUnit}\r\n          materialAmount={this.state.materialAmount}\r\n          activity={this.state.activity}\r\n          saveMaterial={this.saveMaterial}\r\n          toggleCreateNewMaterial={this.toggleCreateNewMaterial}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n    if (isEditMaterial) {\r\n      return (\r\n        <EditMaterial\r\n          storeData={this.props.storeData}\r\n          handleChange={this.handleChange}\r\n          materialName={this.state.materialName}\r\n          materialQuantity={this.state.materialQuantity}\r\n          materialRate={this.state.materialRate}\r\n          materialUnit={this.state.materialUnit}\r\n          materialAmount={this.state.materialAmount}\r\n          activity={this.state.activity}\r\n          updateMaterial={this.updateMaterial}\r\n          toggleEditMaterial={this.toggleEditMaterial}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isEditable && (\r\n          <section className={Style.button__display}>\r\n            <Button\r\n              onClick={this.toggleCreateNewMaterial}\r\n              startIcon={<Add />}\r\n              size=\"large\"\r\n            >\r\n              Add Material\r\n            </Button>\r\n          </section>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <MUIDataTable\r\n              title={`Material`}\r\n              data={this.state.libraryData}\r\n              columns={this.columns}\r\n              options={{\r\n                selectableRows: \"none\",\r\n                responsive: \"simple\",\r\n                pagination: false,\r\n                download: false,\r\n                viewColumns: false,\r\n                filter: true,\r\n                print: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  material: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    material: state.materialReducer,\r\n    notifications: state.notifications,\r\n    success: state.materialReducer.success,\r\n    loading: state.materialReducer.loading,\r\n    data: state.materialReducer.data,\r\n    storeData: state.materialReducer.storeData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addMaterial,\r\n  getMaterial,\r\n  updateMaterial,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  getStore,\r\n})(Display);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst EditMaterial = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [materials, setMaterials] = useState([]);\r\n  const [toggleText, setToggleText] = useState(true);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [projectType, setProjectType] = useState(\r\n    global.config.secureStorage.getItem(\"projectType\")\r\n  );\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n\r\n  const loading = open && materials.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setMaterials(Array.from(tempMaterials));\r\n    })();\r\n    console.log(\"asdasdasdasd\", props.storeData);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setMaterials([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);\r\n    // }\r\n    setActivities(response.data.data);\r\n  }\r\n\r\n  //   const handleMainActivityChange = (event) =>{\r\n  //     const value = event.target.value;\r\n  //     const id = mainActivities.findIndex(act=>{\r\n  //       return act.title === value;\r\n  //     });\r\n  //     console.log(id)\r\n  //     if(id>=0){\r\n  //      const activity = mainActivities[id].activities;\r\n  //      console.log(activity);\r\n  //      setActivities(activity);\r\n  //      props.handleMainActivity(event);\r\n  //     }\r\n  //  }\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.updateMaterial}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Edit to Material\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n          <>\r\n            <Grid container>\r\n              <Grid item md={12} xs={12}>\r\n                <TextField\r\n                  name=\"materialName\"\r\n                  value={props.materialName}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={props.handleChange}\r\n                  id=\"materialName\"\r\n                  label=\"Material Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialQuantity\"\r\n            id=\"materialQuantity\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Quantity\"\r\n            value={props.materialQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialUnit\"\r\n            id=\"materialUnit\"\r\n            variant=\"outlined\"\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Unit\"\r\n            value={props.materialUnit}\r\n            type=\"text\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialRate\"\r\n            id=\"materialRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Rate\"\r\n            value={props.materialRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialAmount\"\r\n            id=\"materialAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.materialRate * props.materialQuantity}\r\n            type=\"number\"\r\n            disabled\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewMaterial}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default EditMaterial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst AddMaterial = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [materials, setMaterials] = useState([]);\r\n  const [toggleText, setToggleText] = useState(true);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [projectType, setProjectType] = useState(\r\n    global.config.secureStorage.getItem(\"projectType\")\r\n  );\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n\r\n  const loading = open && materials.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setMaterials(Array.from(tempMaterials));\r\n    })();\r\n    console.log(\"asdasdasdasd\", props.storeData);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setMaterials([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);\r\n    // }\r\n    setActivities(response.data.data);\r\n  }\r\n\r\n  //   const handleMainActivityChange = (event) =>{\r\n  //     const value = event.target.value;\r\n  //     const id = mainActivities.findIndex(act=>{\r\n  //       return act.title === value;\r\n  //     });\r\n  //     console.log(id)\r\n  //     if(id>=0){\r\n  //      const activity = mainActivities[id].activities;\r\n  //      console.log(activity);\r\n  //      setActivities(activity);\r\n  //      props.handleMainActivity(event);\r\n  //     }\r\n  //  }\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.saveMaterial}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Add to Material\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n          <>\r\n            <Grid container>\r\n              <Grid item md={12} xs={12}>\r\n                <TextField\r\n                  name=\"materialName\"\r\n                  value={props.materialName}\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={props.handleChange}\r\n                  id=\"materialName\"\r\n                  label=\"Material Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialQuantity\"\r\n            id=\"materialQuantity\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Quantity\"\r\n            value={props.materialQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialUnit\"\r\n            id=\"materialUnit\"\r\n            variant=\"outlined\"\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Unit\"\r\n            value={props.materialUnit}\r\n            type=\"text\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialRate\"\r\n            id=\"materialRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Rate\"\r\n            value={props.materialRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"materialAmount\"\r\n            id=\"materialAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.materialRate * props.materialQuantity}\r\n            type=\"number\"\r\n            disabled\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewMaterial}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddMaterial;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport EditLabour from \"./EditLabour\";\r\nimport AddLabour from \"./AddLabour\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addMaterial,\r\n  getMaterial,\r\n  updateMaterial,\r\n  deleteMaterial,\r\n  addDeliveryDate,\r\n  getStore,\r\n} from \"../../Redux/materialRedux/materialAction\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport axios from \"axios\";\r\nimport SlideTransition from \"@material-ui/pickers/views/Calendar/SlideTransition\";\r\n// import Typography from \"material-ui/styles/typography\";\r\n// import { each } from \"lodash\";\r\n\r\nclass Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\"purchase_manager\", \"project_manager\", \"super_admin\"];\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      labourName: \"\",\r\n      labourRate: \"\",\r\n      labourAmount: \"\",\r\n      unit: \"\",\r\n      number_of_labourers: \"\",\r\n      activity: \"\",\r\n      isCreateNewLabour: false,\r\n      isEditable: isEditable,\r\n      labourData: [],\r\n      isEditLabour: false,\r\n      editId: \"\",\r\n    };\r\n  }\r\n\r\n  columns = [\r\n    {\r\n      name: \"labourName\",\r\n      label: \"Labour Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"mainActivity\",\r\n    //   label: \"Main Activity\",\r\n    //   options: {\r\n    //     filter: true,\r\n    //     sort: true,\r\n    //   },\r\n    // },\r\n    {\r\n      name: \"activity\",\r\n      label: \"Activity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"unit\",\r\n      label: \"Unit\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"number_of_labourers\",\r\n      label: \"Number of Labourers\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"labourRate\",\r\n      label: \"Salary\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"labourAmount\",\r\n      label: \"Amount\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    }, {\r\n      name: \"Edit\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                this.toggleEditLabour(tableMeta);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button onClick={() => this.deleteLabour(tableMeta.rowIndex)}>\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  async getLabourData() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/labour/getLabour`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      this.setState({ labourData: res.data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getLabourData();\r\n    console.log(\"labour data\");\r\n    console.log(this.state.labourData);\r\n  }\r\n\r\n  handleChange = (event, value = null) => {\r\n    if (value === null) {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        labourName: value,\r\n      });\r\n    }\r\n  };\r\n  handleActivity = event => {\r\n    this.setState({ activity: event.target.value });\r\n  };\r\n  // handleMainActivity = event => {\r\n  //   console.log(event)\r\n  //   this.setState({ mainActivity: event.target.value});\r\n  // };\r\n\r\n\r\n  toggleEditLabour = tableMeta => {\r\n    let singleLabour = [...this.state.labourData];\r\n    singleLabour = singleLabour[tableMeta.rowIndex];\r\n    console.log(\"rowIndex\" + tableMeta.rowIndex);\r\n    console.log(singleLabour);\r\n\r\n    if (!this.state.isEditLabour) {\r\n      this.setState({\r\n        editId: singleLabour._id,\r\n        labourName: singleLabour.labourName,\r\n        activity: singleLabour.activity,\r\n        unit: singleLabour.unit,\r\n        number_of_labourers: singleLabour.number_of_labourers,\r\n        labourRate: singleLabour.labourRate,\r\n        labourAmount: singleLabour.labourRate * singleLabour.number_of_labourers,\r\n        isEditLabour: !this.state.isEditLabour,\r\n      });\r\n    }\r\n  };\r\n  toggleCreateNewLabour = () => {\r\n    this.setState({\r\n      labourName: \"\",\r\n      activity: \"\",\r\n      unit: \"\",\r\n      labourRate: \"\",\r\n      labourAmount: \"\",\r\n      number_of_labourers: \"\",\r\n      isCreateNewLabour: !this.state.isCreateNewLabour,\r\n    });\r\n  };\r\n\r\n  deleteLabour = async id => {\r\n    let singleLabour = [...this.state.labourData];\r\n    singleLabour = singleLabour[id];\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/labour/deleteLabour/${singleLabour._id}`\r\n      );\r\n      let tempData = this.state.labourData;\r\n      tempData.splice(id, 1);\r\n      console.log(tempData);\r\n      this.setState({\r\n        labourName: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        labourRate: \"\",\r\n        labourAmount: \"\",\r\n        number_of_labourers: \"\",\r\n        labourData: tempData,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  updateLabour = async event => {\r\n    event.preventDefault();\r\n\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const finalLabour = {\r\n      projectId,\r\n      labourName: this.state.labourName,\r\n      activity: this.state.activity,\r\n      unit: this.state.unit,\r\n      number_of_labourers: this.state.number_of_labourers,\r\n      labourRate: this.state.labourRate,\r\n      labourAmount: this.state.labourRate * this.state.number_of_labourers,\r\n      _id: this.state.editId,\r\n    };\r\n\r\n    const num = Number(this.state.labourName);\r\n    if (Number.isInteger(num)) {\r\n      alert(\"Please enter valid equipment\");\r\n      this.setState({ equipmentName: \"\" });\r\n    } else {\r\n      let tempData = [...this.state.labourData];\r\n      console.log(this.state.editId);\r\n      if (this.state.editId != undefined) {\r\n        try {\r\n          const res = await axios.post(\r\n            `${global.config.backendURL}/labour/editLabour/${this.state.editId}`,\r\n            {\r\n              ...finalLabour,\r\n            }\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n        let objIndex = tempData.findIndex(obj => obj._id == this.state.editId);\r\n        tempData[objIndex] = finalLabour;\r\n      }\r\n      this.setState({\r\n        editId: \"\",\r\n        isEditLabour: !this.state.isEditLabour,\r\n        labourName: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        labourRate: \"\",\r\n        labourAmount: \"\",\r\n        number_of_labourers: \"\",\r\n        labourData: tempData,\r\n      });\r\n    }\r\n  };\r\n  saveLabour = async event => {\r\n    event.preventDefault();\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const finalLabour = {\r\n      projectId,\r\n      labourName: this.state.labourName,\r\n      activity: this.state.activity,\r\n      unit: this.state.unit,\r\n      number_of_labourers: this.state.number_of_labourers,\r\n      labourRate: this.state.labourRate,\r\n      labourAmount: this.state.labourRate * this.state.number_of_labourers,\r\n    };\r\n    const num = Number(this.state.labourName);\r\n    console.log(Number.isInteger(num));\r\n    if (Number.isInteger(num)) {\r\n      alert(\"Please enter valid labour,it cannot be a number\");\r\n      this.setState({ labourName: \"\" });\r\n    } else {\r\n      try {\r\n        const res = await axios.post(\r\n          `${global.config.backendURL}/labour/addToLabour`,\r\n          {\r\n            ...finalLabour,\r\n          }\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      let tempData = [...this.state.labourData, finalLabour];\r\n      console.log(tempData);\r\n      this.setState({\r\n        labourName: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        labourRate: \"\",\r\n        labourAmount: \"\",\r\n        number_of_labourers: \"\",\r\n        isCreateNewLabour: !this.state.isCreateNewLabour,\r\n        labourData: tempData,\r\n      });\r\n      window.location.reload();\r\n    }\r\n  };\r\n  render() {\r\n    const { isCreateNewLabour, isEditLabour } = this.state;\r\n    if (isCreateNewLabour) {\r\n      return (\r\n        <AddLabour\r\n          storeData={this.props.storeData}\r\n          activity={this.state.activity}\r\n          unit={this.state.unit}\r\n          handleChange={this.handleChange}\r\n          labourName={this.state.labourName}\r\n          labourRate={this.state.labourRate}\r\n          labourAmount={this.state.labourAmount}\r\n          labourData={this.state.labourData}\r\n          number_of_labourers={this.state.number_of_labourers}\r\n          saveLabour={this.saveLabour}\r\n          toggleCreateNewLabour={this.toggleCreateNewLabour}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (isEditLabour) {\r\n      return (\r\n        <EditLabour\r\n          storeData={this.props.storeData}\r\n          activity={this.state.activity}\r\n          unit={this.state.unit}\r\n          handleChange={this.handleChange}\r\n          labourName={this.state.labourName}\r\n          labourRate={this.state.labourRate}\r\n          labourAmount={this.state.labourAmount}\r\n          labourData={this.state.labourData}\r\n          number_of_labourers={this.state.number_of_labourers}\r\n          updateLabour={this.updateLabour}\r\n          toggleEditEquipment={this.toggleEditEquipment}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isEditable && (\r\n          <section className={Style.button__display}>\r\n            <Button\r\n              onClick={this.toggleCreateNewLabour}\r\n              startIcon={<Add />}\r\n              size=\"large\"\r\n            >\r\n              Add Labour\r\n            </Button>\r\n          </section>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <MUIDataTable\r\n              title={`Labour`}\r\n              data={this.state.labourData}\r\n              columns={this.columns}\r\n              options={{\r\n                selectableRows: \"none\",\r\n                responsive: \"simple\",\r\n                pagination: false,\r\n                download: false,\r\n                viewColumns: false,\r\n                filter: true,\r\n                print: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  labour: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst EditLabour = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [labourName, setlabourname] = useState(\"\");\r\n  const [labour, setlabour] = useState([]);\r\n  const [txt, setTxt] = useState(\"\");\r\n  const [toggleText, setToggleText] = useState(false);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [projectType, setProjectType] = useState(\r\n    global.config.secureStorage.getItem(\"projectType\")\r\n  );\r\n  const loading = open && labour.length === 0;\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n\r\n  const onInputChange = e => {\r\n    const { value } = e.target;\r\n\r\n    const re = /^[A-Za-z]+$/;\r\n    if (value === \"\" || re.test(value)) {\r\n      setTxt(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setlabour(Array.from(tempMaterials));\r\n    })();\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setlabour([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     console.log(mainAct)\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);\r\n    // }\r\n    console.log(\"asdasdasd\", response);\r\n    setActivities(response.data.data);\r\n  }\r\n\r\n  // const handleMainActivityChange = (event) =>{\r\n  //    const value = event.target.value;\r\n  //    const id = mainActivities.findIndex(act=>{\r\n  //      return act.title === value;\r\n  //    });\r\n  //    console.log(id)\r\n  //    if(id>=0){\r\n  //     const activity = mainActivities[id].activities;\r\n  //     setActivities(activity);\r\n  //     props.handleMainActivity(event);\r\n  //    }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.updateLabour}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Edit to Labour\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            value={props.labourName}\r\n            margin=\"dense\"\r\n            name=\"labourName\"\r\n            id=\"labourName\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Labour\"\r\n            fullWidth\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={event => {\r\n              console.log(Number.isInteger(event.target.value));\r\n\r\n              props.handleChange(event);\r\n            }}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            value={props.unit}\r\n            margin=\"dense\"\r\n            name=\"unit\"\r\n            id=\"unit\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Unit\"\r\n            fullWidth\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={e => props.handleChange(e)}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"number_of_labourers\"\r\n            id=\"number_of_labourers\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Number of labourers\"\r\n            value={props.number_of_labourers}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"labourRate\"\r\n            id=\"labourRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Labour Salary\"\r\n            value={props.labourRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            name=\"labourAmount\"\r\n            id=\"labourAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.labourRate * props.number_of_labourers}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n            disabled\r\n          />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              {/* <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewLabour}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default EditLabour;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst AddLabour = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [labourName, setlabourname] = useState(\"\");\r\n  const [labour, setlabour] = useState([]);\r\n  const [txt, setTxt] = useState(\"\");\r\n  const [toggleText, setToggleText] = useState(false);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [projectType, setProjectType] = useState(global.config.secureStorage.getItem(\"projectType\"));\r\n  const loading = open && labour.length === 0;\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n\r\n  const onInputChange = e => {\r\n    const { value } = e.target;\r\n\r\n    const re = /^[A-Za-z]+$/;\r\n    if (value === \"\" || re.test(value)) {\r\n      setTxt(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setlabour(Array.from(tempMaterials));\r\n    })();\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setlabour([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     console.log(mainAct)\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);  \r\n    // }\r\n    console.log('asdasdasd',response)\r\n    setActivities(response.data.data);  \r\n  }\r\n\r\n  // const handleMainActivityChange = (event) =>{\r\n  //    const value = event.target.value;\r\n  //    const id = mainActivities.findIndex(act=>{\r\n  //      return act.title === value; \r\n  //    });\r\n  //    console.log(id)\r\n  //    if(id>=0){\r\n  //     const activity = mainActivities[id].activities;\r\n  //     setActivities(activity);  \r\n  //     props.handleMainActivity(event);  \r\n  //    }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.saveLabour}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Add to Labour\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            value={props.labourName}\r\n            margin=\"dense\"\r\n            name=\"labourName\"\r\n            id=\"labourName\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Labour\"\r\n            fullWidth\r\n            onKeyPress={event => (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122)}\r\n            onChange={event => {\r\n              console.log(Number.isInteger(event.target.value));\r\n            \r\n              \r\n              props.handleChange(event);\r\n\r\n            }}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            value={props.unit}\r\n            margin=\"dense\"\r\n            name=\"unit\"\r\n            id=\"unit\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Unit\"\r\n            fullWidth\r\n            onKeyPress={event => (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122)}\r\n            onChange={e => props.handleChange(e)}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"number_of_labourers\"\r\n            id=\"number_of_labourers\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Number of labourers\"\r\n            value={props.number_of_labourers}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"labourRate\"\r\n            id=\"labourRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Labour Salary\"\r\n            value={props.labourRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            name=\"labourAmount\"\r\n            id=\"labourAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.labourRate * props.number_of_labourers}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n            disabled\r\n          />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewLabour}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddLabour;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport EditEquipment from \"./EditEquipment\";\r\nimport AddEquipment from \"./AddEquipment\";\r\n// import { blue } from \"@material-ui/core/colors\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Style from \"./style.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport axios from \"axios\";\r\n// import Typography from \"material-ui/styles/typography\";\r\n// import { each } from \"lodash\";\r\n\r\nclass Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const role = global.config.secureStorage.getItem(\"role\");\r\n    const editRoles = [\"purchase_manager\", \"project_manager\", \"super_admin\"];\r\n    const isEditable = editRoles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      equipmentName: \"\",\r\n      equipmentQuantity: \"\",\r\n      equipmentRate: \"\",\r\n      equipmentAmount: \"\",\r\n      activity: \"\",\r\n      unit: \"\",\r\n      // mainActivity: \"\",\r\n      isCreateNewEquipment: false,\r\n      isEditEquipment: false,\r\n      editId: \"\",\r\n      isEditable: isEditable,\r\n      equipmentData: [],\r\n    };\r\n  }\r\n  columns = [\r\n    {\r\n      name: \"equipmentName\",\r\n      label: \"Equipment\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    // {\r\n    //   name: \"mainActivity\",\r\n    //   label: \"Main Activity\",\r\n    //   options: {\r\n    //     filter: true,\r\n    //     sort: true,\r\n    //   },\r\n    // },\r\n    {\r\n      name: \"activity\",\r\n      label: \"Activity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"unit\",\r\n      label: \"Unit\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"equipmentQuantity\",\r\n      label: \"Quantity\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"equipmentRate\",\r\n      label: \"Rate\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"equipmentAmount\",\r\n      label: \"Amount\",\r\n      options: {\r\n        filter: true,\r\n        sort: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"Edit\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                this.toggleEditEquipment(tableMeta);\r\n              }}\r\n            >\r\n              Edit\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return (\r\n            <button onClick={() => this.deleteEquipment(tableMeta.rowIndex)}>\r\n              Delete\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n  async getEquipmentData() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/equipment/getEquipment`,\r\n        {\r\n          projectId: projectId,\r\n        }\r\n      );\r\n      this.setState({ equipmentData: res.data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.getEquipmentData();\r\n    console.log(\"equipment data\");\r\n    console.log(this.state.equipmentData);\r\n  }\r\n\r\n  handleChange = (event, value = null) => {\r\n    if (value === null) {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        equipmentName: value,\r\n      });\r\n    }\r\n  };\r\n  handleActivity = event => {\r\n    this.setState({ activity: event.target.value });\r\n  };\r\n  handleMainActivity = event => {\r\n    console.log(event);\r\n    this.setState({ mainActivity: event.target.value });\r\n  };\r\n\r\n  toggleEditEquipment = tableMeta => {\r\n    let singleEquipment = [...this.state.equipmentData];\r\n    singleEquipment = singleEquipment[tableMeta.rowIndex];\r\n    console.log(\"rowIndex\" + tableMeta.rowIndex);\r\n    console.log(singleEquipment);\r\n\r\n    if (!this.state.isEditEquipment) {\r\n      this.setState({\r\n        editId: singleEquipment._id,\r\n        equipmentName: singleEquipment.equipmentName,\r\n        activity: singleEquipment.activity,\r\n        unit: singleEquipment.unit,\r\n        equipmentRate: singleEquipment.equipmentRate,\r\n        equipmentAmount: singleEquipment.equipmentAmount,\r\n        equipmentQuantity: singleEquipment.equipmentQuantity,\r\n        isEditEquipment: !this.state.isEditEquipment,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleCreateNewEquipment = () => {\r\n    this.setState({\r\n      equipmentName: \"\",\r\n      activity: \"\",\r\n      unit: \"\",\r\n      equipmentRate: \"\",\r\n      equipmentAmount: \"\",\r\n      equipmentQuantity: \"\",\r\n      isCreateNewEquipment: !this.state.isCreateNewEquipment,\r\n    });\r\n  };\r\n\r\n  deleteEquipment = async id => {\r\n    let singleEquipment = [...this.state.equipmentData];\r\n    singleEquipment = singleEquipment[id];\r\n    try {\r\n      const res = await axios.post(\r\n        `${global.config.backendURL}/equipment/deleteEquipment/${singleEquipment._id}`\r\n      );\r\n      let tempData = this.state.equipmentData;\r\n      tempData.splice(id, 1);\r\n      console.log(tempData);\r\n      this.setState({\r\n        equipementName: \"\",\r\n        equipmentQuantity: \"\",\r\n        equipmentRate: \"\",\r\n        equipmentAmount: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        equipmentData: tempData,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  updateEquipment = async event => {\r\n    event.preventDefault();\r\n\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const finalEquipment = {\r\n      projectId,\r\n      equipmentName: this.state.equipmentName,\r\n      equipmentQuantity: this.state.equipmentQuantity,\r\n      equipmentRate: this.state.equipmentRate,\r\n      equipmentAmount: this.state.equipmentRate * this.state.equipmentQuantity,\r\n      unit: this.state.unit,\r\n      activity: this.state.activity,\r\n      _id: this.state.editId,\r\n    };\r\n\r\n    const num = Number(this.state.equipmentName);\r\n    if (Number.isInteger(num)) {\r\n      alert(\"Please enter valid equipment\");\r\n      this.setState({ equipmentName: \"\" });\r\n    } else {\r\n      let tempData = [...this.state.equipmentData];\r\n      console.log(this.state.editId);\r\n      if (this.state.editId != undefined) {\r\n        try {\r\n          const res = await axios.post(\r\n            `${global.config.backendURL}/equipment/editEquipment/${this.state.editId}`,\r\n            {\r\n              ...finalEquipment,\r\n            }\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n        let objIndex = tempData.findIndex(obj => obj._id == this.state.editId);\r\n        tempData[objIndex] = finalEquipment;\r\n      }\r\n      this.setState({\r\n        editId: \"\",\r\n        isEditEquipment: !this.state.isEditEquipment,\r\n        equipementName: \"\",\r\n        equipmentQuantity: \"\",\r\n        equipmentRate: \"\",\r\n        equipmentAmount: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        equipmentData: tempData,\r\n      });\r\n    }\r\n  };\r\n\r\n  saveEquipment = async event => {\r\n    event.preventDefault();\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const finalEquipment = {\r\n      projectId,\r\n      equipmentName: this.state.equipmentName,\r\n      equipmentQuantity: this.state.equipmentQuantity,\r\n      equipmentRate: this.state.equipmentRate,\r\n      equipmentAmount: this.state.equipmentRate * this.state.equipmentQuantity,\r\n      unit: this.state.unit,\r\n      activity: this.state.activity,\r\n    };\r\n    const num = Number(this.state.equipmentName);\r\n    console.log(Number.isInteger(num));\r\n    if (Number.isInteger(num)) {\r\n      alert(\"Please enter valid equipment\");\r\n      this.setState({ equipmentName: \"\" });\r\n    } else {\r\n      try {\r\n        const res = await axios.post(\r\n          `${global.config.backendURL}/equipment/addToEquipment`,\r\n          {\r\n            ...finalEquipment,\r\n          }\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      let tempData = [...this.state.equipmentData, finalEquipment];\r\n      console.log(tempData);\r\n\r\n      this.setState({\r\n        equipementName: \"\",\r\n        equipmentQuantity: \"\",\r\n        equipmentRate: \"\",\r\n        equipmentAmount: \"\",\r\n        activity: \"\",\r\n        unit: \"\",\r\n        isEditEquipment: false,\r\n        isCreateNewEquipment: !this.state.isCreateNewEquipment,\r\n        equipmentData: tempData,\r\n      });\r\n    }\r\n\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const { isCreateNewEquipment, isEditEquipment } = this.state;\r\n    if (isCreateNewEquipment) {\r\n      return (\r\n        <AddEquipment\r\n          storeData={this.props.storeData}\r\n          handleChange={this.handleChange}\r\n          equipmentName={this.state.equipmentName}\r\n          equipmentQuantity={this.state.equipmentQuantity}\r\n          equipmentRate={this.state.equipmentRate}\r\n          equipmentAmount={this.state.equipmentAmount}\r\n          unit={this.state.unit}\r\n          activity={this.state.activity}\r\n          saveEquipment={this.saveEquipment}\r\n          equipmentData={this.equipmentData}\r\n          toggleCreateNewEquipment={this.toggleCreateNewEquipment}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n    if (isEditEquipment) {\r\n      return (\r\n        <EditEquipment\r\n          storeData={this.props.storeData}\r\n          handleChange={this.handleChange}\r\n          equipmentName={this.state.equipmentName}\r\n          equipmentQuantity={this.state.equipmentQuantity}\r\n          equipmentRate={this.state.equipmentRate}\r\n          equipmentAmount={this.state.equipmentAmount}\r\n          unit={this.state.unit}\r\n          activity={this.state.activity}\r\n          updateEquipment={this.updateEquipment}\r\n          equipmentData={this.equipmentData}\r\n          toggleEditEquipment={this.toggleEditEquipment}\r\n          handleActivity={this.handleActivity}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {this.state.isEditable && (\r\n          <section className={Style.button__display}>\r\n            <Button\r\n              onClick={this.toggleCreateNewEquipment}\r\n              startIcon={<Add />}\r\n              size=\"large\"\r\n            >\r\n              Add Equipments\r\n            </Button>\r\n          </section>\r\n        )}\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            {this.state.equipmentData !== undefined && (\r\n              <MUIDataTable\r\n                title={`Equipments`}\r\n                data={this.state.equipmentData}\r\n                columns={this.columns}\r\n                options={{\r\n                  selectableRows: \"none\",\r\n                  responsive: \"simple\",\r\n                  pagination: false,\r\n                  download: false,\r\n                  viewColumns: false,\r\n                  filter: true,\r\n                  print: false,\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDisplay.propTypes = {\r\n  equipment: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst EditEquipment = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [equipment, setequipment] = useState([]);\r\n  const [txt, setTxt] = useState(\"\");\r\n  const [toggleText, setToggleText] = useState(false);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n  const [projectType, setProjectType] = useState(\r\n    global.config.secureStorage.getItem(\"projectType\")\r\n  );\r\n  const loading = open && equipment.length === 0;\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setequipment(Array.from(tempMaterials));\r\n    })();\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setequipment([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);\r\n    // }\r\n    setActivities(response.data.data);\r\n  }\r\n  //   const handleMainActivityChange = (event) =>{\r\n  //     const value = event.target.value;\r\n  //     const id = mainActivities.findIndex(act=>{\r\n  //       return act.title === value;\r\n  //     });\r\n  //     console.log(id)\r\n  //     if(id>=0){\r\n  //      const activity = mainActivities[id].activities;\r\n  //      console.log(activity);\r\n  //      setActivities(activity);\r\n  //      props.handleMainActivity(event);\r\n  //     }\r\n  //  }\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.updateEquipment}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Edit to Equipment\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            value={props.equipmentName}\r\n            margin=\"dense\"\r\n            name=\"equipmentName\"\r\n            id=\"equipmentName\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Equipment\"\r\n            fullWidth\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            value={props.unit}\r\n            margin=\"dense\"\r\n            name=\"unit\"\r\n            id=\"unit\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Unit\"\r\n            fullWidth\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={e => props.handleChange(e)}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentQuantity\"\r\n            id=\"equipmentQuantity\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Equipment Quantity\"\r\n            value={props.equipmentQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentRate\"\r\n            id=\"equipmentRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Rate\"\r\n            value={props.equipmentRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentAmount\"\r\n            id=\"equipmentAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.equipmentRate * props.equipmentQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n            disabled\r\n          />\r\n          <br />\r\n          <br />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              {/* <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleEditEquipment}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default EditEquipment;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Save, Cancel, Add as AddIcon } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Style from \"./style.module.scss\";\r\nimport { isInteger } from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst AddEquipment = props => {\r\n  const [open, setOpen] = useState(false);\r\n  const [equipment, setequipment] = useState([]);\r\n  const [txt, setTxt] = useState(\"\");\r\n  const [toggleText, setToggleText] = useState(false);\r\n  const [activities, setActivities] = useState([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [mainActivities, setMainActivities] = useState([]);\r\n  const [projectType, setProjectType] = useState(global.config.secureStorage.getItem(\"projectType\"));\r\n\r\n  const loading = open && equipment.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    var tempMaterials = new Set();\r\n    (() => {\r\n      props.storeData.map(ele => {\r\n        return tempMaterials.add(ele.materialName);\r\n      });\r\n      setequipment(Array.from(tempMaterials));\r\n    })();\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setequipment([]);\r\n    }\r\n    getActivities();\r\n  }, [open]);\r\n\r\n  async function getActivities() {\r\n    let projectId = await global.config.secureStorage.getItem(\"projectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n    // if(projectType === \"Infrastructure\"){\r\n    //   const mainActivities = response.data.data.map((mainAct,index)=>{\r\n    //     return {\r\n    //       id: index,\r\n    //       title : mainAct.name,\r\n    //       activities : mainAct.data\r\n    //     };\r\n    //   });\r\n    //   setMainActivities(mainActivities);\r\n    // }\r\n    // else{\r\n    //   setActivities(response.data.data[0].data);  \r\n    // }\r\n    setActivities(response.data.data);  \r\n  }\r\n\r\n//   const handleMainActivityChange = (event) =>{\r\n//     const value = event.target.value;\r\n//     const id = mainActivities.findIndex(act=>{\r\n//       return act.title === value; \r\n//     });\r\n//     console.log(id)\r\n//     if(id>=0){\r\n//      const activity = mainActivities[id].activities;\r\n//      console.log(activity);\r\n//      setActivities(activity);  \r\n//      props.handleMainActivity(event);  \r\n//     }\r\n//  }\r\n\r\n  return (\r\n    <div>\r\n      <section className={Style.create__material}>\r\n        <form onSubmit={props.saveEquipment}>\r\n          <center>\r\n            <Typography variant=\"overline\" style={{ fontSize: \"1.5em\" }}>\r\n              Add to Equipment\r\n            </Typography>\r\n          </center>\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            value={props.equipmentName}\r\n            margin=\"dense\"\r\n            name=\"equipmentName\"\r\n            id=\"equipmentName\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Equipment\"\r\n            fullWidth\r\n            onKeyPress={event =>\r\n              (event.charCode >= 65 && event.charCode <= 90) ||\r\n              (event.charCode >= 97 && event.charCode <= 122)\r\n            }\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          {/* {projectType === \"Infrastructure\"?\r\n          <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Main Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"mainActivity\"\r\n              id=\"mainActivity\"\r\n              value={props.mainActivity}\r\n              label=\"mainActivity\"\r\n              onChange={event => {\r\n                handleMainActivityChange(event);\r\n              }}\r\n              required\r\n            >\r\n              {mainActivities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          </>\r\n          :''\r\n          } */}\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"activity\">Activity</InputLabel>\r\n\r\n            <Select\r\n              labelId=\"activity\"\r\n              id=\"activity\"\r\n              value={props.activity}\r\n              label=\"activity\"\r\n              onChange={event => {\r\n                props.handleActivity(event);\r\n              }}\r\n              required\r\n            >\r\n              {activities.map(item => (\r\n                <MenuItem value={item.title}>{item.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            value={props.unit}\r\n            margin=\"dense\"\r\n            name=\"unit\"\r\n            id=\"unit\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            label=\"Unit\"\r\n            fullWidth\r\n            onKeyPress={event => (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122)}\r\n            onChange={e => props.handleChange(e)}\r\n            required\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentQuantity\"\r\n            id=\"equipmentQuantity\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Equipment Quantity\"\r\n            value={props.equipmentQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentRate\"\r\n            id=\"equipmentRate\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              props.handleChange(event);\r\n            }}\r\n            label=\"Rate\"\r\n            value={props.equipmentRate}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n          />\r\n          <br />\r\n\r\n          <br />\r\n          <TextField\r\n            name=\"equipmentAmount\"\r\n            id=\"equipmentAmount\"\r\n            variant=\"outlined\"\r\n            onChange={event => {\r\n              if (isInteger(parseInt(event.target.value))) {\r\n                props.handleChange(event);\r\n              }\r\n            }}\r\n            label=\"Amount\"\r\n            value={props.equipmentRate * props.equipmentQuantity}\r\n            type=\"number\"\r\n            required\r\n            fullWidth\r\n            disabled\r\n          />\r\n          <br />\r\n          <br />\r\n          <Grid justify=\"center\" container>\r\n            <Grid className=\"mr-4\" item>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={props.toggleCreateNewEquipment}\r\n                startIcon={<Cancel />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AddEquipment;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"../Components/Loading\";\r\nimport axios from \"axios\";\r\nimport * as action from \"../Redux/loginRedux/loginAction\";\r\nimport { connect } from \"react-redux\";\r\nimport roles from \"./NewProject/userRoles\";\r\n\r\nconst ProtectedRoute = props => {\r\n  const { component: Component, ...rest } = props;\r\n  const [credentialsValid, setCredentialsValid] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  var token = global.config.secureStorage.getItem(\"construction-auth-token\");\r\n\r\n  //   const isValidRole = role => {\r\n  //     if (props.path === \"/projectList\") {\r\n  //       return true;\r\n  //     }\r\n  //     const roleKeys = roles.map(item => item.key);\r\n  //     if (!roleKeys.find(item => item === role)) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   };\r\n\r\n  // var token = global.config.secureStorage.getItem(\"construction-auth-token\");\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      //   const role = global.config.secureStorage.getItem(\"role\");\r\n      try {\r\n        // if (!isValidRole(role)) {\r\n        //   throw Error(\"Invalid role\");\r\n        // }\r\n\r\n        const resp = await axios.post(\r\n          `${global.config.backendURL}/users/verify`,\r\n          {\r\n            /* Backend route to be written. */\r\n            headers: {\r\n              \"construction-auth-token\": token,\r\n              route: props.path,\r\n              username: global.config.secureStorage.getItem(\"username\"),\r\n              role: global.config.secureStorage.getItem(\"role\"),\r\n              projectId: global.config.secureStorage.getItem(\"projectId\"),\r\n            },\r\n          }\r\n        );\r\n\r\n        setCredentialsValid(resp.data.res);\r\n        setValidated(true);\r\n      } catch (err) {\r\n        // global.config.secureStorage.clear();\r\n        setCredentialsValid(false);\r\n        setValidated(true);\r\n        props.logout();\r\n      }\r\n    };\r\n    verifyToken();\r\n  }, []);\r\n\r\n  if (credentialsValid && validated) {\r\n    return (\r\n      <Route {...rest} render={props => <Component {...rest} {...props} />} />\r\n    );\r\n  } else if (!credentialsValid && validated) {\r\n    props.logout();\r\n\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return <Loading />;\r\n  }\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(action.logout()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProtectedRoute);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  LinerProgressColor: {\r\n    backgroundColor: \"red\",\r\n  },\r\n};\r\nconst WhiteTextTypography = withStyles({\r\n  root: {\r\n    color: \"#FFFFFF\",\r\n  },\r\n})(Typography);\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 20,\r\n    width: \"100%\",\r\n    backgroundColor: \"gray\",\r\n    borderRadius: \"7px\",\r\n  },\r\n  bar: {\r\n    borderRadius: 10,\r\n    backgroundColor: \"primary\",\r\n  },\r\n})(LinearProgress);\r\nexport default function ProgressBar(props) {\r\n  let value = props.value;\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" style={{ width: \"50%\" }}>\r\n      <BorderLinearProgress\r\n        color=\"primary\"\r\n        variant=\"determinate\"\r\n        value={value}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <WhiteTextTypography variant=\"body2\">{`${value}%`}</WhiteTextTypography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Box,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport FileBase64 from \"react-file-base64\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Add as AddIcon, Update, Edit, Delete } from \"@material-ui/icons\";\r\n\r\nimport ProgressBar from \"../../Components/ProgessBar\";\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    maxHeight: \"80vh\",\r\n    overflowY: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n      webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"primary\",\r\n      outline: \"1px solid slategrey\",\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 150,\r\n  },\r\n  image: {\r\n    maxWidth: \"60%\",\r\n    \"&:hover\": {\r\n      padding: \"22px\",\r\n      // opacity: 0.8,\r\n    },\r\n  },\r\n  btn: {\r\n    padding: 20,\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n  },\r\n  getcol: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n  imageFull: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function SubTaskTable(props) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modelImageUrl, setModelImageUrl] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleShowDialog = url => {\r\n    setModelImageUrl(url);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog\r\n          open={isModalOpen}\r\n          fullScreen={fullScreen}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Panaroma Image</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <img\r\n                className={classes.imageFull}\r\n                src={modelImageUrl}\r\n                alt=\"ss\"\r\n                loading=\"lazy\"\r\n              />\r\n            </DialogContentText>\r\n            <DialogActions\r\n              style={{ marginBottom: \"1.5em\", marginRight: \"1em\" }}\r\n            >\r\n              <Button\r\n                onClick={() => {\r\n                  setIsModalOpen(false);\r\n                }}\r\n                color=\"secondary\"\r\n              >\r\n                Close\r\n              </Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n      <Accordion expanded={true}>\r\n        <AccordionSummary\r\n          style={{ backgroundColor: \"#fff\" }}\r\n          aria-controls=\"panel1d-content\"\r\n        >\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">\r\n              {props.subTaskData != null ? props.subTaskData.name : \"\"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              className=\"m-2\"\r\n              color=\"primary\"\r\n              onClick={props.handleModalOpen}\r\n              startIcon={<Edit />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Grid>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ display: \"inline\" }}>\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ padding: 20, width: \"80%\", margin: \"auto\" }}\r\n          >\r\n            <Slider\r\n              key={`slider-${props.subTaskPercentage}`}\r\n              aria-label=\"Temperature\"\r\n              defaultValue={props.subTaskPercentage}\r\n              valueLabelDisplay=\"auto\"\r\n              step={10}\r\n              marks\r\n              min={0}\r\n              max={100}\r\n              onChange={props.addPercentage}\r\n            />\r\n            <Button color=\"primary\" startIcon={<Update />}>\r\n              <FileBase64\r\n                multiple={false}\r\n                className=\"btn\"\r\n                value={props.subTaskPanaroma}\r\n                onDone={file => {\r\n                  // files.forEach(ele => ele.base64);\r\n                  props.handlePanaroma(file.base64);\r\n                }}\r\n              />\r\n            </Button>\r\n            <Button\r\n              className=\"m-2\"\r\n              color=\"primary\"\r\n              onClick={props.updateSubTask}\r\n              startIcon={<Update />}\r\n            >\r\n              Update\r\n            </Button>\r\n\r\n            {/* <ProgressBar value={props.subTaskPercentage} /> */}\r\n          </Grid>\r\n\r\n          <Divider variant=\"middle\" />\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{\r\n              marginTop: 20,\r\n              padding: 20,\r\n            }}\r\n          >\r\n            {/* <Grid item lg={6}>\r\n              <TableContainer\r\n                style={{ width: \"100%\", backgroundColor: \"#fff\" }}\r\n                aria-label=\"custom pagination table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell align=\"center\" style={{ width: \"100%\" }}>\r\n                      Quantity\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\" style={{ width: \"100%\" }}>\r\n                      Unit\r\n                    </StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow key={0}>\r\n                    <TableCell style={{ padding: 0 }} align=\"center\">\r\n                      <Typography align={\"center\"} variant=\"h6\" align=\"center\">\r\n                        {props.subTaskData.quantity}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell style={{ padding: 0 }} align=\"center\">\r\n                      <Typography align={\"center\"} variant=\"h6\" align=\"center\">\r\n                        {props.subTaskData.unit}\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </TableContainer>\r\n            </Grid> */}\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{ marginTop: 60, padding: 20, backgroundColor: \"#345BAE\" }}\r\n          >\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Grid item className=\"m-4\">\r\n                <Typography variant=\"h6\" style={{ color: \"#fff\" }}>\r\n                  Update Details:\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n              {/* {console.log(props.activityUpdateDetails)} */}\r\n              {props.activityUpdateDetails != undefined &&\r\n              props.activityUpdateDetails.length > 0\r\n                ? props.activityUpdateDetails.map((detail, detailIndex) => {\r\n                    return (\r\n                      <Card\r\n                        variant=\"outlined\"\r\n                        style={{ padding: \"5px\", width: \"100%\" }}\r\n                        elevation={3}\r\n                      >\r\n                        <CardContent>\r\n                          <Grid container spacing={2}>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={6}\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              <Typography className={classes.getcol}>\r\n                                <strong>Updated by: </strong>\r\n                                {detail.user}\r\n                              </Typography>\r\n                              <Typography className={classes.getcol}>\r\n                                <strong>Update Date : </strong>\r\n                                {detail.date}\r\n                              </Typography>\r\n                              <Typography className={classes.getcol}>\r\n                                <strong>Update Percentage: </strong>\r\n                                {detail.updatedPercentage}%\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              md={6}\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  handleShowDialog(detail.panaroma)\r\n                                }\r\n                                // startIcon={<Info />\r\n                              >\r\n                                View Panaroma\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </CardContent>\r\n                      </Card>\r\n                    );\r\n                  })\r\n                : \"No Updates\"}\r\n              {/* <Grid item style={{ position: \"relative\" }}>\r\n                  <IconButton\r\n                    aria-label=\"settings\"\r\n                    // onClick={this.handleExpandClick}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 10,\r\n                      backgroundColor: \"red\",\r\n                      color: \"#fff\",\r\n                      padding: 4,\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                  <img\r\n                    className={classes.image}\r\n                    src={`https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg`}\r\n                    alt=\"ss\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ position: \"relative\" }}>\r\n                  <IconButton\r\n                    aria-label=\"settings\"\r\n                    // onClick={this.handleExpandClick}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 10,\r\n                      backgroundColor: \"red\",\r\n                      color: \"#fff\",\r\n                      padding: 4,\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                  <img\r\n                    className={classes.image}\r\n                    src={`https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg`}\r\n                    alt=\"ss\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ position: \"relative\" }}>\r\n                  <IconButton\r\n                    aria-label=\"settings\"\r\n                    // onClick={this.handleExpandClick}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 10,\r\n                      backgroundColor: \"red\",\r\n                      color: \"#fff\",\r\n                      padding: 4,\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                  <img\r\n                    className={classes.image}\r\n                    src={`https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg`}\r\n                    alt=\"ss\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\nexport class BarchartData extends Component {\r\n  createDataset = (props) =>{\r\n    const arr = [{\r\n      label: props.percentageLabel,\r\n      data: props.percentage,\r\n      backgroundColor: [\"#345BAE\"],\r\n    }]\r\n\r\n    if(props.percentage1) arr.push({\r\n      label: props.percentage1Label,\r\n      data: props.percentage1,\r\n      backgroundColor: [\"#eea47fff\"],\r\n    });\r\n    return arr;\r\n  }\r\n  constructor(props) {\r\n    console.log(props.accNames, props.percentage, props.percentage1);\r\n    Chart.register(...registerables);\r\n    // console.log(iterList);\r\n    super(props);\r\n    // const isAddVisible = roles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      chartData: {\r\n        labels: props.accNames,\r\n        datasets: this.createDataset(props),\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={\r\n            { \r\n              maintainAspectRatio: false, \r\n              indexAxis:'y', \r\n              responsive:true, \r\n              scales: {\r\n                x: {\r\n                  stacked: true,\r\n                  display:false\r\n                },\r\n                y: {\r\n                  stacked: true,\r\n                  display:false\r\n                }\r\n              } \r\n            }\r\n          }\r\n          height={200}\r\n          width={50}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarchartData;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  CardActions,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Edit as EditIcon,\r\n  Add as AddIcon,\r\n  Close as CloseIcon,\r\n  AddComment as AddCommentIcon,\r\n} from \"@material-ui/icons\";\r\nimport BarchartData from \"./Barchart\";\r\nexport default function Activity({\r\n  editActivity,\r\n  activityName,\r\n  estimatedcompletion,\r\n  actualcompletion,\r\n  index,\r\n  addRemark,\r\n  activityRemark,\r\n  isEditable,\r\n  estimatedcompletion_by_cost,\r\n  actualcompletion_by_cost,\r\n}) {\r\n  var [toggleRemark, setToggleRemark] = useState(false);\r\n  var [remark, setRemark] = useState(\"\");\r\n  var [label1, setLabel1] = useState(\"Estimated Completion\");\r\n  var [label2, setLabel2] = useState(\"Actual Completion\");\r\n  const handleChange = e => {\r\n    if (e.target.value == \"Cost\") {\r\n      console.log(estimatedcompletion_by_cost);\r\n      setValue(estimatedcompletion_by_cost);\r\n      setValue2(actualcompletion_by_cost);\r\n      setLabel1(\"Estimated Cost\");\r\n      setLabel2(\"Actual Cost\");\r\n    } else {\r\n      setValue(estimatedcompletion);\r\n      setValue2(actualcompletion);\r\n      setLabel1(\"Estimated Completion\");\r\n      setLabel2(\"Actual Completion\");\r\n    }\r\n  };\r\n  var [value1, setValue] = useState(estimatedcompletion);\r\n  var [value2, setValue2] = useState(actualcompletion);\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ padding: \"5px\", marginBottom: \"15px\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">\r\n          <strong>{activityName}</strong>\r\n        </Typography>\r\n        <RadioGroup\r\n          row\r\n          defaultValue=\"Time\"\r\n          color=\"secondary\"\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Time\"\r\n            label=\"Time\"\r\n            control={<Radio color=\"default\" />}\r\n          />\r\n          <FormControlLabel\r\n            value=\"Cost\"\r\n            label=\"Cost\"\r\n            control={<Radio color=\"default\" />}\r\n          />\r\n        </RadioGroup>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} lg={3} md={3}>\r\n            <strong>{label1}:</strong>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} lg={9} md={9}>\r\n            {value1 &&\r\n            value1 !== \"Not available\" &&\r\n            value1 !== \"Not started yet\" ? (\r\n              label1 === \"Estimated Cost\" ? (\r\n                parseFloat(value1).toFixed(2) === \"NaN\" ? (\r\n                  <span style={{ verticalAlign: \"sub\" }}>\r\n                    <progress value=\"0\" max=\"100\"></progress>0.00%\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ verticalAlign: \"sub\" }}>\r\n                    <progress\r\n                      value={parseFloat(value1).toFixed(2)}\r\n                      max=\"100\"\r\n                    ></progress>{\" \"}\r\n                    ₹{parseFloat(value1).toFixed(2)}\r\n                  </span>\r\n                )\r\n              ) : (\r\n                <span style={{ verticalAlign: \"sub\" }}>\r\n                  <progress\r\n                    value={parseFloat(value1).toFixed(2)}\r\n                    max=\"100\"\r\n                  ></progress>{\" \"}\r\n                  {parseFloat(value1).toFixed(2)}%\r\n                </span>\r\n              )\r\n            ) : (\r\n              <span style={{ verticalAlign: \"sub\" }}>\r\n                <progress value=\"0\" max=\"100\"></progress>0.00%\r\n              </span>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} lg={3} md={3}>\r\n            <strong>{label2} :</strong>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} lg={9} md={9}>\r\n            {value2 &&\r\n            value2 !== \"Not available\" &&\r\n            value2 !== \"Not started yet\" ? (\r\n              label2 === \"Actual Cost\" ? (\r\n                parseFloat(value2).toFixed(2) === \"NaN\" ? (\r\n                  <span style={{ verticalAlign: \"sub\" }}>\r\n                    <progress value=\"0\" max=\"100\"></progress>0.00%\r\n                  </span>\r\n                ) : (\r\n                  <span style={{ verticalAlign: \"sub\" }}>\r\n                    <progress\r\n                      value={parseFloat(value2).toFixed(2)}\r\n                      max={value1}\r\n                    ></progress>{\" \"}\r\n                    ₹{parseFloat(value2).toFixed(2)}\r\n                  </span>\r\n                )\r\n              ) : (\r\n                <span style={{ verticalAlign: \"sub\" }}>\r\n                  <progress\r\n                    value={parseFloat(value2).toFixed(2)}\r\n                    max=\"100\"\r\n                  ></progress>{\" \"}\r\n                  {parseFloat(value2).toFixed(2)}%\r\n                </span>\r\n              )\r\n            ) : (\r\n              <span style={{ verticalAlign: \"sub\" }}>\r\n                <progress value=\"0\" max=\"100\"></progress>0.00%\r\n              </span>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {/* {activityRemark !== undefined ? (\r\n          <Typography>\r\n            <strong>Remark :</strong> {activityRemark}\r\n          </Typography>\r\n        ) : (\r\n          <></>\r\n        )} */}\r\n\r\n        {/* <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginTop: \"1rem\" }}\r\n          onClick={() => editActivity(activityName, index)}\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Edit\r\n        </Button> */}\r\n        {/* {isEditable && (\r\n          <>\r\n            {!toggleRemark ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: \"1rem\" }}\r\n                onClick={() => setToggleRemark(true)}\r\n                startIcon={<AddCommentIcon />}\r\n              >\r\n                Remarks\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <CardActions style={{ marginLeft: \"5px\" }}>\r\n                  <Grid container>\r\n                    <Grid className=\"mt-4\" item>}\r\n                      <TextField\r\n                        name=\"remark\"\r\n                        value={remark}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={e => setRemark(e.target.value)}\r\n                        id=\"remark\"\r\n                        label=\"Remarks\"\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid className=\"ml-2 mt-4\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setToggleRemark(false);\r\n                          // addDeliveryDate(deliveryDate, id);\r\n                          addRemark(remark, index);\r\n                        }}\r\n                        startIcon={<AddIcon />}\r\n                      >\r\n                        Done\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid className=\"ml-2 mt-4\" item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setToggleRemark(false)}\r\n                        startIcon={<CloseIcon />}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardActions>\r\n              </>\r\n            )}\r\n          </>\r\n        )} */}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const ISSUE_GET_SUCCESS = \"GET_SUCCESS\";\r\nexport const ISSUE_GET_FAILURE = \"GET_FAILURE\";\r\nexport const ISSUE_ADD_FAILURE = \"ADD_FAILURE\";\r\nexport const ISSUE_ADD_SUCCESS = \"ADD_SUCCESS\";\r\nexport const ISSUE_REMOVE_SUCCESS = \"REMOVE_SUCCESS\";\r\nexport const ISSUE_REMOVE_FAILURE = \"REMOVE_FAILURE\";\r\nexport const ISSUE_ASK_APPROVAL_SUCCESS = \"ISSUE_ASK_APPROVAL_SUCCESS\";\r\nexport const ISSUE_ASK_APPROVAL_FAILURE = \"ISSUE_ASK_APPROVAL_FAILURE\";\r\nexport const ISSUE_LOADING = \"ISSUE_LOADING\";\r\n","require(\"dotenv\").config();\r\nconst SecureStorage = require(\"secure-web-storage\");\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nmodule.exports = global.config = {\r\n  // backendURL: \"http://localhost:5000/api\",\r\n  // backendURL: \"http://137.184.13.236:5000/api\",\r\n  // backendURL: \"https://en2.herokuapp.com/api\",\r\n  backendURL: \"https://enbuild.in/api\",\r\n  rolesWithStoreDrawerVisible: [\"store_manager\", \"purchase_manager\"],\r\n  secureStorage: new SecureStorage(localStorage, {\r\n    hash: function hash(key) {\r\n      key = CryptoJS.SHA256(key, process.env.REACT_APP_SECRET_KEY);\r\n\r\n      return key.toString();\r\n    },\r\n    encrypt: function encrypt(data) {\r\n      data = CryptoJS.AES.encrypt(data, process.env.REACT_APP_SECRET_KEY);\r\n\r\n      data = data.toString();\r\n\r\n      return data;\r\n    },\r\n    decrypt: function decrypt(data) {\r\n      data = CryptoJS.AES.decrypt(data, process.env.REACT_APP_SECRET_KEY);\r\n\r\n      data = data.toString(CryptoJS.enc.Utf8);\r\n\r\n      return data;\r\n    },\r\n  }),\r\n};\r\n","export const ADD_LOADING = \"ADD_LOADING\";\r\nexport const ADD_PLAN = \"ADD_PLAN\";\r\nexport const PLAN_FAILURE = \"PLAN_FAILURE\";\r\nexport const PLAN_SUCCESS = \"PLAN_SUCCESS\";\r\nexport const GET_PLAN = \"GET_PLAN\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material__container\":\"style_material__container__1ONoR\",\"material__input\":\"style_material__input__2Dq7T\",\"button\":\"style_button__1TxNE\",\"add__material__header\":\"style_add__material__header__T1fv3\",\"all__material\":\"style_all__material__2MpHH\",\"material__title\":\"style_material__title__2gTaR\",\"create__material\":\"style_create__material__1xjHs\",\"no__material\":\"style_no__material__3byB_\",\"button__wrapper\":\"style_button__wrapper__AlK2k\",\"button__display\":\"style_button__display__1lDy3\",\"label__name\":\"style_label__name__3YjLJ\",\"modify__material\":\"style_modify__material__3snVe\"};","import {\r\n  SET_LOADING,\r\n  SUCCESS_UPDATE_ACTIVITY_DETAILS,\r\n  ERROR_UPDATE_ACTIVITY_DETAILS,\r\n  ERROR_GET_ACTIVITY_DETAILS,\r\n  SUCCESS_GET_ACTIVITY_DETAILS,\r\n  SUCCESS_GET_ACTIVITY_UPDATE_DETAILS,\r\n  CLEAR_CHECKED_ARRAY,\r\n  DONE_UPDATING_ACTIVITY,\r\n  SUCCESS_GET_DEFAULT_ACTIVITY,\r\n  SUCCESS_UPDATE_DETAILS,\r\n  // SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n} from \"./activityActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst loadingActionHelper = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n\r\nconst successDefaultActionHelper = (activities, percentage) => {\r\n  return {\r\n    type: SUCCESS_GET_DEFAULT_ACTIVITY,\r\n    activities,\r\n    percentage,\r\n  };\r\n};\r\n\r\n// const successDefaultNamesActionHelper = data => {\r\n//   return {\r\n//     type: SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n//     payload: data\r\n//   };\r\n// };\r\n\r\nconst successActionHelper = data => {\r\n  return {\r\n    type: SUCCESS_GET_ACTIVITY_DETAILS,\r\n    payload: data,\r\n  };\r\n};\r\nconst successUpdateHelper = data => {\r\n  return {\r\n    type: SUCCESS_GET_ACTIVITY_UPDATE_DETAILS,\r\n    payload: data,\r\n  };\r\n};\r\nconst successUpdateDets = data => {\r\n  return {\r\n    type: SUCCESS_UPDATE_DETAILS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst clearCheckedArrayHelper = () => {\r\n  return {\r\n    type: CLEAR_CHECKED_ARRAY,\r\n  };\r\n};\r\n\r\nconst errorActionHelper = error => {\r\n  return {\r\n    type: ERROR_GET_ACTIVITY_DETAILS,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const getDefaultActivities = () => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n\r\n  try {\r\n    const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n\r\n    const subprojectId = global.config.secureStorage.getItem(\"subprojectId\");\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/activities/getDefaultActivities/${projectId}`\r\n    );\r\n\r\n    const perc = await axios.get(\r\n      `${global.config.backendURL}/activities/getPercentage/${projectId}/${subprojectId}`\r\n    );\r\n    console.log(perc);\r\n    dispatch(successDefaultActionHelper(response.data, perc.data));\r\n    // dispatch(successDefaultActionHelper(response.data));\r\n  } catch (error) {\r\n    dispatch(errorActionHelper(error.message));\r\n  }\r\n};\r\n\r\nexport const updateDefaultActivities = (id, newActivity) => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n  try {\r\n    const response = await axios.put(\r\n      `${global.config.backendURL}/activities/updateDefaultActivities/${id}`,\r\n      newActivity\r\n    );\r\n\r\n    dispatch({ type: SUCCESS_UPDATE_ACTIVITY_DETAILS });\r\n  } catch (error) {\r\n    dispatch(errorActionHelper(error.message));\r\n  }\r\n};\r\n\r\nexport const getTaskActivityDetails =\r\n  ({ activity, subprojectId }) =>\r\n    async dispatch => {\r\n      //\r\n      dispatch(loadingActionHelper());\r\n      try {\r\n        const res = await axios.get(\r\n          `${global.config.backendURL}/activities/getActivity?activity=${activity}&subprojectId=${subprojectId}`\r\n        );\r\n        // console.log(\"ss\", res);\r\n        dispatch(successActionHelper(res.data));\r\n      } catch (err) {\r\n        errorActionHelper(err);\r\n        dispatch(errorActionHelper(err.data));\r\n      }\r\n    };\r\n\r\nexport const updateTaskActivityDetails = data => async dispatch => {\r\n  dispatch({ type: SET_LOADING });\r\n  try {\r\n    const res = axios.post(\r\n      `${global.config.backendURL}/activities/updateActivity`,\r\n      data\r\n    );\r\n\r\n    dispatch({ type: SUCCESS_UPDATE_ACTIVITY_DETAILS });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR_UPDATE_ACTIVITY_DETAILS });\r\n  }\r\n};\r\n\r\nexport const getUpdateDetails =\r\n  ({ randomid }) =>\r\n    async dispatch => {\r\n      //\r\n      // dispatch(loadingActionHelper());\r\n      try {\r\n        const res = await axios.get(\r\n          `${global.config.backendURL}/activities/getUpdateDetails?randomid=${randomid}`\r\n        );\r\n        dispatch(successUpdateHelper(res.data));\r\n      } catch (err) {\r\n        errorActionHelper(err);\r\n        dispatch(errorActionHelper(err.data));\r\n      }\r\n    };\r\nexport const updateDetails = data => async dispatch => {\r\n  dispatch({ type: SET_LOADING });\r\n  try {\r\n    const res = axios.post(\r\n      `${global.config.backendURL}/activities/updateDetails`,\r\n      data\r\n    );\r\n    // console.log(data.randomid);\r\n\r\n    dispatch(getUpdateDetails(data.randomid));\r\n    successUpdateDets(res.data);\r\n  } catch (err) {\r\n    console.log(err);\r\n    // dispatch({ type: ERROR_UPDATE_ACTIVITY_DETAILS });\r\n  }\r\n};\r\nexport const updateActivityName = data => async dispatch => {\r\n  dispatch(loadingActionHelper());\r\n  try {\r\n    const response = axios.post(\r\n      `${global.config.backendURL}/activities/updateDefaultSubActivityName`,\r\n      data\r\n    );\r\n\r\n    dispatch(getDefaultActivities());\r\n  } catch (err) {\r\n    dispatch(errorActionHelper(err));\r\n  }\r\n};\r\n\r\nexport const clearActivityCheckedArray = () => dispatch => {\r\n  dispatch(clearCheckedArrayHelper());\r\n};\r\n\r\nexport const doneUpdating = () => dispatch => {\r\n  dispatch({ type: DONE_UPDATING_ACTIVITY });\r\n};\r\n","export const ADD_LOADING = \"ADD_LOADING\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const TODO_FAILURE = \"TODO_FAILURE\";\r\nexport const TODO_SUCCESS = \"TODO_SUCCESS\";\r\nexport const GET_TODO = \"GET_TODO\";\r\n","import {\r\n  ADD_LOADING,\r\n  // MATERIAL_SUCCESS,\r\n  MATERIAL_FAILURE,\r\n  GET_MATERIAL,\r\n  GET_STORE,\r\n  STORE_FAILURE,\r\n  STORE_SUCCESS,\r\n} from \"./materialActionTypes\";\r\nimport axios from \"axios\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst successNotificationOpts = {\r\n  title: \"Success\",\r\n  message: \"Material added successfully!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nconst errorNotificationOpts = {\r\n  title: \"Error\",\r\n  message: \"Something went wrong!!\",\r\n  position: \"tr\",\r\n  autoDismiss: 3,\r\n};\r\n\r\nexport const getStore = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/stores/getStore/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_STORE,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    dispatch({\r\n      type: STORE_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const getMaterial = () => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  const id = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${global.config.backendURL}/material/getMaterial/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_MATERIAL,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const addMaterial = material => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  material[\"projectId\"] = global.config.secureStorage.getItem(\"projectId\");\r\n  try {\r\n    await axios.post(\r\n      `${global.config.backendURL}/material/addMaterial`,\r\n      material\r\n    );\r\n\r\n    dispatch(getMaterial());\r\n    dispatch(Notifications.success(successNotificationOpts));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const updateMaterial = (materialID, material) => async dispatch => {\r\n  material[\"projectId\"] = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.put(\r\n      `${global.config.backendURL}/material/updateMaterial/${materialID}`,\r\n      material\r\n    );\r\n    dispatch(getMaterial());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const updateStore = (\r\n  materialName,\r\n  materialQuantity\r\n) => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.patch(`${global.config.backendURL}/material/updateStore`, {\r\n      materialQuantity: materialQuantity,\r\n      materialName: materialName,\r\n    });\r\n    dispatch({\r\n      type: STORE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: STORE_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\nexport const addDeliveryDate = (materialID, material) => async dispatch => {\r\n  const projectId = global.config.secureStorage.getItem(\"projectId\");\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.patch(\r\n      `${global.config.backendURL}/material/addDeliveryDate/${materialID}/${projectId}`,\r\n      { material }\r\n    );\r\n    dispatch(getMaterial());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n\r\nexport const deleteMaterial = id => async dispatch => {\r\n  dispatch({\r\n    type: ADD_LOADING,\r\n  });\r\n  try {\r\n    await axios.delete(\r\n      `${global.config.backendURL}/material/deleteMaterial/${id}`\r\n    );\r\n    dispatch(getMaterial());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MATERIAL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n    dispatch(Notifications.error(errorNotificationOpts));\r\n  }\r\n};\r\n","// import firebase from \"firebase\";\r\n\r\n// const config = {\r\n//   apiKey: \"AIzaSyCUTS67t69qHLarJnM_ZMkp9PG_TDpXMUY\",\r\n//   authDomain: \"sds-construction-c1bc7.firebaseapp.com\",\r\n//   databaseURL: \"https://sds-construction-c1bc7.firebaseio.com\",\r\n//   projectId: \"sds-construction-c1bc7\",\r\n//   storageBucket: \"sds-construction-c1bc7.appspot.com\",\r\n//   messagingSenderId: \"609490234826\",\r\n//   appId: \"1:609490234826:web:0dcef04e00b3b80a793333\",\r\n//   measurementId: \"G-PD22N068YM\",\r\n// };\r\n// firebase.initializeApp(config);\r\n// // firebase.analytics();\r\n// export default firebase;\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCUTS67t69qHLarJnM_ZMkp9PG_TDpXMUY\",\r\n  authDomain: \"sds-construction-c1bc7.firebaseapp.com\",\r\n  databaseURL: \"https://sds-construction-c1bc7.firebaseio.com\",\r\n  projectId: \"sds-construction-c1bc7\",\r\n  storageBucket: \"sds-construction-c1bc7.appspot.com\",\r\n  messagingSenderId: \"609490234826\",\r\n  appId: \"1:609490234826:web:0dcef04e00b3b80a793333\",\r\n  measurementId: \"G-PD22N068YM\",\r\n};\r\nconst firebase = initializeApp(config);\r\n// firebase.analytics();\r\nexport default firebase;\r\n","import React from \"react\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function AddRoadActivity(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} fullScreen={fullScreen}>\r\n        <DialogTitle>New Road Activity Name</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Provide a new Road Activity Name\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"roadActivityName\"\r\n            name=\"roadActivityName\"\r\n            label=\"Road Activity Name\"\r\n            type=\"text\"\r\n            variant=\"standard\"\r\n            value={props.roadActivityName}\r\n            // error={props.alertSubActivity}\r\n            // helperText={props.alertSubActivityField}\r\n            onChange={props.handleActivityChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleModalRoadOpen} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          {/* <Button onClick={props.submitTask} color=\"primary\"> */}\r\n          <Button\r\n            onClick={\r\n              props.isEditRoadActivity\r\n                ? props.EditRoadActivity\r\n                : props.submitRoadActivity\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","const nullContent = [\r\n  { visibility: true, subTitle: \"Update Here\", link: \"null\" },\r\n];\r\n\r\nconst rccContent = [\r\n  { visibility: true, subTitle: \"PCC\", link: \"pcc\" },\r\n  { visibility: true, subTitle: \"Footing\", link: \"footing\" },\r\n  { visibility: true, subTitle: \"Stub Column\", link: \"studcolumn\" },\r\n  {\r\n    visibility: true,\r\n    subTitle: \"Raff, Retaining Wall\",\r\n    link: \"raffretainingwall\",\r\n  },\r\n  { visibility: true, subTitle: \"Plinth beam\", link: \"plinthbeam\" },\r\n  {\r\n    visibility: true,\r\n    subTitle: \"Ground floor column\",\r\n    link: \"groundfloorcolumn\",\r\n  },\r\n  { visibility: true, subTitle: \"First Slab\", link: \"firstslab\" },\r\n  { visibility: true, subTitle: \"Columns\", link: \"columns\" },\r\n  { visibility: true, subTitle: \"Second Slab\", link: \"secondslab\" },\r\n  { visibility: true, subTitle: \"Lintel, Chajja\", link: \"lintelchajja\" },\r\n];\r\n\r\nconst electricalContent = [\r\n  { visibility: true, subTitle: \"Slab concealed\", link: \"slabconcealed\" },\r\n  { visibility: true, subTitle: \"Wall Concealed\", link: \"wallconcealed\" },\r\n  { visibility: true, subTitle: \"Wiring\", link: \"wiring\" },\r\n  { visibility: true, subTitle: \"Switch Plates\", link: \"switchplates\" },\r\n  { visibility: true, subTitle: \"Mains\", link: \"mains\" },\r\n];\r\n\r\nconst plumbingContent = [\r\n  { visibility: true, subTitle: \"Chiseling\", link: \"chiseling\" },\r\n  { visibility: true, subTitle: \"Piping\", link: \"piping\" },\r\n  {\r\n    visibility: true,\r\n    subTitle: \"Testing and Finishing\",\r\n    link: \"testingandfinishing\",\r\n  },\r\n];\r\n\r\nconst waterproofingContent = [\r\n  { visibility: true, subTitle: \"Basecoat\", link: \"basecoat\" },\r\n  { visibility: true, subTitle: \"Brickcoat\", link: \"brickcoat\" },\r\n  { visibility: true, subTitle: \"Finalcoat\", link: \"finalcoat\" },\r\n];\r\n\r\nconst doorContent = [\r\n  { visibility: true, subTitle: \"Door Procure\", link: \"doorprocure\" },\r\n  { visibility: true, subTitle: \"Shutter\", link: \"shutter\" },\r\n  { visibility: true, subTitle: \"Door kit\", link: \"doorKit\" },\r\n];\r\n\r\nconst paintingContent = [\r\n  { visibility: true, subTitle: \"Putty\", link: \"putty\" },\r\n  { visibility: true, subTitle: \"First coat OBD\", link: \"firstcoatobd\" },\r\n  { visibility: true, subTitle: \"Second coat OBD\", link: \"secondcoatobd\" },\r\n];\r\n\r\nconst developmentContent = [\r\n  { visibility: true, subTitle: \"Lift\", link: \"lift\" },\r\n  { visibility: true, subTitle: \"Fire fighting\", link: \"firefighting\" },\r\n  { visibility: true, subTitle: \"Pump room\", link: \"pumproom\" },\r\n  { visibility: true, subTitle: \"U.G.W.T\", link: \"UGWT\" },\r\n  { visibility: true, subTitle: \"Internal roads\", link: \"internalroads\" },\r\n  { visibility: true, subTitle: \"Solar system\", link: \"solarsystem\" },\r\n  { visibility: true, subTitle: \"Intercom\", link: \"intercom\" },\r\n  { visibility: true, subTitle: \"Entry lobby\", link: \"enterlobby\" },\r\n  { visibility: true, subTitle: \"Compound wall\", link: \"compoundwall\" },\r\n  {\r\n    visibility: true,\r\n    subTitle: \"Common area lightings\",\r\n    link: \"commonarealightings\",\r\n  },\r\n  { visibility: true, subTitle: \"Club house\", link: \"clubhouse\" },\r\n  { visibility: true, subTitle: \"Misc works\", link: \"miscworks\" },\r\n];\r\n\r\nconst iterList = [\r\n  { visibility: true, title: \"R.C.C\", content: rccContent, activity: \"rcc\" },\r\n  {\r\n    visibility: true,\r\n    title: \"Brickwork\",\r\n    content: nullContent,\r\n    activity: \"brickWork\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Internal Plaster / Gypsum\",\r\n    content: nullContent,\r\n    activity: \"internalPlasterGypsum\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Plumbing\",\r\n    content: plumbingContent,\r\n    activity: \"plumbing\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Electrical\",\r\n    content: electricalContent,\r\n    activity: \"electrical\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Waterproofing\",\r\n    content: waterproofingContent,\r\n    activity: \"waterProofing\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"External plaster\",\r\n    content: nullContent,\r\n    activity: \"externalPlastering\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Flooring and Tile Dado\",\r\n    content: nullContent,\r\n    activity: \"flooring\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Window Grills\",\r\n    content: nullContent,\r\n    activity: \"windowGrills\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Aluminium Windows\",\r\n    content: nullContent,\r\n    activity: \"aluminiumWindows\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Door Frame and Shutters\",\r\n    content: doorContent,\r\n    activity: \"doorFrameShutters\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Terrace Railing\",\r\n    content: nullContent,\r\n    activity: \"terraceRailing\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Painting - Internal\",\r\n    content: paintingContent,\r\n    activity: \"internalPainting\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"External Painting\",\r\n    content: nullContent,\r\n    activity: \"externalPainting\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"C.P and Sanitary Fitting\",\r\n    content: nullContent,\r\n    activity: \"CPsanitaryFitting\",\r\n  },\r\n  {\r\n    visibility: true,\r\n    title: \"Development Work\",\r\n    content: developmentContent,\r\n    activity: \"developmentWork\",\r\n  },\r\n];\r\n\r\nmodule.exports = iterList;\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function FormButton(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import {\r\n  REGISTER_FAILURE,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  USERNAME_EXISTS,\r\n} from \"./registerActionTypes\";\r\n\r\nconst initalState = {\r\n  loading: false,\r\n  registered: false,\r\n};\r\n\r\nexport const registerReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      \r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        registered: true,\r\n      };\r\n    case REGISTER_FAILURE:\r\n      \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case USERNAME_EXISTS:\r\n      \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      // \r\n      return state;\r\n  }\r\n};\r\nexport default registerReducer;\r\n","import {\r\n  GET_PROJECT,\r\n  PROJECT_FAILURE,\r\n  PROJECT_SUCCESS,\r\n  ADD_PROJECT_LOADING,\r\n  USER_PROJECTS_ERROR,\r\n  USER_PROJECTS_SUCCESS,\r\n  USER_PROJECTS_LOADING,\r\n  ACTIVITIES_SUCCESS,\r\n  ACTIVITIES_FAILURE,\r\n  // ACTIVITIES_LOADING,\r\n  FETCH_ACTIVITIES_LOADING,\r\n  GET_USER_LOADING,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAILURE,\r\n} from \"./projectActionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  success: false,\r\n  loading: false,\r\n  userProjectLoading: false,\r\n  userProjectSuccess: false,\r\n  userProjectIsError: false,\r\n  userProjectError: \"\",\r\n  userProjects: [],\r\n  excludedActivities: [],\r\n  activitiesError: false,\r\n  fetchActivitiesLoading: false,\r\n  userRolesLoading: false,\r\n  userRolesSuccess: false,\r\n  userRolesFailure: false,\r\n  userRoles: [],\r\n};\r\n\r\nexport const projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: action.success,\r\n      };\r\n    case ADD_PROJECT_LOADING:\r\n      return {\r\n        ...state,\r\n        activitiesError: false,\r\n        loading: true,\r\n      };\r\n    case PROJECT_SUCCESS:\r\n      // \r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: action.success,\r\n        loading: false,\r\n      };\r\n    case PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: action.success,\r\n        loading: false,\r\n      };\r\n    case ACTIVITIES_SUCCESS:\r\n      // \r\n      return {\r\n        ...state,\r\n        excludedActivities: action.payload,\r\n        fetchActivitiesLoading: false,\r\n      };\r\n    case ACTIVITIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        activitiesError: action.error,\r\n        fetchActivitiesLoading: false,\r\n      };\r\n    case FETCH_ACTIVITIES_LOADING:\r\n      return {\r\n        ...state,\r\n        fetchActivitiesLoading: true,\r\n      };\r\n    case USER_PROJECTS_LOADING:\r\n      return {\r\n        ...state,\r\n        userProjectLoading: true,\r\n      };\r\n    case USER_PROJECTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        userProjects: action.payload,\r\n        userProjectLoading: false,\r\n        userProjectSuccess: true,\r\n        userProjectIsError: false,\r\n\r\n      };\r\n    }\r\n    case USER_PROJECTS_ERROR: {\r\n      return {\r\n        ...state,\r\n        userProjectIsError: true,\r\n        userProjectError: action.error,\r\n        userProjectLoading: false,\r\n      };\r\n    }\r\n\r\n    case GET_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        userRolesLoading: true,\r\n      };\r\n    case GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userRoles: action.payload,\r\n        userRolesLoading: false,\r\n        userRolesSuccess: true,\r\n      };\r\n    // }\r\n    case GET_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n        userRoles: action.payload,\r\n        // userProjectIsError: true,\r\n        // needs modification\r\n        userRolesFailure: true,\r\n        userRolesLoading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ISSUE_GET_FAILURE,\r\n  ISSUE_GET_SUCCESS,\r\n  ISSUE_ADD_FAILURE,\r\n  ISSUE_ADD_SUCCESS,\r\n  ISSUE_REMOVE_SUCCESS,\r\n  ISSUE_REMOVE_FAILURE,\r\n  ISSUE_ASK_APPROVAL_SUCCESS,\r\n  ISSUE_ASK_APPROVAL_FAILURE,\r\n  ISSUE_LOADING\r\n} from \"./issuesActionTypes\";\r\n// import { getAllIssues } from \"./issuesAction\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  loading: true,\r\n  success: false\r\n};\r\n\r\nexport const issuesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ISSUE_GET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ISSUE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ISSUE_GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        success: action.success\r\n      };\r\n    case ISSUE_ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.success\r\n      };\r\n    case ISSUE_ADD_FAILURE:\r\n      return {\r\n        ...state,\r\n        success: action.success,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ISSUE_REMOVE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: action.success\r\n      };\r\n    case ISSUE_REMOVE_FAILURE:\r\n      return {\r\n        ...state,\r\n        success: action.success,\r\n        error: action.payload\r\n      };\r\n    case ISSUE_ASK_APPROVAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        success: action.success\r\n      };\r\n    case ISSUE_ASK_APPROVAL_FAILURE:\r\n      return {\r\n        ...state,\r\n        success: action.success,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  MATERIAL_ERROR,\r\n  MATERIAL_FAILURE,\r\n  MATERIAL_SUCCESS,\r\n  GET_MATERIAL,\r\n  GET_STORE,\r\n  STORE_FAILURE\r\n} from \"./materialActionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  storeData: [],\r\n  success: false,\r\n  loading: false,\r\n  error: false\r\n};\r\n\r\nexport const materialReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_MATERIAL:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_STORE:\r\n      return {\r\n        ...state,\r\n        storeData: action.payload,\r\n        loading: false\r\n      };\r\n    case STORE_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    }\r\n    case MATERIAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false\r\n      };\r\n    case MATERIAL_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    }\r\n    case MATERIAL_FAILURE:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  TODO_FAILURE,\r\n  TODO_SUCCESS,\r\n  GET_TODO,\r\n} from \"./todoActionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  success: false,\r\n  loading: false,\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_TODO:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n      };\r\n\r\n    case TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  PLAN_FAILURE,\r\n  PLAN_SUCCESS,\r\n  GET_PLAN,\r\n} from \"./planActionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  success: false,\r\n  loading: false,\r\n};\r\n\r\nexport const planReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_PLAN:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case PLAN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n      };\r\n\r\n    case PLAN_FAILURE:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_LOADING,\r\n  MATERIAL_FAILURE,\r\n  MATERIAL_SUCCESS,\r\n  GET_MATERIAL,\r\n  GET_STORE_SUCCESS,\r\n  GET_STORE_FAILURE,\r\n  ISSUE_HISTORY_SUCCESS,\r\n  ISSUE_HISTORY_ERROR,\r\n  ADD_ISSUE,\r\n  ADD_ISSUE_HISTORY_LOADING,\r\n  MATERIALS_LIST_SUCCESS,\r\n  MATERIALS_LIST_FAILURE,\r\n  MATERIALS_LIST_LOADING,\r\n  ADD_MATERIAL_REQ,\r\n  MATERIAL_REQ_LOADING,\r\n  MATERIAL_REQ_SUCCESS,\r\n  MATERIAL_REQ_ERROR,\r\n  REJECT_MATERIAL_REQ,\r\n} from \"./storeActionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  storeData: [],\r\n  success: false,\r\n  loading: false,\r\n  getStoreLoading: false,\r\n  getStoreSuccess: false,\r\n  getStoreError: false,\r\n  error: \"\",\r\n  issueLoading: false,\r\n  issueHistory: [],\r\n  issueError: false,\r\n  materials: [],\r\n  materialListLoading: false,\r\n  materialListSuccess: false,\r\n  materialListFailure: false,\r\n  materialReqLoading: false,\r\n  materialReqError: false,\r\n  materialReqIssues: [],\r\n};\r\n\r\nexport const storeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOADING:\r\n      return {\r\n        ...state,\r\n        getStoreLoading: true,\r\n      };\r\n    case GET_MATERIAL:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case GET_STORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        storeData: action.payload,\r\n        getStoreLoading: false,\r\n        getStoreSuccess: true,\r\n      };\r\n    case GET_STORE_FAILURE:\r\n      return {\r\n        ...state,\r\n        getStoreLoading: false,\r\n        error: action.payload,\r\n        getStoreError: true,\r\n      };\r\n    case MATERIAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        getStoreLoading: false,\r\n        loading: false,\r\n      };\r\n    case MATERIAL_FAILURE:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        success: false,\r\n        getStoreLoading: false,\r\n        loading: false,\r\n      };\r\n    case ADD_ISSUE:\r\n      return {\r\n        ...state,\r\n        getStoreLoading: false,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_ISSUE_HISTORY_LOADING: {\r\n      return {\r\n        ...state,\r\n        issueLoading: true,\r\n      };\r\n    }\r\n\r\n    case ISSUE_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        issueLoading: false,\r\n        issueHistory: action.payload,\r\n        issueError: false,\r\n      };\r\n    case ISSUE_HISTORY_ERROR:\r\n      return {\r\n        ...state,\r\n        issueLoading: false,\r\n        issueError: true,\r\n      };\r\n    case MATERIALS_LIST_LOADING:\r\n      return { ...state, materialListLoading: true };\r\n    case MATERIALS_LIST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        materials: action.payload,\r\n        materialListLoading: false,\r\n        materialListSuccess: true,\r\n      };\r\n    }\r\n    case MATERIALS_LIST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        materialListFailure: true,\r\n        materialListLoading: false,\r\n        materialListError: action.error,\r\n      };\r\n    }\r\n    case ADD_MATERIAL_REQ:\r\n      return {\r\n        ...state,\r\n        getStoreLoading: false,\r\n        loading: false,\r\n      };\r\n\r\n    case MATERIAL_REQ_LOADING: {\r\n      return {\r\n        ...state,\r\n        materialReqLoading: true,\r\n      };\r\n    }\r\n\r\n    case MATERIAL_REQ_SUCCESS:\r\n      return {\r\n        ...state,\r\n        materialReqLoading: false,\r\n        materialReqIssues: action.payload,\r\n        materialReqError: false,\r\n      };\r\n    case MATERIAL_REQ_ERROR:\r\n      return {\r\n        ...state,\r\n        materialReqLoading: false,\r\n        materialReqError: true,\r\n      };\r\n    case REJECT_MATERIAL_REQ:\r\n      return {\r\n        ...state,\r\n        getStoreLoading: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_SUBPROJECTS,\r\n  LOADING_SUBPROJECTS,\r\n  ERROR_SUBPROJECTS\r\n} from \"./subProjectActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n  isError: false,\r\n  success: false,\r\n  subProjects: []\r\n};\r\n\r\nconst subProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SUBPROJECTS:\r\n      return {\r\n        ...state,\r\n        subProjects: action.payload,\r\n        success: true,\r\n        loading: false\r\n      };\r\n    case LOADING_SUBPROJECTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ERROR_SUBPROJECTS:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isError: true,\r\n        loading: false\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport default subProjectReducer;\r\n","import ActionButton from \"antd/lib/modal/ActionButton\";\r\nimport {\r\n  SUCCESS_GET_ACTIVITY_DETAILS,\r\n  SUCCESS_GET_ACTIVITY_UPDATE_DETAILS,\r\n  SUCCESS_UPDATE_DETAILS,\r\n  ERROR_GET_ACTIVITY_DETAILS,\r\n  SET_LOADING,\r\n  CLEAR_CHECKED_ARRAY,\r\n  SUCCESS_UPDATE_ACTIVITY_DETAILS,\r\n  ERROR_UPDATE_ACTIVITY_DETAILS,\r\n  DONE_UPDATING_ACTIVITY,\r\n  SUCCESS_GET_DEFAULT_ACTIVITY,\r\n  SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n} from \"./activityActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  checkedArray: [],\r\n  defaultActivity: [],\r\n  defaultActivityNames: [],\r\n  error: \"\",\r\n  updateError: \"\",\r\n  isUpdateSuccess: false,\r\n  isUpdateError: false,\r\n  percentage: [],\r\n  floorPercentage: [],\r\n};\r\n\r\nconst activityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SUCCESS_GET_DEFAULT_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        defaultActivity: action.activities,\r\n        percentage: action.percentage,\r\n        loading: false,\r\n      };\r\n    case SUCCESS_GET_DEFAULT_ACTIVITY_NAMES:\r\n      return {\r\n        ...state,\r\n        defaultActivityNames: action.payload,\r\n        loading: false,\r\n      };\r\n    case SUCCESS_GET_ACTIVITY_DETAILS:\r\n      return {\r\n        ...state,\r\n        activityDetails: action.payload,\r\n        loading: false,\r\n      };\r\n    case SUCCESS_GET_ACTIVITY_UPDATE_DETAILS:\r\n      return {\r\n        ...state,\r\n        activityUpdateDetails: action.payload,\r\n\r\n        loading: false,\r\n      };\r\n    case ERROR_GET_ACTIVITY_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case CLEAR_CHECKED_ARRAY:\r\n      return {\r\n        ...state,\r\n        checkedArray: [],\r\n      };\r\n    case SUCCESS_UPDATE_ACTIVITY_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdateSuccess: true,\r\n      };\r\n    case ERROR_UPDATE_ACTIVITY_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdateError: true,\r\n      };\r\n    case DONE_UPDATING_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        isUpdateSuccess: false,\r\n      };\r\n    case SUCCESS_UPDATE_DETAILS:\r\n      return {\r\n        ...state,\r\n        activityUpdateDetails: action.payload,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default activityReducer;\r\n","import { SUCCESS_GET_WBS, ERROR_GET_WBS, LOADING_WBS } from \"./wbsTypes\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  newWbs: [],\r\n  isError: false,\r\n};\r\nconst misReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_WBS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ERROR_GET_WBS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isError: true,\r\n      };\r\n    case SUCCESS_GET_WBS:\r\n      return {\r\n        ...state,\r\n        newWbs: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default misReducer;\r\n","import {\r\n  GET_UPDATES_DETAILS,\r\n  SUCCESS_GET_UPDATES_DETAILS,\r\n  ERROR_GET_UPDATES_DETAILS,\r\n} from \"./overviewActionTypes\";\r\n\r\nconst initialState = {\r\n  //   loading: true,\r\n  updateActivity: [],\r\n  error: \"\",\r\n  activityDetails: [],\r\n};\r\n\r\nconst overviewReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SUCCESS_GET_UPDATES_DETAILS:\r\n      return {\r\n        ...state,\r\n        activityDetails: action.payload,\r\n        loading: false,\r\n      };\r\n    case ERROR_GET_UPDATES_DETAILS:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default overviewReducer;\r\n","import {\r\n  ERROR_GET_CHECKLIST,\r\n  SUCCESS_GET_CHECKLIST,\r\n  LOADING_GET_CHECKLIST,\r\n  SUCCESS_ADD_CHECKLIST,\r\n  ERROR_ADD_CHECKLIST,\r\n  LOADING_ADD_CHECKLIST,\r\n  SUCCESS_UPDATE_CHECKLIST,\r\n  LOADING_UPDATE_CHECKLIST,\r\n  ERROR_UPDATE_CHECKLIST,\r\n  SUCCESS_UPDATE_CHECKLIST_TASKS,\r\n  ERROR_UPDATE_CHECKLIST_TASKS,\r\n  LOADING_UPDATE_CHECKLIST_TASKS,\r\n  SUCCESS_GET_DEFAULT_CHECKLIST,\r\n  SUCCESS_UPDATE_DEFAULT_CHECKLIST\r\n} from \"./checklistActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  success: false,\r\n  error: false,\r\n  tasks: [],\r\n  defaultChecklist: { data: [] },\r\n  msg: \"\"\r\n};\r\n\r\nconst checkListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SUCCESS_GET_DEFAULT_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        defaultChecklist: action.payload ? action.payload : { data: [] }\r\n      };\r\n    case SUCCESS_UPDATE_DEFAULT_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false\r\n      };\r\n    case SUCCESS_GET_CHECKLIST:\r\n    case SUCCESS_UPDATE_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false,\r\n        tasks: action.payload ? action.payload : []\r\n      };\r\n    case SUCCESS_ADD_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        loading: false\r\n      };\r\n    case ERROR_GET_CHECKLIST:\r\n    case ERROR_UPDATE_CHECKLIST:\r\n    case ERROR_ADD_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false,\r\n        msg: action.error ? action.error : \"\"\r\n      };\r\n    case LOADING_UPDATE_CHECKLIST:\r\n    case LOADING_ADD_CHECKLIST:\r\n    case LOADING_GET_CHECKLIST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default checkListReducer;\r\n","import {\r\n  SUCCESS_BAR_CHART_STORE,\r\n  SUCCESS_GET_DEFAULT_ACTIVITY_NAMES,\r\n  ERROR,\r\n  LOADING\r\n} from \"./barChartTypes\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  defaultActivityNames: [],\r\n  storeData: [],\r\n  error: \"\",\r\n  isError: false\r\n};\r\n\r\nconst barChartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isError: true\r\n      };\r\n    case SUCCESS_GET_DEFAULT_ACTIVITY_NAMES:\r\n      return {\r\n        ...state,\r\n        defaultActivityNames: action.payload,\r\n        loading: false\r\n      };\r\n    case SUCCESS_BAR_CHART_STORE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        storeData: action.payload\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport default barChartReducer;\r\n","import {\r\n  ADD_LOADING,\r\n  MONITORING_SUCCESS,\r\n  MONITORING_ERROR\r\n} from \"./monitoringActionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  monitoring: []\r\n};\r\n\r\nexport const monitoringReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case MONITORING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        monitoring: action.payload,\r\n        loading: false\r\n      };\r\n    case MONITORING_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as notifications } from \"react-notification-system-redux\";\r\nimport { loginReducer } from \"./loginRedux/loginReducer\";\r\nimport { registerReducer } from \"./registerRedux/registerReducer\";\r\nimport { projectReducer } from \"./projectRedux/projectReducer\";\r\nimport { issuesReducer } from \"./IssuesRedux/issuesReducer\";\r\nimport { materialReducer } from \"./materialRedux/materialReducer\";\r\nimport { todoReducer } from \"./todoRedux/todoReducer\";\r\nimport { planReducer } from \"./planningRedux/planReducer\";\r\nimport { storeReducer } from \"./storeRedux/storeReducer\";\r\nimport subProjectReducer from \"./subProjectRedux/subProjectReducer\";\r\nimport activityReducer from \"./activityRedux/activityReducer\";\r\nimport wbsReducer from \"./wbsRedux/wbsReducer\";\r\nimport overviewReducer from \"./overviewRedux/overviewReducer\";\r\nimport checkListReducer from \"./checkListRedux/checklistReducer\";\r\nimport barChartReducer from \"./BarCharts/barChartReducer\";\r\nimport { monitoringReducer } from \"./monitoringRedux/monitoringReducer\";\r\n//inside combine reducers name of imported reducers - combineReducers({nameOfReducer, nameOfReducer2});\r\nexport const rootReducer = combineReducers({\r\n  notifications,\r\n  loginReducer,\r\n  registerReducer,\r\n  projectReducer,\r\n  issuesReducer,\r\n  subProjectReducer,\r\n  materialReducer,\r\n  activityReducer,\r\n  todoReducer,\r\n  checkListReducer,\r\n  planReducer,\r\n  storeReducer,\r\n  barChartReducer,\r\n  monitoringReducer,\r\n  overviewReducer,\r\n  wbsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as action from \"../Redux/registerRedux/registerAction\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { LockOutlined as LockOutlinedIcon } from \"@material-ui/icons\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\nexport class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const requestAdmin =\r\n      this.props.match.path === \"/registerAdmin\" ? true : false;\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phone: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      organization: \"\",\r\n      password: \"\",\r\n      repassword: \"\",\r\n      match: true,\r\n      redirect: false,\r\n      isAdmin: false,\r\n      mainAdmin: false,\r\n      requestAdmin: requestAdmin,\r\n    };\r\n    console.log(this.state);\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.register(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        {this.props.registered === true && (\r\n          <Redirect to={{ pathname: \"/login\", register: true }} />\r\n        )}\r\n\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        <Container\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n          style={{ marginBottom: \"20px\" }}\r\n        >\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    value={this.state.username}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                  />\r\n                </Grid>\r\n                {this.state.requestAdmin && (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      value={this.state.organization}\r\n                      onChange={this.handleChange}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"organization\"\r\n                      label=\"Organization\"\r\n                      name=\"organization\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    value={this.state.phone}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"phone\"\r\n                    label=\"Mobile Number\"\r\n                    name=\"phone\"\r\n                    autoComplete=\"mobile\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    value={this.state.repassword}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    fullWidth\r\n                    name=\"repassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    id=\"repassword\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <div className=\"mt-3 text-center\">\r\n                {this.state.password !== this.state.repassword ? (\r\n                  <span style={{ color: \"red\" }}>Passwords Don't Match</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={this.state.password !== this.state.repassword}\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"login\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //\r\n  return {\r\n    registered: state.registerReducer.registered,\r\n    error: state.registerReducer.error,\r\n    notifications: state.notifications,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    register: (\r\n      email,\r\n      username,\r\n      phone,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      isAdmin,\r\n      requestAdmin,\r\n      mainAdmin\r\n    ) =>\r\n      dispatch(\r\n        action.register(\r\n          email,\r\n          username,\r\n          phone,\r\n          password,\r\n          firstName,\r\n          lastName,\r\n          isAdmin,\r\n          requestAdmin,\r\n          mainAdmin\r\n        )\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\nexport class BarchartData extends Component {\r\n  constructor(props) {\r\n    console.log(props.accNames, props.percentage);\r\n    Chart.register(...registerables);\r\n    // console.log(iterList);\r\n    super(props);\r\n    // const isAddVisible = roles.find(item => item == role) ? true : false;\r\n    this.state = {\r\n      chartData: {\r\n        labels: props.accNames,\r\n        datasets: [\r\n          {\r\n            label: \"Activity Updates\",\r\n            data: props.percentage,\r\n            backgroundColor: [\"#345BAE\"],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={{ maintainAspectRatio: false }}\r\n          height={400}\r\n          width={100}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarchartData;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport BarchartData from \"./Barchart\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nimport { getWbs } from \"../../Redux/wbsRedux/wbsAction\";\r\nclass Wbs extends Component {\r\n  constructor(props) {\r\n    // console.log(iterList);\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n      loading: true,\r\n      wbsTotal: 0,\r\n      wbsActivityNames: [],\r\n      wbsActivityPer: [],\r\n      sDate: \"\",\r\n      eDate: \"\",\r\n      accName: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n    } catch (error) {\r\n      //\r\n    }\r\n  }\r\n  submit = async () => {\r\n    console.log(this.state.accName, this.state.sDate, this.state.eDate);\r\n    try {\r\n      let activityName = this.state.accName;\r\n      let sDate = this.state.sDate;\r\n      let eDate = this.state.eDate;\r\n      await this.props.getWbs(activityName, sDate, eDate);\r\n      this.setState({\r\n        wbsTotal: this.props.newWbs.total,\r\n        wbsActivityNames: Object.keys(this.props.newWbs.taskperArr),\r\n        wbsActivityPer: Object.values(this.props.newWbs.taskperArr),\r\n        loading: this.props.loading,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  handleDropdownChange = e => {\r\n    if (e.target.value != null) {\r\n      this.setState({\r\n        accName: e.target.value,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    // if (this.props.loading) {\r\n    //   return <Loading loading={this.props.loading} />;\r\n    // }\r\n    if (this.state.wbsActivityNames.length != 0) {\r\n      console.log(this.state.wbsActivityNames);\r\n      console.log(this.state.wbsActivityPer);\r\n    }\r\n    return (\r\n      <div className=\"container\" style={{ marginTop: \"20px\" }}>\r\n        <Grid container alignItems=\"center\" justify=\"space-around\">\r\n          <div>\r\n            <Typography>\r\n              <strong>Select Activity :</strong> Not available\r\n            </Typography>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">Activity</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={this.state.accName}\r\n                label=\"Age\"\r\n                onChange={this.handleDropdownChange}\r\n              >\r\n                <MenuItem value={\"plumbing\"}>Plumbing</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <Typography>\r\n              <strong>Start Date :</strong> Not available\r\n            </Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                // disabled={!props.isEditable}\r\n                disableToolbar\r\n                format=\"dd-MM-yyyy\"\r\n                margin=\"none\"\r\n                id=\"date-picker-inline\"\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                value={this.state.sDate}\r\n                placeholder=\"Not available\"\r\n                onChange={(date, value) => {\r\n                  this.setState({\r\n                    sDate: value,\r\n                  });\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n          <div>\r\n            <Typography>\r\n              <strong>End Date :</strong> Not available\r\n            </Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                // disabled={!props.isEditable}\r\n                disableToolbar\r\n                format=\"dd-MM-yyyy\"\r\n                margin=\"none\"\r\n                id=\"date-picker-inline\"\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n                value={this.state.eDate}\r\n                placeholder=\"Not available\"\r\n                onChange={(date, value) => {\r\n                  console.log(value);\r\n                  this.setState({\r\n                    eDate: value,\r\n                  });\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"space-around\"\r\n          style={{ marginBottom: \"40px\" }}\r\n        >\r\n          <div>\r\n            <Button onClick={this.submit} endIcon={<Save />}>\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        {this.state.wbsActivityNames.length != 0 ? (\r\n          <BarchartData\r\n            accNames={this.state.wbsActivityNames}\r\n            percentage={this.state.wbsActivityPer}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.activityReducer);\r\n  return {\r\n    newWbs: state.wbsReducer.newWbs,\r\n    loading: state.wbsReducer.loading,\r\n    isError: state.wbsReducer.isError,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getWbs,\r\n})(Wbs);\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    padding: 20,\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n  },\r\n  title: {\r\n    backgroundColor: \"#345BAE\",\r\n    padding: \"11px 10px\",\r\n    color: \"#fff\",\r\n    borderRadius: 11,\r\n  },\r\n  footer: {\r\n    width: \"100%\",\r\n    textAlign: \"right\",\r\n  },\r\n  footerlink: {\r\n    backgroundColor: \"#345BAE\",\r\n    padding: \"11px 10px\",\r\n    borderRadius: 11,\r\n    color: \"#fff\",\r\n  },\r\n  getcol: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n});\r\nfunction ViewUpdates(props) {\r\n  //   console.log(props.location.state.activityDetails);\r\n  let updateDataSorted = props.location.state.activityDetails;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {updateDataSorted\r\n        ? updateDataSorted.map((detail, detailIndex) => {\r\n            return (\r\n              <Card\r\n                variant=\"outlined\"\r\n                style={{ margin: \"5px\", width: \"100%\" }}\r\n                elevation={3}\r\n              >\r\n                <CardContent>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                      <Typography variant=\"p\" className={classes.getcol}>\r\n                        Updated by:{detail.data[detail.data.length - 1].user}\r\n                        {/* {detail.user} */}\r\n                      </Typography>\r\n                      <Typography variant=\"p\" className={classes.getcol}>\r\n                        Update Date :{detail.data[detail.data.length - 1].date}\r\n                      </Typography>\r\n                      <Typography variant=\"p\" className={classes.getcol}>\r\n                        Activity Name:\r\n                        {detail.data[detail.data.length - 1].activityName}\r\n                      </Typography>\r\n                      <Typography variant=\"p\" className={classes.getcol}>\r\n                        Update Percentage:\r\n                        {detail.data[detail.data.length - 1].updatedPercentage}%\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            );\r\n          })\r\n        : \"No Updates\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewUpdates;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Style from \"./style.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../../Redux/checkListRedux/checklistAction\";\r\nconst axios = require(\"axios\");\r\n\r\nconst DetailsChecklist = props => {\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <section className={Style.create__material}>\r\n        <Typography\r\n          style={{ fontSize: \"1rem\" }}\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n        >\r\n          {\" \"}\r\n          Details:\r\n        </Typography>\r\n\r\n        <hr />\r\n        <Typography>\r\n          <strong>Project Name :</strong> Project1\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Location:</strong> Pune\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Date Created:</strong> 28/7/20\r\n        </Typography>\r\n        <hr />\r\n        <Typography>\r\n          <strong>Submitted By:</strong> MANAGER\r\n        </Typography>\r\n        <Typography>\r\n          <strong>To Be Checked By :</strong> STORE MANAGER\r\n        </Typography>\r\n        <Typography>\r\n          <strong>To Be Approved By:</strong> CHIEF ENGINEER\r\n        </Typography>\r\n        <hr />\r\n        <Typography>\r\n          <strong>Point 1:</strong> NA\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Point 2:</strong> NA\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Pont 3:</strong> NA\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Pont 4:</strong> NA\r\n        </Typography>\r\n        <hr />\r\n        <Grid justify=\"center\" container>\r\n          <Grid item>\r\n            <Link to={`/checklist`}>\r\n              <Button color=\"primary\" variant=\"contained\" size=\"large\">\r\n                Close\r\n              </Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default DetailsChecklist;\r\n","import React, { Component } from \"react\";\r\nimport { getStore } from \"../../Redux/storeRedux/storeAction\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { CardContent, Typography, Grid, Card } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nclass DisplayMaterial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getStore();\r\n    if (!this.props.getStoreLoading) {\r\n      console.log(this.props.storeData);\r\n      this.setState({\r\n        store: this.props.storeData,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.getStoreLoading ? (\r\n          <Loading loading={this.props.loading} />\r\n        ) : (\r\n          <div className=\"container mt-2\" style={{ marginBottom: \"1em\" }}>\r\n            <h3 className=\"mt-4 mb-3\">Materials Registered</h3>\r\n\r\n            {this.props.storeData.map((material, index) => {\r\n              return (\r\n                <Card\r\n                  style={{\r\n                    backgroundColor: \"ececec\",\r\n                    width: \"80%\",\r\n                    padding: \"1em\",\r\n                    // margin: \"0 auto\",\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  key={index}\r\n                >\r\n                  <Typography>{material.materialName}</Typography>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n//\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //   check weather getStoreloading ??\r\n    getStoreLoading: state.storeReducer.getStoreLoading,\r\n    storeData: state.storeReducer.storeData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStore,\r\n})(DisplayMaterial);\r\n","import React, { Component } from \"react\";\r\nimport { AddCircleOutline, Delete } from \"@material-ui/icons\";\r\nimport { Grid, TextField, Button, IconButton } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport Notifications from \"react-notification-system-redux\";\r\n// import { addMaterialList } from \"../../Redux/projectRedux/projectAction\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport DisplayMaterial from \"./DisplayMaterial\";\r\nimport { addMaterialList } from \"../../Redux/storeRedux/storeAction\";\r\n\r\nclass AddMaterialList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      materialCount: 1,\r\n      materials: []\r\n      // isAdded: false,\r\n    };\r\n  }\r\n  refreshPage = () => {\r\n    window.location.reload(false);\r\n    // this.setState({\r\n    //   isAdded: false,\r\n    // });\r\n  };\r\n\r\n  deleteMaterial = i => {\r\n    if (this.state.materialCount === 1) {\r\n      alert(\"atleast 1 material is required\");\r\n      return;\r\n    }\r\n    var arr = [...this.state.materials];\r\n    arr.splice(i, 1);\r\n    this.setState({\r\n      materials: arr,\r\n      materialCount: this.state.materialCount - 1\r\n    });\r\n  };\r\n\r\n  addMaterial = (event, index) => {\r\n    const prev = this.state.materials;\r\n    prev[index] = {\r\n      materialName: event.target.value\r\n    };\r\n    this.setState({\r\n      materials: prev\r\n    });\r\n  };\r\n  //   Check once if it works\r\n  setMaterialCount = () => {\r\n    this.setState({\r\n      materialCount: this.state.materialCount + 1\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const materialsList = this.state.materials;\r\n    this.setState({\r\n      materialCount: 1,\r\n      material: []\r\n      // isAdded: true,\r\n    });\r\n    //\r\n    this.props.addMaterialList(materialsList);\r\n    e.target.reset();\r\n    // this.refreshPage();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.notifications && (\r\n          <Notifications notifications={this.props.notifications} />\r\n        )}\r\n        {/* {this.state.isAdded ? this.refreshPage() : null} */}\r\n\r\n        <div className=\"container mt-2\" style={{ marginBottom: \"1em\" }}>\r\n          <form onSubmit={this.onSubmit}>\r\n            <Grid container spacing={2} style={{ padding: \"10px\" }}>\r\n              {/* <h3 className=\"mt-5 mb-4\">Add Materials</h3> */}\r\n              {_.times(this.state.materialCount, i => (\r\n                <Grid\r\n                  container\r\n                  style={{ padding: \"10px\", marginTop: \"10px\" }}\r\n                  direction=\"row\"\r\n                  key={i}\r\n                >\r\n                  <Grid item xs={10}>\r\n                    <TextField\r\n                      name=\"materialName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"materialName\"\r\n                      onChange={e => this.addMaterial(e, i)}\r\n                      label={`Material name ${i + 1}`}\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={() => this.deleteMaterial(i)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n              <Grid item style={{ marginLeft: \"2px\" }}>\r\n                <Button\r\n                  onClick={() => this.setMaterialCount()}\r\n                  variant=\"outlined\"\r\n                  startIcon={<AddCircleOutline />}\r\n                >\r\n                  Add New Material\r\n                </Button>\r\n              </Grid>\r\n              <Grid item style={{ marginLeft: \"4px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  style={{ margin: \"0px 5px\" }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <hr />\r\n        <DisplayMaterial />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddMaterialList.propTypes = {\r\n  materials: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    materials: state.storeReducer,\r\n    notifications: state.notifications,\r\n    addMaterialsLoading: state.storeReducer.materialListLoading,\r\n    addMaterialsFailure: state.storeReducer.materialListFailure,\r\n    addMaterialsSuccess: state.storeReducer.materialListSuccess\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addMaterialList })(AddMaterialList);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider } from \"@material-ui/core\";\r\n\r\nclass Support extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-2\">\r\n                <Typography\r\n                    className=\"mt-3 ml-3\"\r\n                    style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}\r\n                    variant=\"h1\"\r\n                >\r\n                    Dakshconstruction\r\n                </Typography>\r\n                <Divider />\r\n                <Typography\r\n                    className=\"ml-3 mt-3\"\r\n                    style={{ fontSize: \"1.25rem\" }}\r\n                    variant=\"body1\"\r\n                >\r\n                    <b>Email:</b>{\" \"}\r\n                    <a href=\"mailto:Dakshconstruction76@gmail.com\">\r\n                        {\" \"}\r\n                        Dakshconstruction76@gmail.com{\" \"}\r\n                    </a>\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Support;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nfunction TaglineLoginButton(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"overline\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              style={{\r\n                fontSize: \"3em\",\r\n                fontFamily: \"Averia Serif Libre\",\r\n                textShadow: \"1.5px 1.5px 2px #808080\",\r\n              }}\r\n              gutterBottom\r\n            >\r\n              <strong>ENBUILD</strong>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              style={{ color: \"#2e86ab\" }}\r\n              paragraph\r\n            >\r\n              <strong>\r\n                <i>A real time project tracker</i>\r\n              </strong>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              <strong>\r\n                One-of-a-kind solution to track your work status on your\r\n                fingertips\r\n              </strong>\r\n            </Typography>\r\n            {!props.loggedIn && (\r\n              <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Link href=\"./login\">\r\n                      <Button\r\n                        size=\"large\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          height: \"50px\",\r\n                          width: \"150px\",\r\n                          fontSize: \"1.2em\",\r\n                        }}\r\n                      >\r\n                        <strong>LOGIN</strong>\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            )}\r\n          </Container>\r\n        </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.loginReducer.loggedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TaglineLoginButton);\r\n","import { Typography } from \"@material-ui/core\";\r\nimport {\r\n  CodeOutlined,\r\n  EmojiObjectsOutlined,\r\n  LaunchOutlined,\r\n} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\n\r\nconst Timeline = () => {\r\n  return (\r\n    <VerticalTimeline>\r\n      <VerticalTimelineElement\r\n        className=\"vertical-timeline-element--work\"\r\n        date=\"2021\"\r\n        contentArrowStyle={{ borderRight: \"7px solid  #2E86AB\" }}\r\n        iconStyle={{ background: \"#2E86AB\", color: \"#fff\" }}\r\n        icon={<LaunchOutlined />}\r\n      >\r\n        <Typography\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n          style={{ fontSize: \"1.25em\" }}\r\n        >\r\n          <strong>Execution</strong>\r\n        </Typography>\r\n        <p style={{ fontSize: \"1.15em\" }}>\r\n          <ul>\r\n            <li>Product Launched</li>\r\n            <li>Representation Started</li>\r\n            <li>Feedback Taken</li>\r\n          </ul>\r\n        </p>\r\n      </VerticalTimelineElement>\r\n      <VerticalTimelineElement\r\n        className=\"vertical-timeline-element--work\"\r\n        date=\"2020\"\r\n        contentArrowStyle={{ borderRight: \"7px solid  #2E86AB\" }}\r\n        iconStyle={{ background: \"#2E86AB\", color: \"#fff\" }}\r\n        icon={<CodeOutlined />}\r\n      >\r\n        <Typography\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n          style={{ fontSize: \"1.25em\" }}\r\n        >\r\n          <strong>Research</strong>\r\n        </Typography>\r\n        <p style={{ fontSize: \"1.15em\" }}>\r\n          Development of app, understanding the need of the market, conducting\r\n          trials, and coming up with feedback.\r\n        </p>\r\n        <Typography\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n          style={{ fontSize: \"1.25em\", marginTop: \"0.5em\" }}\r\n        >\r\n          <strong>Implementation</strong>\r\n        </Typography>\r\n        <p style={{ fontSize: \"1.15em\" }}>\r\n          <ul>\r\n            <li>Establishment of Tech Side</li>\r\n            <li>Testing Betas</li>\r\n            <li>Improvement of the product</li>\r\n          </ul>\r\n        </p>\r\n      </VerticalTimelineElement>\r\n\r\n      <VerticalTimelineElement\r\n        className=\"vertical-timeline-element--work\"\r\n        contentArrowStyle={{ borderRight: \"7px solid  #2E86AB\" }}\r\n        date=\"2019\"\r\n        iconStyle={{ background: \"#2E86AB\", color: \"#fff\" }}\r\n        icon={<EmojiObjectsOutlined fontSize=\"large\" />}\r\n      >\r\n        <Typography\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n          style={{ fontSize: \"1.25em\" }}\r\n        >\r\n          <strong>Thought</strong>\r\n        </Typography>\r\n        <p style={{ fontSize: \"1.15em\" }}>\r\n          Started facing big-time problem related to managing physical files\r\n          data presentation, data monitoring, duplicity of work, etc.\r\n        </p>\r\n        <Typography\r\n          variant=\"overline\"\r\n          display=\"block\"\r\n          style={{ fontSize: \"1.25em\", marginTop: \"0.5em\" }}\r\n        >\r\n          <strong>Idea</strong>\r\n        </Typography>\r\n        <p style={{ fontSize: \"1.15em\" }}>\r\n          <ul>\r\n            <li>Elimination of physical files</li>\r\n            <li>Developing transparent communication</li>\r\n          </ul>\r\n        </p>\r\n      </VerticalTimelineElement>\r\n    </VerticalTimeline>\r\n  );\r\n};\r\nexport default Timeline;\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst Objective = () => {\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ overflow: \"hidden\", backgroundColor: \"#f3f5f8\" }}>\r\n      <div style={{ marginTop: 20 }} data-aos={\"fade-left\"}>\r\n        <div style={{ textAlign: \"center\", marginBottom: 25 }}>\r\n          <div>\r\n            <Typography\r\n              display=\"block\"\r\n              style={{\r\n                fontSize: \"2.25em\",\r\n                fontFamily: \"Courgette\",\r\n                padding: \"0.5em\",\r\n              }}\r\n            >\r\n              <strong>Our Solution</strong>\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                width: \"75px\",\r\n                textAlign: \"center\",\r\n                height: \"3px\",\r\n                background: \"#2E86AB\",\r\n                padding: 0,\r\n                marginTop: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Grid\r\n          container\r\n          justify=\"space-evenly\"\r\n          style={{ textAlign: \"center\" }}\r\n          // spacing={6}\r\n        >\r\n          <Grid item>\r\n            <DescriptionIcon fontSize=\"large\" style={{ color: \"#2E86AB\" }} />\r\n            <br />\r\n            <Typography variant=\"body1\" style={{ marginTop: 15 }}>\r\n              <strong>DOCUMENTATION</strong>\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                maxWidth: 300,\r\n                textAlign: \"center\",\r\n                marginTop: \"1em\",\r\n                fontSize: \"1.2em\",\r\n              }}\r\n            >\r\n              Real time input, tracking, and monitoring on all levels. Result\r\n              oriented input is the solution that we are offering.\r\n            </div>\r\n            <br />\r\n          </Grid>\r\n          <Grid item>\r\n            <AssessmentIcon fontSize=\"large\" style={{ color: \"#2E86AB\" }} />\r\n            <br />\r\n            <Typography variant=\"body1\" style={{ marginTop: 15 }}>\r\n              <strong>REPORTING</strong>\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                maxWidth: 300,\r\n                textAlign: \"center\",\r\n                marginTop: \"1em\",\r\n                fontSize: \"1.2em\",\r\n              }}\r\n            >\r\n              Option based input, in a predefined structure to auto generate\r\n              percentage based report. Elimination of duplicity to increase the\r\n              efficiency and productivity.\r\n            </div>\r\n            <br />\r\n          </Grid>\r\n          <Grid item>\r\n            <TouchAppIcon fontSize=\"large\" style={{ color: \"#2E86AB\" }} />\r\n            <br />\r\n            <Typography variant=\"body1\" style={{ marginTop: 15 }}>\r\n              <strong>EASE OF USE</strong>\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                maxWidth: 300,\r\n                textAlign: \"center\",\r\n                marginTop: \"1em\",\r\n                fontSize: \"1.2em\",\r\n              }}\r\n            >\r\n              Application based platform for ease of use and mobility. The\r\n              solution to everything is technology, or in now days smart and\r\n              efficient use of technology.\r\n            </div>\r\n            <br />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Objective;\r\n","export default __webpack_public_path__ + \"static/media/homepage1.937fdacc.png\";","export default __webpack_public_path__ + \"static/media/homepage2.f146b1ba.png\";","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport img1 from \"../assets/homepage1.png\";\r\nimport img2 from \"../assets/homepage2.png\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#f3f5f8\",\r\n    padding: \" 3rem 0\",\r\n    textAlign: \"center\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  gridImageContainer: {\r\n    // padding: \"5rem\",\r\n  },\r\n  imgFluid: {\r\n    maxWidth: \"90%\",\r\n    height: \"auto\",\r\n    boxShadow: \"5px 5px 60px #0000001c\",\r\n    borderRadius: \" 5px\",\r\n  },\r\n  heading: {\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      margin: \"1.5rem auto 0 auto\",\r\n      backgroundColor: \"#FFCD11\",\r\n      height: \"4px\",\r\n      width: \"70px\",\r\n    },\r\n  },\r\n  paragraphTitle: {\r\n    fontSize: \"1.5rem\",\r\n    color: theme.palette.text.primary,\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  paragraphContent: {\r\n    fontSize: \"1.05rem\",\r\n    color: theme.palette.text.secondary,\r\n    textAlign: \"left\",\r\n    // maxWidth: \"300px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  mainGrid: {\r\n    marginBottom: \"0.5rem\",\r\n  },\r\n  hr: {\r\n    borderStyle: \"none\",\r\n    borderTopStyle: \"dotted\",\r\n    borderWidth: \"5px\",\r\n    borderColor: \"grey\",\r\n    width: \"6%\",\r\n    margin: \"2rem auto\",\r\n  },\r\n}));\r\n\r\nexport default function Services() {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1500,\r\n    });\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ overflow: \"hidden\" }} data-aos=\"fade-up\">\r\n        <div>\r\n          <Typography\r\n            display=\"block\"\r\n            style={{\r\n              fontSize: \"2.25em\",\r\n              fontFamily: \"Courgette\",\r\n              padding: \"0.5em\",\r\n            }}\r\n          >\r\n            <strong>Features & Services</strong>\r\n          </Typography>\r\n          <hr\r\n            style={{\r\n              width: \"75px\",\r\n              textAlign: \"center\",\r\n              height: \"3px\",\r\n              background: \"#2E86AB\",\r\n              padding: 0,\r\n              marginTop: 0,\r\n              marginBottom: \"2em\",\r\n            }}\r\n          />\r\n\r\n          <Grid container className={classes.mainGrid}>\r\n            <Grid\r\n              item\r\n              className={classes.gridImageContainer}\r\n              xs={12}\r\n              sm={12}\r\n              md={6}\r\n            >\r\n              <img className={classes.imgFluid} src={img1} alt=\"screenshot\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <ul style={{ listStyle: \"none\", marginRight: \"2rem\" }}>\r\n                <li>\r\n                  <p\r\n                    className={classes.paragraphTitle}\r\n                    style={{ marginTop: \"0.75rem\" }}\r\n                  >\r\n                    WBS Formatting\r\n                    <p className={classes.paragraphContent}>\r\n                      Each activity laid separately in the app.\r\n                      <br />\r\n                      <Typography style={{ color: \"#2E86AB\" }}>\r\n                        <strong>\r\n                          Execution, Planning, Purchase, Quality, Safety,\r\n                          Checklist and Reports-Status\r\n                        </strong>\r\n                      </Typography>\r\n                    </p>\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p className={classes.paragraphTitle}>\r\n                    Reporting\r\n                    <p className={classes.paragraphContent}>\r\n                      <ul>\r\n                        <li>Daily task updating(Activity Wise)</li>\r\n                        <li> Checklist Filling(Activity Wise) </li>\r\n                        <li> Updating quality - related issues</li>\r\n                        <li>Updating safety-related issues</li>\r\n                      </ul>\r\n                    </p>\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p className={classes.paragraphTitle}>\r\n                    Store Management Facility\r\n                    <p className={classes.paragraphContent}>\r\n                      <ul>\r\n                        <li>Material Management</li>\r\n                        <li>Requisition Management </li>\r\n                      </ul>\r\n                    </p>\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p className={classes.paragraphTitle}>\r\n                    Communication Management\r\n                    <p className={classes.paragraphContent}>\r\n                      Elimination of communication gap between the site team and\r\n                      the office team.\r\n                    </p>\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <hr className={classes.hr} />\r\n\r\n        <Grid container className={classes.mainGrid}>\r\n          <Grid item xs={12} sm={12} md={6}>\r\n            <ul style={{ listStyle: \"none\" }}>\r\n              <li>\r\n                <p\r\n                  className={classes.paragraphTitle}\r\n                  style={{ marginTop: \"0.75rem\" }}\r\n                >\r\n                  Execution\r\n                  <p className={classes.paragraphContent}>\r\n                    All construction activities and their status monitoring is\r\n                    taken care in this feature.\r\n                  </p>\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p className={classes.paragraphTitle}>\r\n                  Quality & Safety\r\n                  <p className={classes.paragraphContent}>\r\n                    Remarks for quality and safety can be updated via. picture\r\n                    format for actual reality.\r\n                  </p>\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p className={classes.paragraphTitle}>\r\n                  Planning\r\n                  <p className={classes.paragraphContent}>\r\n                    Ratio of actual work to planned work can be precisely\r\n                    calculated.\r\n                  </p>\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p className={classes.paragraphTitle}>\r\n                  Daily Task (To Do List)\r\n                  <p className={classes.paragraphContent}>\r\n                    Completion of daily tasks is the backbone for every monthly\r\n                    or weekly report. Allotment of daily tasks and updating of\r\n                    the same has never been this simple.\r\n                  </p>\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p className={classes.paragraphTitle}>\r\n                  Purchase\r\n                  <p className={classes.paragraphContent}>\r\n                    Keeps track of purchase of material and details are\r\n                    displayed across teams.\r\n                  </p>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            className={classes.gridImageContainer}\r\n            xs={12}\r\n            sm={12}\r\n            md={6}\r\n          >\r\n            <img\r\n              className={classes.imgFluid}\r\n              src={img2}\r\n              alt=\"screenshot\"\r\n              style={{ marginTop: \"2em\" }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst Problems = () => {\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f3f5f8\" }}>\r\n      <div style={{ overflow: \"hidden\" }} data-aos={\"fade-right\"}>\r\n        <div style={{ textAlign: \"center\", marginBottom: 10 }}>\r\n          <div>\r\n            <Typography\r\n              display=\"block\"\r\n              style={{\r\n                fontSize: \"2.25em\",\r\n                fontFamily: \"Courgette\",\r\n                padding: \"0.5em\",\r\n              }}\r\n            >\r\n              <strong>Problems Faced</strong>\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                width: \"75px\",\r\n                textAlign: \"center\",\r\n                height: \"3px\",\r\n                background: \"#2E86AB\",\r\n                padding: 0,\r\n                marginTop: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Grid container justify=\"space-evenly\">\r\n          <Grid item>\r\n            <Typography\r\n              // variant=\"body1\"\r\n              style={{ maxWidth: 500, fontSize: \"1.25em\" }}\r\n            >\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  <strong>Collection/Arrangement of data</strong> is the biggest\r\n                  problem in the current system of the{\" \"}\r\n                  <strong>Construction Industry</strong>.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  The amount of <strong>DUPLICITY</strong> and extra hard work\r\n                  that is required for this duty is endless.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  The root cause is the{\" \"}\r\n                  <strong>LACK OF USE OF TECHNOLOGY</strong>.\r\n                </li>\r\n              </ul>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              // variant=\"body1\"\r\n              style={{ maxWidth: 500, fontSize: \"1.25em\" }}\r\n            >\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  <strong>Data Monitoring</strong> has always been a difficult\r\n                  task for a Site Engineer.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  <strong>Maintaining DPR</strong>, converting it to{\" \"}\r\n                  <strong>MPR</strong> then summarizing all the inputs to actual{\" \"}\r\n                  <strong>Work Status Report</strong> has proven to be a very\r\n                  tedious process.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  <strong>Communication Gap</strong> is created while\r\n                  transferring the data from junior level to senior level.\r\n                </li>\r\n              </ul>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      {/* <div>\r\n        <div style={{ textAlign: \"center\", marginBottom: 10 }}>\r\n          <div>\r\n            <Typography\r\n              variant=\"overline\"\r\n              display=\"block\"\r\n              style={{ fontSize: \"1.75em\" }}\r\n            >\r\n              <strong>HOW?</strong>\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                width: \"75px\",\r\n                textAlign: \"center\",\r\n                height: \"3px\",\r\n                background: \"#2E86AB\",\r\n                padding: 0,\r\n                marginTop: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Grid container justify=\"space-evenly\">\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"body1\"\r\n              style={{ maxWidth: 500, fontSize: \"7 em\" }}\r\n            >\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  Result oriented input is the solution that we are offering.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  Elimination of duplicity to increase the efficiency and\r\n                  productivity.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  The solution to everything is technology, or in now a days\r\n                  smart and efficient use of technology.\r\n                </li>\r\n              </ul>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"body1\"\r\n              style={{ maxWidth: 500, fontSize: \"7 em\" }}\r\n            >\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  Solution:\r\n                  <br />\r\n                  Real time input,tracking and monitoring on all levels.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  Solution:\r\n                  <br />\r\n                  Option based input, in a predefined structure to auto generate\r\n                  percentage based reports.\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li style={{ listStyleType: \"disc\", color: \"black\" }}>\r\n                  Solution:\r\n                  <br />\r\n                  Application based platform for ease of use and mobility.\r\n                </li>\r\n              </ul>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Problems;\r\n","export default __webpack_public_path__ + \"static/media/team.cac63634.svg\";","export default __webpack_public_path__ + \"static/media/business.d9d85c23.PNG\";","export default __webpack_public_path__ + \"static/media/founder.b0486248.PNG\";","export default __webpack_public_path__ + \"static/media/development.c1fa7426.PNG\";","import React, { useEffect } from \"react\";\r\nimport { Grid, Typography, makeStyles } from \"@material-ui/core\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport aboutus from \"../assets/team.svg\";\r\nimport founder from \"../assets/founder.PNG\";\r\nimport business from \"../assets/business.PNG\";\r\nimport development from \"../assets/development.PNG\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  imgFluid: {\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ overflow: \"hidden\", backgroundColor: \"#f3f5f8\" }}>\r\n      <div style={{ marginTop: 20, marginBottom: 20 }} data-aos={\"fade-left\"}>\r\n        <div style={{ textAlign: \"center\", marginBottom: 25 }}>\r\n          <div>\r\n            <Typography\r\n              display=\"block\"\r\n              style={{\r\n                fontSize: \"2.25em\",\r\n                fontFamily: \"Courgette\",\r\n                padding: \"0.5em\",\r\n              }}\r\n            >\r\n              <strong>About Us</strong>\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                width: \"75px\",\r\n                textAlign: \"center\",\r\n                height: \"4px\",\r\n                background: \"#2E86AB\",\r\n                padding: 0,\r\n                marginTop: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item style={{ alignItems: \"center\" }}>\r\n            <img\r\n              src={aboutus}\r\n              width=\"175\"\r\n              className={classes.imgFluid}\r\n              alt=\"screenshot\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Grid\r\n            item\r\n            style={{\r\n              textAlign: \"center\",\r\n              maxWidth: 800,\r\n              margin: \"0.5em\",\r\n              fontSize: \"1.5em\",\r\n            }}\r\n          >\r\n            <strong>\r\n              <i>\r\n                We, at Daksh Constructions, are engineers turned entrepreneurs\r\n                who have faced an actual site problem in our carriers, the urge\r\n                to simplify complicated things has always been with us.\r\n              </i>\r\n            </strong>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          {/* <Grid\r\n            item\r\n            style={{\r\n              margin: \"1.5em\",\r\n              fontSize: \"1.5em\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                maxWidth: \"275px\",\r\n                height: \"auto\",\r\n                boxShadow: \"5px 5px 60px #0000003c\",\r\n                borderRadius: \" 5px\",\r\n                marginBottom: \"1em\",\r\n              }}\r\n              src={founder}\r\n            />\r\n            <center>\r\n              <strong>Kshitij Tikhe</strong>\r\n            </center>\r\n            <div style={{ color: \"#2e86ab\", fontSize: \"0.9em\" }}>\r\n              <strong>\r\n                <center>Founder</center>\r\n              </strong>\r\n            </div>\r\n          </Grid> */}\r\n          <Grid\r\n            item\r\n            style={{\r\n              margin: \"1.5em\",\r\n              fontSize: \"1.5em\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                maxWidth: \"275px\",\r\n                height: \"auto\",\r\n                boxShadow: \"5px 5px 60px #0000003c\",\r\n                borderRadius: \" 5px\",\r\n                marginBottom: \"1em\",\r\n              }}\r\n              src={business}\r\n            />\r\n            <center>\r\n              <strong>BRAND99</strong>\r\n            </center>\r\n\r\n            <div style={{ color: \"#2e86ab\", fontSize: \"0.9em\" }}>\r\n              <strong>\r\n                <center>Business Operations Team</center>\r\n              </strong>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{\r\n              margin: \"1.5em\",\r\n              fontSize: \"1.5em\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                maxWidth: \"275px\",\r\n                height: \"auto\",\r\n                boxShadow: \"5px 5px 60px #0000001c\",\r\n                borderRadius: \" 5px\",\r\n                marginBottom: \"1em\",\r\n              }}\r\n              src={development}\r\n            />\r\n            <center>\r\n              <strong>SDS, CoEP</strong>\r\n            </center>\r\n            <div style={{ color: \"#2e86ab\", fontSize: \"0.9em\" }}>\r\n              <strong>\r\n                <center>App Development and Support</center>\r\n              </strong>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#f3f5f8\",\r\n        paddingBottom: \"1.5em\",\r\n      }}\r\n    >\r\n      <div style={{ textAlign: \"center\", marginBottom: 10 }}>\r\n        <div>\r\n          <Typography\r\n            display=\"block\"\r\n            style={{\r\n              fontSize: \"2.25em\",\r\n              fontFamily: \"Courgette\",\r\n              paddingBottom: \"0.5em\",\r\n              paddingLeft: \"0.5em\",\r\n              paddingRight: \"0.5em\",\r\n            }}\r\n          >\r\n            <strong>Demo</strong>\r\n          </Typography>\r\n          <hr\r\n            style={{\r\n              width: \"75px\",\r\n              textAlign: \"center\",\r\n              height: \"3px\",\r\n              background: \"#2E86AB\",\r\n              padding: 0,\r\n              marginTop: 0,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {window.innerWidth > 768 ? (\r\n        <div style={{ paddingBottom: \"1.5em\" }}>\r\n          <center>\r\n            <ReactPlayer\r\n              url=\"videos/enbuild.mp4\"\r\n              controls={true}\r\n              playing={true}\r\n              width=\"40%\"\r\n              height=\"20%\"\r\n            />\r\n          </center>\r\n        </div>\r\n      ) : (\r\n        <div style={{ paddingBottom: \"1.5em\" }}>\r\n          <center>\r\n            <ReactPlayer\r\n              url=\"videos/enbuild.mp4\"\r\n              controls={true}\r\n              playing={true}\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </center>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Demo;\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, Typography, makeStyles } from \"@material-ui/core\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport aboutus from \"../assets/team.svg\";\r\nimport founder from \"../assets/founder.PNG\";\r\nimport business from \"../assets/business.PNG\";\r\nimport development from \"../assets/development.PNG\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  imgFluid: {\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ overflow: \"hidden\", backgroundColor: \"#f3f5f8\" }}>\r\n      <div style={{ marginTop: 20, marginBottom: 20 }} data-aos={\"fade-left\"}>\r\n        <div style={{ textAlign: \"center\", marginBottom: 25 }}>\r\n          <div>\r\n            <Typography\r\n              display=\"block\"\r\n              style={{\r\n                fontSize: \"2.25em\",\r\n                fontFamily: \"Courgette\",\r\n                padding: \"0.5em\",\r\n              }}\r\n            >\r\n              <strong>Contact Us</strong>\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                width: \"75px\",\r\n                textAlign: \"center\",\r\n                height: \"4px\",\r\n                background: \"#2E86AB\",\r\n                padding: 0,\r\n                marginTop: 0,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          spacing={2}\r\n          style={{ marginBottom: \"2em\" }}\r\n        >\r\n          <Grid item style={{ alignItems: \"center\", fontSize: \"1.35em\" }}>\r\n            <strong>Contact Number</strong> :{\" \"}\r\n            <a href=\"tel:+91 8888840639\">+91 8888840639</a>\r\n          </Grid>\r\n          <Grid item style={{ alignItems: \"center\", fontSize: \"1.35em\" }}>\r\n            <strong>Email ID</strong> :{\" \"}\r\n            <a href=\"mailto:info@enbuild.in\">info@enbuild.in</a>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport TaglineLoginButton from \"./components/TaglineLoginButton\";\r\nimport Timeline from \"./components/Timeline\";\r\nimport Objective from \"./components/Objective\";\r\nimport Services from \"./components/Services\";\r\nimport Problems from \"./components/Problems\";\r\nimport About from \"./components/About\";\r\nimport Visitor from \"./PopUp/Visitor\";\r\nimport Demo from \"./components/Demo\";\r\nimport Contact from \"./components/ContactUs\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div id=\"user\">\r\n        <Visitor />\r\n      </div>\r\n      <TaglineLoginButton />\r\n      <div id=\"about\">\r\n        <About />\r\n      </div>\r\n      <div id=\"problems\">\r\n        <Problems />\r\n      </div>\r\n      <div id=\"objective\">\r\n        <Objective />\r\n      </div>\r\n      <div id=\"timeline\">\r\n        <Timeline />\r\n      </div>\r\n      <div id=\"services\">\r\n        <Services />\r\n      </div>\r\n      <div id=\"demo\">\r\n        <Demo />\r\n      </div>\r\n      <div id=\"contact\">\r\n        <Contact />\r\n      </div>\r\n      <footer\r\n        style={{\r\n          backgroundColor: \"#f3f5f8\",\r\n          fontSize: \"1.25em\",\r\n          paddingTop: 10,\r\n          paddingBottom: 10,\r\n        }}\r\n      >\r\n        <strong>\r\n          <center>™ 2021 Daksh Constructions. All Rights Reserved.</center>\r\n        </strong>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Checklist from \"./Checklist\";\r\nimport NewProject from \"./NewProject\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport SubProjectList from \"./SubprojectList\";\r\nimport Issues from \"./Issues\";\r\nimport Material from \"./Material\";\r\nimport Todo from \"./ToDos\";\r\nimport Activities from \"./activities\";\r\nimport Overview from \"./overview\";\r\nimport Wbs from \"./wbs/wbs\";\r\nimport ViewUpdates from \"./overview/ViewUpdates\";\r\nimport SubActivities from \"./activities/SubActivities\";\r\nimport SubTaskData from \"./activities/SubTaskData\";\r\nimport Planing from \"./Planning/Display\";\r\nimport Store from \"./Store/Display\";\r\nimport ActivityChecklist from \"./Checklist/ActivityChecklist\";\r\nimport DetailsChecklist from \"./Checklist/DetailsChecklist\";\r\nimport AddChecklist from \"./Checklist/AddChecklist\";\r\nimport BarChart from \"./BarChart\";\r\nimport Monitoring from \"./Monitoring/Display\";\r\nimport AddMaterialList from \"./AddMaterialList\";\r\nimport EditUser from \"./EditUser\";\r\nimport Support from \"./Support\";\r\nimport Home from \"./Home\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport DailyProgressReport from \"./Daily Progress Report/DailyProgressReport\";\r\nimport Library from \"./Library\";\r\nimport Labour from \"./Library/Labour\";\r\nimport Equipment from \"./Library/Equipment\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Enbuild\",\r\n    component: props => <Home {...props} />,\r\n    isProtected: false,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login Page\",\r\n    component: props => <Login {...props} />,\r\n    isProtected: false,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    name: \"Register Page\",\r\n    component: props => <Register {...props} />,\r\n    isProtected: false,\r\n  },\r\n  {\r\n    path: \"/registerAdmin\",\r\n    name: \"Register Page\",\r\n    component: props => <Register {...props} />,\r\n    isProtected: false,\r\n  },\r\n  {\r\n    path: \"/store\",\r\n    name: \"Store\",\r\n    component: props => <Store {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/overview\",\r\n    name: \"Overview\",\r\n    component: props => <Overview {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/overview/viewupdates\",\r\n    name: \"ViewUpdates\",\r\n    component: props => <ViewUpdates {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/wbs\",\r\n    name: \"WBS report\",\r\n    component: props => <Wbs {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/activities\",\r\n    name: \"Activities\",\r\n    component: props => <Activities {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/activities/:activity/:subactivity\",\r\n    name: \"SubActivities\",\r\n    component: props => <SubActivities {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/activities/:activity/:subactivity/:floorNumber/:subTaskIndex\",\r\n    name: \"SubTaskData\",\r\n    component: props => <SubTaskData {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/checklist/:type\",\r\n    name: \"Checklist\",\r\n    component: props => <Checklist {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/checklist/:type/:defaultChecklist\",\r\n    name: \"ActivityChecklist\",\r\n    component: props => <ActivityChecklist {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/checklist/:type/:defaultChecklist/addChecklist\",\r\n    name: \"Add Checklist\",\r\n    component: props => <AddChecklist {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/projectList\",\r\n    name: \"Project List\",\r\n    component: props => <ProjectList {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/subprojectList\",\r\n    name: \"SubProjects\",\r\n    component: props => <SubProjectList {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/addProject\",\r\n    name: \"Add Project\",\r\n    component: props => <NewProject {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/material\",\r\n    name: \"Material\",\r\n    component: props => <Material {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/todo\",\r\n    name: \"Todo\",\r\n    component: props => <Todo {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/issues/:type\",\r\n    name: \"Issues\",\r\n    component: props => <Issues {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/monitoring\",\r\n    name: \"Monitoring\",\r\n    component: props => <Monitoring {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/plan\",\r\n    name: \"Planning\",\r\n    component: props => <Planing {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/barchart\",\r\n    name: \"Bar Chart\",\r\n    component: props => <BarChart {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/dpr\",\r\n    name: \"Daily Progress Report\",\r\n    component: props => <DailyProgressReport {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/addMaterial\",\r\n    name: \"Add Material\",\r\n    component: props => <AddMaterialList {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/editUser\",\r\n    name: \"Edit User\",\r\n    component: props => <EditUser {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    name: \"Support\",\r\n    component: props => <Support {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    component: props => <AdminDashboard {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/materials\",\r\n    name: \"Materials\",\r\n    component: props => <Library {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/labour\",\r\n    name: \"Labour\",\r\n    component: props => <Labour {...props} />,\r\n    isProtected: true,\r\n  },\r\n  {\r\n    path: \"/equipment\",\r\n    name: \"Equipment\",\r\n    component: props => <Equipment {...props} />,\r\n    isProtected: true,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\n//Blue and Red \"#2E86AB\" & \"#F24236\"\r\n\r\nvar primary = \"#345BAE\";\r\nvar secondary = \"#F24236\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n    },\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      variant: \"contained\",\r\n      color: \"primary\",\r\n    },\r\n    MuiTextField: {\r\n      variant: \"outlined\",\r\n    },\r\n    MuiCard: {\r\n      elevation: 2,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { store } from \"./Redux/store\";\r\nimport AppBar from \"./Components/NavBar\";\r\n\r\nimport Routes from \"./Pages\";\r\nimport ProtectedRoute from \"./Pages/ProtectedRoute\";\r\n\r\nimport theme from \"./theme\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst loading = () => (\r\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <AppBar />\r\n          <Suspense fallback={loading()}>\r\n            <Switch>\r\n              {Routes.map((item, index) => {\r\n                if (item.isProtected) {\r\n                  return (\r\n                    <ProtectedRoute\r\n                      key={index}\r\n                      exact\r\n                      path={item.path}\r\n                      component={item.component}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <Route\r\n                      key={index}\r\n                      exact\r\n                      path={item.path}\r\n                      name={item.name}\r\n                      render={item.component}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n            </Switch>\r\n          </Suspense>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"./config.js\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport GA4React from \"ga-4-react\";\r\nconst ga4react = new GA4React(process.env.REACT_APP_GA_TRACKING_CODE);\r\n// alert(process.env.REACT_APP_GA_TRACKING_CODE);\r\n(async _ => {\r\n  try {\r\n    await ga4react.initialize();\r\n  } catch (err) {\r\n    console.log(\"using adblocker\");\r\n  }\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n})();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}